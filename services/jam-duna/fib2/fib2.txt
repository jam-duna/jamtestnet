// RO data = 36/36 bytes
// RW data = 8/8 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [10, 0, 255, 255, 12, 0, 255, 255, 14, 0, 255, 255, 16, 0, 255, 255, 18, 0, 255, 255, 24, 0, 255, 255, 26, 0, 255, 255, 28, 0, 255, 255, 30, 0, 255, 255]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85]
// Instructions = 931
// Code size = 2991 bytes

      :                          @0
     0: 28 ab 00 00 00           jump @27
      :                          @1
     5: 28 03 01 00 00           jump @32
      :                          @2
    10: 28 94 0a                 jump @107
      :                          @3
    13: 51 08 9b 00              jump @24 if a1 == 0
      :                          @4
    17: 64 79                    a2 = a0
    19: 7c 77                    a0 = u8 [a0]
    21: 51 07 91 00              jump @23 if a0 == 0
      :                          @5
    25: 51 27 ff 00 90 00        jump @25 if a0 == 255
      :                          @6
    31: 6c 7a                    a3 = sext.b a0
    33: 57 0a 09                 jump @8 if a3 <s 0
      :                          @7
    36: 33 0a                    a3 = 0
    38: 33 08                    a1 = 0
    40: 28 73                    jump @22
      :                          @8
    42: 55 27 c0 00 0d           jump @10 if a0 >=u 192
      :                          @9
    47: 33 0a 01                 a3 = 0x1
    50: 33 0b 80                 a4 = 0xffffffffffffff80
    53: 28 4a                    jump @19
      :                          @10
    55: 55 27 e0 00 0e           jump @12 if a0 >=u 224
      :                          @11
    60: 33 0a 02                 a3 = 0x2
    63: 33 0b 40 ff              a4 = 0xffffffffffffff40
    67: 28 3c                    jump @19
      :                          @12
    69: 55 27 f0 00 0e           jump @14 if a0 >=u 240
      :                          @13
    74: 33 0a 03                 a3 = 0x3
    77: 33 0b 20 ff              a4 = 0xffffffffffffff20
    81: 28 2e                    jump @19
      :                          @14
    83: 55 27 f8 00 0e           jump @16 if a0 >=u 248
      :                          @15
    88: 33 0a 04                 a3 = 0x4
    91: 33 0b 10 ff              a4 = 0xffffffffffffff10
    95: 28 20                    jump @19
      :                          @16
    97: 55 27 fc 00 0e           jump @18 if a0 >=u 252
      :                          @17
   102: 33 0a 05                 a3 = 0x5
   105: 33 0b 08 ff              a4 = 0xffffffffffffff08
   109: 28 12                    jump @19
      :                          @18
   111: 88 7a fe 00              a3 = a0 <u 0xfe
   115: 33 0b 04 ff              a4 = 0xffffffffffffff04
   119: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
   123: 85 aa 07                 a3 = a3 ^ 0x7
   126: 01                       fallthrough
      :                          @19
   127: ae 8a 2b                 jump @26 if a3 >=u a1
      :                          @20
   130: 33 08                    a1 = 0
   132: c8 b7 07                 a0 = a0 + a4
   135: 64 ab                    a4 = a3
   137: 01                       fallthrough
      :                          @21
   138: c8 b9 0c                 a5 = a2 + a4
   141: 7c cc                    a5 = u8 [a5]
   143: 97 88 08                 a1 = a1 << 0x8
   146: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   149: d4 c8 08                 a1 = a1 | a5
   152: 52 0b f2                 jump @21 if a4 != 0
      :                          @22
   155: 8a a9 03                 i32 a2 = a3 << 0x3
   158: cf 97 07                 a0 = a0 << a2
   161: c8 87 07                 a0 = a0 + a1
   164: 32 00                    ret
      :                          @23
   166: 32 00                    ret
      :                          @24
   168: 00                       trap
      :                          @25
   169: 00                       trap
      :                          @26
   170: 00                       trap
      :                          @27 [export #0: 'refine']
   171: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   174: 7b 10 18                 u64 [sp + 0x18] = ra
   177: 7b 15 10                 u64 [sp + 0x10] = s0
   180: 48 11 08                 u32 [sp + 8] = 0
   183: 49 01                    u64 [sp + 0] = 0
   185: 64 17                    a0 = sp
   187: 33 09 0c                 a2 = 0xc
   190: 33 0a 05                 a3 = 0x5
   193: 33 08                    a1 = 0
   195: 33 0b                    a4 = 0
   197: 33 0c                    a5 = 0
   199: 0a 12                    ecalli 18 // 'fetch'
   201: 01                       fallthrough
      :                          @28
   202: 51 17 ff 14              jump @30 if a0 == 4294967295
      :                          @29
   206: 81 17 04                 a0 = i32 [sp + 0x4]
   209: 81 18 08                 a1 = i32 [sp + 0x8]
   212: 81 19                    a2 = i32 [sp]
   214: be 78 08                 i32 a1 = a1 + a0
   217: 83 99 01                 i32 a2 = a2 + 0x1
   220: 28 0b                    jump @31
      :                          @30
   222: 33 07                    a0 = 0
   224: 33 09 01                 a2 = 0x1
   227: 33 08 01                 a1 = 0x1
   230: 01                       fallthrough
      :                          @31
   231: 7a 19                    u32 [sp] = a2
   233: 7a 18 04                 u32 [sp + 0x4] = a1
   236: 7a 17 08                 u32 [sp + 0x8] = a0
   239: 33 05 0c                 s0 = 0xc
   242: 64 17                    a0 = sp
   244: 33 08 0c                 a1 = 0xc
   247: 0a 13                    ecalli 19 // 'export'
   249: 64 58                    a1 = s0
   251: 64 17                    a0 = sp
   253: 82 10 18                 ra = u64 [sp + 0x18]
   256: 82 15 10                 s0 = u64 [sp + 0x10]
   259: 95 11 20                 sp = sp + 0x20
   262: 32 00                    ret
      :                          @32 [export #1: 'accumulate']
   264: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   268: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   272: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   276: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   280: 95 11 58 fc              sp = sp + 0xfffffffffffffc58
   284: 64 85                    s0 = a1
   286: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
   289: 51 05 77 09              jump @101 if s0 == 0
      :                          @33
   293: 95 7b 08                 a4 = a0 + 0x8
   296: 7d b8                    a1 = i8 [a4]
   298: 33 06 01                 s1 = 0x1
   301: 5a 08 69                 jump @41 if a1 >s 0
      :                          @34
   304: 84 88 ff 00              a1 = a1 & 0xff
   308: 83 89 ff                 i32 a2 = a1 + 0xffffffffffffffff
   311: 84 99 ff 00              a2 = a2 & 0xff
   315: 33 0a bf 00              a3 = 0xbf
   319: 33 06 02                 s1 = 0x2
   322: ac a9 54                 jump @41 if a2 <u a3
      :                          @35
   325: 84 89 e0 00              a2 = a1 & 0xe0
   329: 33 0a c0 00              a3 = 0xc0
   333: 33 06 03                 s1 = 0x3
   336: aa a9 46                 jump @41 if a2 == a3
      :                          @36
   339: 84 89 f0 00              a2 = a1 & 0xf0
   343: 33 0a e0 00              a3 = 0xe0
   347: 33 06 04                 s1 = 0x4
   350: aa a9 38                 jump @41 if a2 == a3
      :                          @37
   353: 84 89 f8 00              a2 = a1 & 0xf8
   357: 33 0a f0 00              a3 = 0xf0
   361: 33 06 05                 s1 = 0x5
   364: aa a9 2a                 jump @41 if a2 == a3
      :                          @38
   367: 84 89 fc 00              a2 = a1 & 0xfc
   371: 33 0a f8 00              a3 = 0xf8
   375: 33 06 06                 s1 = 0x6
   378: aa a9 1c                 jump @41 if a2 == a3
      :                          @39
   381: 84 89 fe 00              a2 = a1 & 0xfe
   385: 33 0a fc 00              a3 = 0xfc
   389: 33 06 07                 s1 = 0x7
   392: aa a9 0e                 jump @41 if a2 == a3
      :                          @40
   395: 88 88 fe 00              a1 = a1 <u 0xfe
   399: 85 86 01                 s1 = a1 ^ 0x1
   402: 97 66 03                 s1 = s1 << 0x3
   405: 01                       fallthrough
      :                          @41
   406: 7b 15 20                 u64 [sp + 0x20] = s0
   409: ac 65 00 09              jump @102 if s0 <u s1
      :                          @42
   413: 80 77 04                 a0 = u32 [a0 + 0x4]
   416: 7b 17 28                 u64 [sp + 0x28] = a0
   419: 64 b5                    s0 = a4
   421: 64 b7                    a0 = a4
   423: 64 68                    a1 = s1
   425: 50 10 02 64 fe           ra = 2, jump @3
      :                          @43 [@dyn 1]
   430: 51 07 29                 jump @48 if a0 == 0
      :                          @44
   433: 82 19 20                 a2 = u64 [sp + 0x20]
   436: aa 69 e7 08              jump @104 if a2 == s1
      :                          @45
   440: c8 56 07                 a0 = s1 + s0
   443: 7c 78                    a1 = u8 [a0]
   445: 95 7b 01                 a4 = a0 + 0x1
   448: 85 67 ff                 a0 = s1 ^ 0xffffffffffffffff
   451: c8 79 05                 s0 = a2 + a0
   454: 51 08 18                 jump @49 if a1 == 0
      :                          @46
   457: 33 06                    s1 = 0
   459: 33 0a                    a3 = 0
   461: 95 58 c0                 a1 = s0 + 0xffffffffffffffc0
   464: 52 08 a1 00              jump @63 if a1 != 0
      :                          @47
   468: 28 23 01                 jump @75
      :                          @48
   471: 33 06                    s1 = 0
   473: 33 0a                    a3 = 0
   475: 28 1c 01                 jump @75
      :                          @49
   478: 51 05 79                 jump @61 if s0 == 0
      :                          @50
   481: 7d b7                    a0 = i8 [a4]
   483: 33 06 01                 s1 = 0x1
   486: 5a 07 5a                 jump @58 if a0 >s 0
      :                          @51
   489: 84 77 ff 00              a0 = a0 & 0xff
   493: 83 78 ff                 i32 a1 = a0 + 0xffffffffffffffff
   496: 84 88 ff 00              a1 = a1 & 0xff
   500: 33 06 02                 s1 = 0x2
   503: 53 28 bf 00 49           jump @58 if a1 <u 191
      :                          @52
   508: 84 78 e0 00              a1 = a0 & 0xe0
   512: 33 06 03                 s1 = 0x3
   515: 51 28 c0 00 3d           jump @58 if a1 == 192
      :                          @53
   520: 84 78 f0 00              a1 = a0 & 0xf0
   524: 33 06 04                 s1 = 0x4
   527: 51 28 e0 00 31           jump @58 if a1 == 224
      :                          @54
   532: 84 78 f8 00              a1 = a0 & 0xf8
   536: 33 06 05                 s1 = 0x5
   539: 51 28 f0 00 25           jump @58 if a1 == 240
      :                          @55
   544: 84 78 fc 00              a1 = a0 & 0xfc
   548: 33 06 06                 s1 = 0x6
   551: 51 28 f8 00 19           jump @58 if a1 == 248
      :                          @56
   556: 84 78 fe 00              a1 = a0 & 0xfe
   560: 33 06 07                 s1 = 0x7
   563: 51 28 fc 00 0d           jump @58 if a1 == 252
      :                          @57
   568: 33 06 08                 s1 = 0x8
   571: 53 27 fe 00 1c           jump @61 if a0 <u 254
      :                          @58
   576: ac 65 5c 08              jump @105 if s0 <u s1
      :                          @59
   580: 64 b7                    a0 = a4
   582: 64 68                    a1 = s1
   584: 7b 1b 20                 u64 [sp + 0x20] = a4
   587: 50 10 04 c2 fd           ra = 4, jump @3
      :                          @60 [@dyn 2]
   592: 82 1b 20                 a4 = u64 [sp + 0x20]
   595: 64 7a                    a3 = a0
   597: 28 07                    jump @62
      :                          @61
   599: 33 06                    s1 = 0
   601: 33 0a                    a3 = 0
   603: 01                       fallthrough
      :                          @62
   604: c8 6b 07                 a0 = a4 + s1
   607: c8 a7 0b                 a4 = a0 + a3
   610: c8 a6 06                 s1 = s1 + a3
   613: c9 65 05                 s0 = s0 - s1
   616: 64 76                    s1 = a0
   618: 95 58 c0                 a1 = s0 + 0xffffffffffffffc0
   621: 51 08 8a 00              jump @75 if a1 == 0
      :                          @63
   625: 95 b7 40                 a0 = a4 + 0x40
   628: 7d 7b                    a4 = i8 [a0]
   630: 33 09 01                 a2 = 0x1
   633: 5a 0b 72                 jump @73 if a4 >s 0
      :                          @64
   636: 64 65                    s0 = s1
   638: 84 b6 ff 00              s1 = a4 & 0xff
   642: 83 69 ff                 i32 a2 = s1 + 0xffffffffffffffff
   645: 84 9b ff 00              a4 = a2 & 0xff
   649: 33 0c bf 00              a5 = 0xbf
   653: 33 09 02                 a2 = 0x2
   656: ac cb 54                 jump @71 if a4 <u a5
      :                          @65
   659: 84 6b e0 00              a4 = s1 & 0xe0
   663: 33 0c c0 00              a5 = 0xc0
   667: 33 09 03                 a2 = 0x3
   670: aa cb 46                 jump @71 if a4 == a5
      :                          @66
   673: 84 6b f0 00              a4 = s1 & 0xf0
   677: 33 0c e0 00              a5 = 0xe0
   681: 33 09 04                 a2 = 0x4
   684: aa cb 38                 jump @71 if a4 == a5
      :                          @67
   687: 84 6b f8 00              a4 = s1 & 0xf8
   691: 33 0c f0 00              a5 = 0xf0
   695: 33 09 05                 a2 = 0x5
   698: aa cb 2a                 jump @71 if a4 == a5
      :                          @68
   701: 84 6b fc 00              a4 = s1 & 0xfc
   705: 33 0c f8 00              a5 = 0xf8
   709: 33 09 06                 a2 = 0x6
   712: aa cb 1c                 jump @71 if a4 == a5
      :                          @69
   715: 84 6b fe 00              a4 = s1 & 0xfe
   719: 33 0c fc 00              a5 = 0xfc
   723: 33 09 07                 a2 = 0x7
   726: aa cb 0e                 jump @71 if a4 == a5
      :                          @70
   729: 33 0b fe 00              a4 = 0xfe
   733: 33 09 08                 a2 = 0x8
   736: ac b6 b3 07              jump @100 if s1 <u a4
      :                          @71
   740: ac 98 b9 07              jump @106 if a1 <u a2
      :                          @72
   744: 64 56                    s1 = s0
   746: 01                       fallthrough
      :                          @73
   747: 64 98                    a1 = a2
   749: 64 a5                    s0 = a3
   751: 50 10 06 1e fd           ra = 6, jump @3
      :                          @74 [@dyn 3]
   756: 64 5a                    a3 = s0
   758: 01                       fallthrough
      :                          @75
   759: 46 11 31                 u8 [sp + 49] = 0
   762: 81 65                    s0 = i32 [s1]
   764: 95 17 31                 a0 = sp + 0x31
   767: 33 08 01                 a1 = 0x1
   770: 7b 16 18                 u64 [sp + 0x18] = s1
   773: 64 69                    a2 = s1
   775: 7b 1a 20                 u64 [sp + 0x20] = a3
   778: 0a 03                    ecalli 3 // 'write'
   780: 46 11 32 6a              u8 [sp + 50] = 0x6a
   784: 46 11 33 61              u8 [sp + 51] = 0x61
   788: 46 11 34 6d              u8 [sp + 52] = 0x6d
   792: 46 11 35 44              u8 [sp + 53] = 0x44
   796: 46 11 36 4f              u8 [sp + 54] = 0x4f
   800: 46 11 37 54              u8 [sp + 55] = 0x54
   804: 46 11 38 6a              u8 [sp + 56] = 0x6a
   808: 46 11 39 0d              u8 [sp + 57] = 0xd
   812: 46 11 3a 4a              u8 [sp + 58] = 0x4a
   816: 46 11 3b 19              u8 [sp + 59] = 0x19
   820: 46 11 3c d1 00           u8 [sp + 60] = 0xd1
   825: 46 11 3d 99 00           u8 [sp + 61] = 0x99
   830: 46 11 3e 50              u8 [sp + 62] = 0x50
   834: 46 11 3f 57              u8 [sp + 63] = 0x57
   838: 46 11 40 13              u8 [sp + 64] = 0x13
   842: 46 11 41 fc 00           u8 [sp + 65] = 0xfc
   847: 46 11 42 65              u8 [sp + 66] = 0x65
   851: 46 11 43 f5 00           u8 [sp + 67] = 0xf5
   856: 46 11 44 31              u8 [sp + 68] = 0x31
   860: 46 11 45 03              u8 [sp + 69] = 0x3
   864: 46 11 46 8e 00           u8 [sp + 70] = 0x8e
   869: 46 11 47 73              u8 [sp + 71] = 0x73
   873: 33 0b f1 00              a4 = 0xf1
   877: 78 1b 48                 u8 [sp + 0x48] = a4
   880: 46 11 49 d8 00           u8 [sp + 73] = 0xd8
   885: 46 11 4a 85 00           u8 [sp + 74] = 0x85
   890: 46 11 4b 64              u8 [sp + 75] = 0x64
   894: 46 11 4c 56              u8 [sp + 76] = 0x56
   898: 46 11 4d 32              u8 [sp + 77] = 0x32
   902: 46 11 4e c8 00           u8 [sp + 78] = 0xc8
   907: 46 11 4f ae 00           u8 [sp + 79] = 0xae
   912: 46 11 50 50              u8 [sp + 80] = 0x50
   916: 33 0c 3c                 a5 = 0x3c
   919: 78 1c 51                 u8 [sp + 0x51] = a5
   922: 46 11 52 4f              u8 [sp + 82] = 0x4f
   926: 46 11 53 0c              u8 [sp + 83] = 0xc
   930: 46 11 54 4d              u8 [sp + 84] = 0x4d
   934: 46 11 55 5e              u8 [sp + 85] = 0x5e
   938: 46 11 56 19              u8 [sp + 86] = 0x19
   942: 46 11 57 a7 00           u8 [sp + 87] = 0xa7
   947: 46 11 58 bf 00           u8 [sp + 88] = 0xbf
   952: 46 11 59 a9 00           u8 [sp + 89] = 0xa9
   957: 46 11 5a bb 00           u8 [sp + 90] = 0xbb
   962: 46 11 5b 0f              u8 [sp + 91] = 0xf
   966: 46 11 5c a4 00           u8 [sp + 92] = 0xa4
   971: 46 11 5d 96 00           u8 [sp + 93] = 0x96
   976: 46 11 5e 87 00           u8 [sp + 94] = 0x87
   981: 46 11 5f 47              u8 [sp + 95] = 0x47
   985: 46 11 60 e6 00           u8 [sp + 96] = 0xe6
   990: 46 11 61 3d              u8 [sp + 97] = 0x3d
   994: 78 1c 62                 u8 [sp + 0x62] = a5
   997: 78 1b 63                 u8 [sp + 0x63] = a4
  1000: 46 11 64 e7 00           u8 [sp + 100] = 0xe7
  1005: 46 11 65 4a              u8 [sp + 101] = 0x4a
  1009: 46 11 66 49              u8 [sp + 102] = 0x49
  1013: 46 11 67 dd 00           u8 [sp + 103] = 0xdd
  1018: 46 11 68 c4 00           u8 [sp + 104] = 0xc4
  1023: 46 11 69 a6 00           u8 [sp + 105] = 0xa6
  1028: 46 11 6a ec 00           u8 [sp + 106] = 0xec
  1033: 46 11 6b a8 00           u8 [sp + 107] = 0xa8
  1038: 46 11 6c 9a 00           u8 [sp + 108] = 0x9a
  1043: 46 11 6d 6a              u8 [sp + 109] = 0x6a
  1047: 46 11 6e 6f              u8 [sp + 110] = 0x6f
  1051: 46 11 6f 33              u8 [sp + 111] = 0x33
  1055: 46 11 70 9d 00           u8 [sp + 112] = 0x9d
  1060: 46 11 71 a3 00           u8 [sp + 113] = 0xa3
  1065: 46 11 72 33              u8 [sp + 114] = 0x33
  1069: 46 11 73 7f              u8 [sp + 115] = 0x7f
  1073: 46 11 74 d2 00           u8 [sp + 116] = 0xd2
  1078: 46 11 75 eb 00           u8 [sp + 117] = 0xeb
  1083: 46 11 76 55              u8 [sp + 118] = 0x55
  1087: 46 11 77 07              u8 [sp + 119] = 0x7
  1091: 95 16 ff 07              s1 = sp + 0x7ff
  1095: 95 66 80 03              s1 = s1 + 0x380
  1099: 95 17 78                 a0 = sp + 0x78
  1102: 33 09 00 01              a2 = 0x100
  1106: 33 08                    a1 = 0
  1108: 50 10 08 00 07           ra = 8, jump @126
      :                          @76 [@dyn 4]
  1113: 7b 15 10                 u64 [sp + 0x10] = s0
  1116: 95 57 fe                 a0 = s0 + 0xfffffffffffffffe
  1119: 82 15 28                 s0 = u64 [sp + 0x28]
  1122: 56 17 08 4a 05           jump @91 if a0 >u 8
      :                          @77
  1127: 97 77 02                 a0 = a0 << 0x2
  1130: 33 08 00 00 01           a1 = 0x10000
  1135: c8 87 07                 a0 = a0 + a1
  1138: 81 77                    a0 = i32 [a0]
  1140: c8 87 07                 a0 = a0 + a1
  1143: 32 07                    jump [a0]
      :                          @78 [@dyn 5]
  1145: 95 18 32                 a1 = sp + 0x32
  1148: 33 09 03                 a2 = 0x3
  1151: 95 1a 78                 a3 = sp + 0x78
  1154: 33 0c 00 01              a5 = 0x100
  1158: 64 57                    a0 = s0
  1160: 33 0b                    a4 = 0
  1162: 0a 02                    ecalli 2 // 'read'
  1164: 95 16 ff 07              s1 = sp + 0x7ff
  1168: 95 66 80 03              s1 = s1 + 0x380
  1172: 46 16 01 01              u8 [s1 + 1] = 0x1
  1176: 7b 17 78 01              u64 [sp + 0x178] = a0
  1180: 95 17 ff 07              a0 = sp + 0x7ff
  1184: 95 77 81 03              a0 = a0 + 0x381
  1188: 33 08 01                 a1 = 0x1
  1191: 95 19 78 01              a2 = sp + 0x178
  1195: 33 0a 08                 a3 = 0x8
  1198: 0a 03                    ecalli 3 // 'write'
  1200: 95 17 32                 a0 = sp + 0x32
  1203: 33 08 03                 a1 = 0x3
  1206: 95 19 35                 a2 = sp + 0x35
  1209: 33 0a 03                 a3 = 0x3
  1212: 0a 03                    ecalli 3 // 'write'
  1214: 46 16 01 02              u8 [s1 + 1] = 0x2
  1218: 7b 17 78 01              u64 [sp + 0x178] = a0
  1222: 95 17 ff 07              a0 = sp + 0x7ff
  1226: 95 77 81 03              a0 = a0 + 0x381
  1230: 33 08 01                 a1 = 0x1
  1233: 95 19 78 01              a2 = sp + 0x178
  1237: 33 0a 08                 a3 = 0x8
  1240: 0a 03                    ecalli 3 // 'write'
  1242: 95 18 32                 a1 = sp + 0x32
  1245: 33 09 03                 a2 = 0x3
  1248: 95 1a 78                 a3 = sp + 0x78
  1251: 33 0c 00 01              a5 = 0x100
  1255: 64 57                    a0 = s0
  1257: 33 0b                    a4 = 0
  1259: 0a 02                    ecalli 2 // 'read'
  1261: 46 16 01 05              u8 [s1 + 1] = 0x5
  1265: 7b 17 78 01              u64 [sp + 0x178] = a0
  1269: 95 17 ff 07              a0 = sp + 0x7ff
  1273: 95 77 81 03              a0 = a0 + 0x381
  1277: 33 08 01                 a1 = 0x1
  1280: 95 19 78 01              a2 = sp + 0x178
  1284: 33 0a 08                 a3 = 0x8
  1287: 0a 03                    ecalli 3 // 'write'
  1289: 95 17 32                 a0 = sp + 0x32
  1292: 33 08                    a1 = 0
  1294: 0a 0f                    ecalli 15 // 'forget'
  1296: 46 16 01 06              u8 [s1 + 1] = 0x6
  1300: 7b 17 78 01              u64 [sp + 0x178] = a0
  1304: 95 17 ff 07              a0 = sp + 0x7ff
  1308: 95 77 81 03              a0 = a0 + 0x381
  1312: 33 08 01                 a1 = 0x1
  1315: 95 19 78 01              a2 = sp + 0x178
  1319: 33 0a 08                 a3 = 0x8
  1322: 0a 03                    ecalli 3 // 'write'
  1324: 28 80 04                 jump @91
      :                          @79 [@dyn 6]
  1327: 95 17 38                 a0 = sp + 0x38
  1330: 33 08 03                 a1 = 0x3
  1333: 0a 0e                    ecalli 14 // 'solicit'
  1335: 95 16 ff 07              s1 = sp + 0x7ff
  1339: 95 66 80 03              s1 = s1 + 0x380
  1343: 46 16 01 01              u8 [s1 + 1] = 0x1
  1347: 7b 17 78 01              u64 [sp + 0x178] = a0
  1351: 95 17 ff 07              a0 = sp + 0x7ff
  1355: 95 77 81 03              a0 = a0 + 0x381
  1359: 33 08 01                 a1 = 0x1
  1362: 95 19 78 01              a2 = sp + 0x178
  1366: 33 0a 08                 a3 = 0x8
  1369: 0a 03                    ecalli 3 // 'write'
  1371: 95 17 38                 a0 = sp + 0x38
  1374: 33 08 03                 a1 = 0x3
  1377: 0a 0d                    ecalli 13 // 'query'
  1379: 46 16 01 02              u8 [s1 + 1] = 0x2
  1383: 7b 17 78 01              u64 [sp + 0x178] = a0
  1387: 95 17 ff 07              a0 = sp + 0x7ff
  1391: 95 77 81 03              a0 = a0 + 0x381
  1395: 33 08 01                 a1 = 0x1
  1398: 95 19 78 01              a2 = sp + 0x178
  1402: 33 0a 08                 a3 = 0x8
  1405: 0a 03                    ecalli 3 // 'write'
  1407: 95 17 58                 a0 = sp + 0x58
  1410: 33 08 03                 a1 = 0x3
  1413: 0a 0d                    ecalli 13 // 'query'
  1415: 46 16 01 05              u8 [s1 + 1] = 0x5
  1419: 7b 17 78 01              u64 [sp + 0x178] = a0
  1423: 95 17 ff 07              a0 = sp + 0x7ff
  1427: 95 77 81 03              a0 = a0 + 0x381
  1431: 33 08 01                 a1 = 0x1
  1434: 95 19 78 01              a2 = sp + 0x178
  1438: 33 0a 08                 a3 = 0x8
  1441: 0a 03                    ecalli 3 // 'write'
  1443: 28 09 04                 jump @91
      :                          @80 [@dyn 7]
  1446: 95 17 38                 a0 = sp + 0x38
  1449: 33 08 03                 a1 = 0x3
  1452: 0a 0f                    ecalli 15 // 'forget'
  1454: 95 16 ff 07              s1 = sp + 0x7ff
  1458: 95 66 80 03              s1 = s1 + 0x380
  1462: 46 16 01 01              u8 [s1 + 1] = 0x1
  1466: 7b 17 78 01              u64 [sp + 0x178] = a0
  1470: 95 17 ff 07              a0 = sp + 0x7ff
  1474: 95 77 81 03              a0 = a0 + 0x381
  1478: 33 08 01                 a1 = 0x1
  1481: 95 19 78 01              a2 = sp + 0x178
  1485: 33 0a 08                 a3 = 0x8
  1488: 0a 03                    ecalli 3 // 'write'
  1490: 95 17 38                 a0 = sp + 0x38
  1493: 33 08 03                 a1 = 0x3
  1496: 0a 0d                    ecalli 13 // 'query'
  1498: 46 16 01 02              u8 [s1 + 1] = 0x2
  1502: 7b 17 78 01              u64 [sp + 0x178] = a0
  1506: 95 17 ff 07              a0 = sp + 0x7ff
  1510: 95 77 81 03              a0 = a0 + 0x381
  1514: 33 08 01                 a1 = 0x1
  1517: 95 19 78 01              a2 = sp + 0x178
  1521: 33 0a 08                 a3 = 0x8
  1524: 0a 03                    ecalli 3 // 'write'
  1526: 95 18 58                 a1 = sp + 0x58
  1529: 95 19 78                 a2 = sp + 0x78
  1532: 33 0b 03                 a4 = 0x3
  1535: 64 57                    a0 = s0
  1537: 33 0a                    a3 = 0
  1539: 0a 01                    ecalli 1 // 'lookup'
  1541: 46 16 01 05              u8 [s1 + 1] = 0x5
  1545: 7b 17 78 01              u64 [sp + 0x178] = a0
  1549: 95 17 ff 07              a0 = sp + 0x7ff
  1553: 95 77 81 03              a0 = a0 + 0x381
  1557: 33 08 01                 a1 = 0x1
  1560: 95 19 78 01              a2 = sp + 0x178
  1564: 33 0a 08                 a3 = 0x8
  1567: 0a 03                    ecalli 3 // 'write'
  1569: 33 07 e8 03              a0 = 0x3e8
  1573: 95 18 32                 a1 = sp + 0x32
  1576: 0a 06                    ecalli 6 // 'assign'
  1578: 46 16 01 06              u8 [s1 + 1] = 0x6
  1582: 7b 17 78 01              u64 [sp + 0x178] = a0
  1586: 95 17 ff 07              a0 = sp + 0x7ff
  1590: 95 77 81 03              a0 = a0 + 0x381
  1594: 33 08 01                 a1 = 0x1
  1597: 95 19 78 01              a2 = sp + 0x178
  1601: 33 0a 08                 a3 = 0x8
  1604: 0a 03                    ecalli 3 // 'write'
  1606: 28 66 03                 jump @91
      :                          @81 [@dyn 8]
  1609: 95 18 38                 a1 = sp + 0x38
  1612: 95 19 78                 a2 = sp + 0x78
  1615: 33 0b 03                 a4 = 0x3
  1618: 64 57                    a0 = s0
  1620: 33 0a                    a3 = 0
  1622: 0a 01                    ecalli 1 // 'lookup'
  1624: 95 16 ff 07              s1 = sp + 0x7ff
  1628: 95 66 80 03              s1 = s1 + 0x380
  1632: 46 16 01 01              u8 [s1 + 1] = 0x1
  1636: 7b 17 78 01              u64 [sp + 0x178] = a0
  1640: 95 17 ff 07              a0 = sp + 0x7ff
  1644: 95 77 81 03              a0 = a0 + 0x381
  1648: 33 08 01                 a1 = 0x1
  1651: 95 19 78 01              a2 = sp + 0x178
  1655: 33 0a 08                 a3 = 0x8
  1658: 0a 03                    ecalli 3 // 'write'
  1660: 95 17 38                 a0 = sp + 0x38
  1663: 33 08 03                 a1 = 0x3
  1666: 0a 0d                    ecalli 13 // 'query'
  1668: 46 16 01 02              u8 [s1 + 1] = 0x2
  1672: 7b 17 78 01              u64 [sp + 0x178] = a0
  1676: 95 17 ff 07              a0 = sp + 0x7ff
  1680: 95 77 81 03              a0 = a0 + 0x381
  1684: 33 08 01                 a1 = 0x1
  1687: 95 19 78 01              a2 = sp + 0x178
  1691: 33 0a 08                 a3 = 0x8
  1694: 0a 03                    ecalli 3 // 'write'
  1696: 95 18 38                 a1 = sp + 0x38
  1699: 64 57                    a0 = s0
  1701: 0a 0c                    ecalli 12 // 'eject'
  1703: 46 16 01 05              u8 [s1 + 1] = 0x5
  1707: 7b 17 78 01              u64 [sp + 0x178] = a0
  1711: 95 17 ff 07              a0 = sp + 0x7ff
  1715: 95 77 81 03              a0 = a0 + 0x381
  1719: 33 08 01                 a1 = 0x1
  1722: 95 19 78 01              a2 = sp + 0x178
  1726: 33 0a 08                 a3 = 0x8
  1729: 0a 03                    ecalli 3 // 'write'
  1731: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  1741: 95 1a 38                 a3 = sp + 0x38
  1744: 33 08                    a1 = 0
  1746: 33 09                    a2 = 0
  1748: 33 0b                    a4 = 0
  1750: 0a 05                    ecalli 5 // 'bless'
  1752: 46 16 01 06              u8 [s1 + 1] = 0x6
  1756: 7b 17 78 01              u64 [sp + 0x178] = a0
  1760: 95 17 ff 07              a0 = sp + 0x7ff
  1764: 95 77 81 03              a0 = a0 + 0x381
  1768: 33 08 01                 a1 = 0x1
  1771: 95 19 78 01              a2 = sp + 0x178
  1775: 33 0a 08                 a3 = 0x8
  1778: 0a 03                    ecalli 3 // 'write'
  1780: 28 b8 02                 jump @91
      :                          @82 [@dyn 9]
  1783: 95 17 38                 a0 = sp + 0x38
  1786: 33 08 03                 a1 = 0x3
  1789: 0a 0e                    ecalli 14 // 'solicit'
  1791: 95 15 ff 07              s0 = sp + 0x7ff
  1795: 95 55 80 03              s0 = s0 + 0x380
  1799: 46 15 01 01              u8 [s0 + 1] = 0x1
  1803: 7b 17 78 01              u64 [sp + 0x178] = a0
  1807: 95 17 ff 07              a0 = sp + 0x7ff
  1811: 95 77 81 03              a0 = a0 + 0x381
  1815: 33 08 01                 a1 = 0x1
  1818: 95 19 78 01              a2 = sp + 0x178
  1822: 33 0a 08                 a3 = 0x8
  1825: 0a 03                    ecalli 3 // 'write'
  1827: 95 17 38                 a0 = sp + 0x38
  1830: 33 08 03                 a1 = 0x3
  1833: 0a 0d                    ecalli 13 // 'query'
  1835: 46 15 01 02              u8 [s0 + 1] = 0x2
  1839: 7b 17 78 01              u64 [sp + 0x178] = a0
  1843: 95 17 ff 07              a0 = sp + 0x7ff
  1847: 95 77 81 03              a0 = a0 + 0x381
  1851: 33 08 01                 a1 = 0x1
  1854: 95 19 78 01              a2 = sp + 0x178
  1858: 33 0a 08                 a3 = 0x8
  1861: 0a 03                    ecalli 3 // 'write'
  1863: 95 15 78 01              s0 = sp + 0x178
  1867: 33 09 00 0a              a2 = 0xa00
  1871: 95 17 78 01              a0 = sp + 0x178
  1875: 33 08                    a1 = 0
  1877: 50 10 14 ff 03           ra = 20, jump @126
      :                          @83 [@dyn 10]
  1882: 33 06 50                 s1 = 0x50
  1885: 01                       fallthrough
      :                          @84
  1886: 95 18 38                 a1 = sp + 0x38
  1889: 33 09 20                 a2 = 0x20
  1892: 64 57                    a0 = s0
  1894: 50 10 16 3c 03           ra = 22, jump @108
      :                          @85 [@dyn 11]
  1899: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  1902: 95 55 20                 s0 = s0 + 0x20
  1905: 52 06 ed                 jump @84 if s1 != 0
      :                          @86
  1908: 95 18 78 01              a1 = sp + 0x178
  1912: 33 07                    a0 = 0
  1914: 0a 06                    ecalli 6 // 'assign'
  1916: 95 16 ff 07              s1 = sp + 0x7ff
  1920: 95 66 80 03              s1 = s1 + 0x380
  1924: 46 06 05                 u8 [s1 + 0] = 0x5
  1927: 7b 67 01                 u64 [s1 + 0x1] = a0
  1930: 95 17 ff 07              a0 = sp + 0x7ff
  1934: 95 77 80 03              a0 = a0 + 0x380
  1938: 33 08 01                 a1 = 0x1
  1941: 95 19 ff 07              a2 = sp + 0x7ff
  1945: 95 99 81 03              a2 = a2 + 0x381
  1949: 33 0a 08                 a3 = 0x8
  1952: 0a 03                    ecalli 3 // 'write'
  1954: 82 15 28                 s0 = u64 [sp + 0x28]
  1957: 28 07 02                 jump @91
      :                          @87 [@dyn 12]
  1960: 95 17 38                 a0 = sp + 0x38
  1963: 33 08 03                 a1 = 0x3
  1966: 0a 0f                    ecalli 15 // 'forget'
  1968: 95 16 ff 07              s1 = sp + 0x7ff
  1972: 95 66 80 03              s1 = s1 + 0x380
  1976: 46 16 01 01              u8 [s1 + 1] = 0x1
  1980: 7b 17 78 01              u64 [sp + 0x178] = a0
  1984: 95 17 ff 07              a0 = sp + 0x7ff
  1988: 95 77 81 03              a0 = a0 + 0x381
  1992: 33 08 01                 a1 = 0x1
  1995: 95 19 78 01              a2 = sp + 0x178
  1999: 33 0a 08                 a3 = 0x8
  2002: 0a 03                    ecalli 3 // 'write'
  2004: 95 17 38                 a0 = sp + 0x38
  2007: 33 08 03                 a1 = 0x3
  2010: 0a 0d                    ecalli 13 // 'query'
  2012: 46 16 01 02              u8 [s1 + 1] = 0x2
  2016: 7b 17 78 01              u64 [sp + 0x178] = a0
  2020: 95 17 ff 07              a0 = sp + 0x7ff
  2024: 95 77 81 03              a0 = a0 + 0x381
  2028: 33 08 01                 a1 = 0x1
  2031: 95 19 78 01              a2 = sp + 0x178
  2035: 33 0a 08                 a3 = 0x8
  2038: 0a 03                    ecalli 3 // 'write'
  2040: 28 b4 01                 jump @91
      :                          @88 [@dyn 13]
  2043: 95 18 38                 a1 = sp + 0x38
  2046: 95 19 78                 a2 = sp + 0x78
  2049: 33 0b 03                 a4 = 0x3
  2052: 64 57                    a0 = s0
  2054: 33 0a                    a3 = 0
  2056: 0a 01                    ecalli 1 // 'lookup'
  2058: 95 16 ff 07              s1 = sp + 0x7ff
  2062: 95 66 80 03              s1 = s1 + 0x380
  2066: 46 16 01 01              u8 [s1 + 1] = 0x1
  2070: 7b 17 78 01              u64 [sp + 0x178] = a0
  2074: 95 17 ff 07              a0 = sp + 0x7ff
  2078: 95 77 81 03              a0 = a0 + 0x381
  2082: 33 08 01                 a1 = 0x1
  2085: 95 19 78 01              a2 = sp + 0x178
  2089: 33 0a 08                 a3 = 0x8
  2092: 0a 03                    ecalli 3 // 'write'
  2094: 95 17 38                 a0 = sp + 0x38
  2097: 33 08 03                 a1 = 0x3
  2100: 0a 0d                    ecalli 13 // 'query'
  2102: 46 16 01 02              u8 [s1 + 1] = 0x2
  2106: 7b 17 78 01              u64 [sp + 0x178] = a0
  2110: 95 17 ff 07              a0 = sp + 0x7ff
  2114: 95 77 81 03              a0 = a0 + 0x381
  2118: 33 08 01                 a1 = 0x1
  2121: 95 19 78 01              a2 = sp + 0x178
  2125: 33 0a 08                 a3 = 0x8
  2128: 0a 03                    ecalli 3 // 'write'
  2130: 28 5a 01                 jump @91
      :                          @89 [@dyn 14]
  2133: 33 09 27 ea 0d           a2 = 0xdea27
  2138: 7b 19 08                 u64 [sp + 0x8] = a2
  2141: 95 17 38                 a0 = sp + 0x38
  2144: 33 08 03                 a1 = 0x3
  2147: 33 0a 27 ea 0d           a3 = 0xdea27
  2152: 0a 09                    ecalli 9 // 'new'
  2154: 95 16 ff 07              s1 = sp + 0x7ff
  2158: 95 66 80 03              s1 = s1 + 0x380
  2162: 46 16 01 01              u8 [s1 + 1] = 0x1
  2166: 7b 17 78 01              u64 [sp + 0x178] = a0
  2170: 95 17 ff 07              a0 = sp + 0x7ff
  2174: 95 77 81 03              a0 = a0 + 0x381
  2178: 33 08 01                 a1 = 0x1
  2181: 95 19 78 01              a2 = sp + 0x178
  2185: 33 0a 08                 a3 = 0x8
  2188: 0a 03                    ecalli 3 // 'write'
  2190: 95 17 38                 a0 = sp + 0x38
  2193: 82 15 08                 s0 = u64 [sp + 0x8]
  2196: 64 58                    a1 = s0
  2198: 64 59                    a2 = s0
  2200: 0a 0a                    ecalli 10 // 'upgrade'
  2202: 46 16 01 02              u8 [s1 + 1] = 0x2
  2206: 7b 17 78 01              u64 [sp + 0x178] = a0
  2210: 95 17 ff 07              a0 = sp + 0x7ff
  2214: 95 77 81 03              a0 = a0 + 0x381
  2218: 33 08 01                 a1 = 0x1
  2221: 95 19 78 01              a2 = sp + 0x178
  2225: 33 0a 08                 a3 = 0x8
  2228: 0a 03                    ecalli 3 // 'write'
  2230: 48 21 78 01 8f 03        u32 [sp + 376] = 0x38f
  2236: 48 21 80 01              u32 [sp + 384] = 0
  2240: 7a 15 7c 01              u32 [sp + 0x17c] = s0
  2244: 33 08 01                 a1 = 0x1
  2247: 33 09 01                 a2 = 0x1
  2250: 95 1a 78 01              a3 = sp + 0x178
  2254: 33 0b 01                 a4 = 0x1
  2257: 33 07                    a0 = 0
  2259: 0a 05                    ecalli 5 // 'bless'
  2261: 46 06 05                 u8 [s1 + 0] = 0x5
  2264: 7b 67 01                 u64 [s1 + 0x1] = a0
  2267: 95 17 ff 07              a0 = sp + 0x7ff
  2271: 95 77 80 03              a0 = a0 + 0x380
  2275: 33 08 01                 a1 = 0x1
  2278: 95 19 ff 07              a2 = sp + 0x7ff
  2282: 95 99 81 03              a2 = a2 + 0x381
  2286: 33 0a 08                 a3 = 0x8
  2289: 0a 03                    ecalli 3 // 'write'
  2291: 82 15 28                 s0 = u64 [sp + 0x28]
  2294: 28 b6 00                 jump @91
      :                          @90 [@dyn 15]
  2297: 95 18 32                 a1 = sp + 0x32
  2300: 33 09 03                 a2 = 0x3
  2303: 95 1a 78                 a3 = sp + 0x78
  2306: 33 0c 00 01              a5 = 0x100
  2310: 64 57                    a0 = s0
  2312: 33 0b                    a4 = 0
  2314: 0a 02                    ecalli 2 // 'read'
  2316: 95 16 ff 07              s1 = sp + 0x7ff
  2320: 95 66 80 03              s1 = s1 + 0x380
  2324: 46 16 01 01              u8 [s1 + 1] = 0x1
  2328: 7b 17 78 01              u64 [sp + 0x178] = a0
  2332: 95 17 ff 07              a0 = sp + 0x7ff
  2336: 95 77 81 03              a0 = a0 + 0x381
  2340: 33 08 01                 a1 = 0x1
  2343: 95 19 78 01              a2 = sp + 0x178
  2347: 33 0a 08                 a3 = 0x8
  2350: 0a 03                    ecalli 3 // 'write'
  2352: 95 17 32                 a0 = sp + 0x32
  2355: 33 08 03                 a1 = 0x3
  2358: 33 09                    a2 = 0
  2360: 33 0a                    a3 = 0
  2362: 0a 03                    ecalli 3 // 'write'
  2364: 46 16 01 02              u8 [s1 + 1] = 0x2
  2368: 7b 17 78 01              u64 [sp + 0x178] = a0
  2372: 95 17 ff 07              a0 = sp + 0x7ff
  2376: 95 77 81 03              a0 = a0 + 0x381
  2380: 33 08 01                 a1 = 0x1
  2383: 95 19 78 01              a2 = sp + 0x178
  2387: 33 0a 08                 a3 = 0x8
  2390: 0a 03                    ecalli 3 // 'write'
  2392: 95 18 32                 a1 = sp + 0x32
  2395: 33 09 03                 a2 = 0x3
  2398: 95 1a 78                 a3 = sp + 0x78
  2401: 33 0c 00 01              a5 = 0x100
  2405: 64 57                    a0 = s0
  2407: 33 0b                    a4 = 0
  2409: 0a 02                    ecalli 2 // 'read'
  2411: 46 16 01 05              u8 [s1 + 1] = 0x5
  2415: 7b 17 78 01              u64 [sp + 0x178] = a0
  2419: 95 17 ff 07              a0 = sp + 0x7ff
  2423: 95 77 81 03              a0 = a0 + 0x381
  2427: 33 08 01                 a1 = 0x1
  2430: 95 19 78 01              a2 = sp + 0x178
  2434: 33 0a 08                 a3 = 0x8
  2437: 0a 03                    ecalli 3 // 'write'
  2439: 95 17 38                 a0 = sp + 0x38
  2442: 33 08 03                 a1 = 0x3
  2445: 0a 0e                    ecalli 14 // 'solicit'
  2447: 46 16 01 06              u8 [s1 + 1] = 0x6
  2451: 7b 17 78 01              u64 [sp + 0x178] = a0
  2455: 95 17 ff 07              a0 = sp + 0x7ff
  2459: 95 77 81 03              a0 = a0 + 0x381
  2463: 33 08 01                 a1 = 0x1
  2466: 95 19 78 01              a2 = sp + 0x178
  2470: 33 0a 08                 a3 = 0x8
  2473: 0a 03                    ecalli 3 // 'write'
  2475: 01                       fallthrough
      :                          @91
  2476: 95 18 78                 a1 = sp + 0x78
  2479: 64 57                    a0 = s0
  2481: 0a 04                    ecalli 4 // 'info'
  2483: 46 16 01 08              u8 [s1 + 1] = 0x8
  2487: 7b 17 78 01              u64 [sp + 0x178] = a0
  2491: 95 17 ff 07              a0 = sp + 0x7ff
  2495: 95 77 81 03              a0 = a0 + 0x381
  2499: 33 08 01                 a1 = 0x1
  2502: 95 19 78 01              a2 = sp + 0x178
  2506: 33 0a 08                 a3 = 0x8
  2509: 0a 03                    ecalli 3 // 'write'
  2511: 0a                       ecalli 0 // 'gas'
  2512: 46 16 01 09              u8 [s1 + 1] = 0x9
  2516: 7b 17 78 01              u64 [sp + 0x178] = a0
  2520: 95 17 ff 07              a0 = sp + 0x7ff
  2524: 95 77 81 03              a0 = a0 + 0x381
  2528: 33 08 01                 a1 = 0x1
  2531: 95 19 78 01              a2 = sp + 0x178
  2535: 33 0a 08                 a3 = 0x8
  2538: 0a 03                    ecalli 3 // 'write'
  2540: 01                       fallthrough
      :                          @92
  2541: 49 21 90 01              u64 [sp + 400] = 0
  2545: 49 21 88 01              u64 [sp + 392] = 0
  2549: 49 21 80 01              u64 [sp + 384] = 0
  2553: 49 21 78 01              u64 [sp + 376] = 0
  2557: 82 19 20                 a2 = u64 [sp + 0x20]
  2560: 55 19 21 9a 00           jump @103 if a2 >=u 33
      :                          @93
  2565: 82 16 10                 s1 = u64 [sp + 0x10]
  2568: 97 65 20                 s0 = s1 << 0x20
  2571: 98 55 20                 s0 = s0 >> 0x20
  2574: 95 17 78 01              a0 = sp + 0x178
  2578: 82 18 18                 a1 = u64 [sp + 0x18]
  2581: 50 10 20 8d 00           ra = 32, jump @108
      :                          @94 [@dyn 16]
  2586: 3a 08 00 00 03           a1 = u64 [0x30000]
  2591: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
  2601: ca 75 07                 a0 = s0 * a0
  2604: ae 87 44                 jump @99 if a0 >=u a1
      :                          @95
  2607: 51 16 09 07              jump @97 if s1 == 9
      :                          @96
  2611: 0a 08                    ecalli 8 // 'checkpoint'
  2613: 01                       fallthrough
      :                          @97
  2614: 95 57 2a                 a0 = s0 + 0x2a
  2617: 95 19 ff 07              a2 = sp + 0x7ff
  2621: 95 99 80 03              a2 = a2 + 0x380
  2625: 46 09 07                 u8 [a2 + 0] = 0x7
  2628: 7b 97 01                 u64 [a2 + 0x1] = a0
  2631: 95 17 ff 07              a0 = sp + 0x7ff
  2635: 95 77 80 03              a0 = a0 + 0x380
  2639: 33 08 01                 a1 = 0x1
  2642: 95 19 ff 07              a2 = sp + 0x7ff
  2646: 95 99 81 03              a2 = a2 + 0x381
  2650: 33 0a 08                 a3 = 0x8
  2653: 33 00 22                 ra = 0x22
  2656: 0a 03                    ecalli 3 // 'write'
  2658: 33 07                    a0 = 0
  2660: 33 08 01                 a1 = 0x1
  2663: 32 07                    jump [a0]
      :                          @98 [@dyn 17]
  2665: 33 07                    a0 = 0
  2667: 33 08 01                 a1 = 0x1
  2670: 32 07                    jump [a0]
      :                          @99
  2672: 95 17 78 01              a0 = sp + 0x178
  2676: 0a 10                    ecalli 16 // 'oyield'
  2678: 33 08 20                 a1 = 0x20
  2681: 95 17 78 01              a0 = sp + 0x178
  2685: 95 11 a8 03              sp = sp + 0x3a8
  2689: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  2693: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  2697: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  2701: 95 11 f8 07              sp = sp + 0x7f8
  2705: 32 00                    ret
      :                          @100
  2707: 64 56                    s1 = s0
  2709: 28 62 f8                 jump @75
      :                          @101
  2712: 00                       trap
      :                          @102
  2713: 00                       trap
      :                          @103
  2714: 00                       trap
      :                          @104
  2715: 00                       trap
      :                          @105
  2716: 00                       trap
      :                          @106
  2717: 00                       trap
      :                          @107 [export #2: 'on_transfer']
  2718: 33 07                    a0 = 0
  2720: 32 00                    ret
      :                          @108
  2722: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2725: 7b 10 18                 u64 [sp + 0x18] = ra
  2728: 7b 15 10                 u64 [sp + 0x10] = s0
  2731: 7b 16 08                 u64 [sp + 0x8] = s1
  2734: 53 19 10 64              jump @117 if a2 <u 16
      :                          @109
  2738: 8d 7a                    i32 a3 = -a0
  2740: 84 a2 07                 t0 = a3 & 0x7
  2743: c8 27 0b                 a4 = a0 + t0
  2746: 51 02 15                 jump @112 if t0 == 0
      :                          @110
  2749: 64 8c                    a5 = a1
  2751: 64 75                    s0 = a0
  2753: 01                       fallthrough
      :                          @111
  2754: 7c ca                    a3 = u8 [a5]
  2756: 78 5a                    u8 [s0] = a3
  2758: 95 55 01                 s0 = s0 + 0x1
  2761: 95 cc 01                 a5 = a5 + 0x1
  2764: ac b5 f6                 jump @111 if s0 <u a4
      :                          @112
  2767: c8 28 03                 t1 = a1 + t0
  2770: c9 29 02                 t0 = a2 - t0
  2773: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2776: 84 38 07                 a1 = t1 & 0x7
  2779: c8 4b 0a                 a3 = a4 + t2
  2782: 51 08 3b                 jump @119 if a1 == 0
      :                          @113
  2785: 58 04 4b                 jump @122 if t2 <=s 0
      :                          @114
  2788: 97 38 03                 a1 = t1 << 0x3
  2791: 84 80 38                 ra = a1 & 0x38
  2794: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2797: 82 c5                    s0 = u64 [a5]
  2799: 8d 88                    i32 a1 = -a1
  2801: 84 88 38                 a1 = a1 & 0x38
  2804: 95 cc 08                 a5 = a5 + 0x8
  2807: 01                       fallthrough
      :                          @115
  2808: 82 c6                    s1 = u64 [a5]
  2810: d0 05 05                 s0 = s0 >> ra
  2813: cf 86 09                 a2 = s1 << a1
  2816: d4 59 09                 a2 = a2 | s0
  2819: 7b b9                    u64 [a4] = a2
  2821: 95 bb 08                 a4 = a4 + 0x8
  2824: 95 cc 08                 a5 = a5 + 0x8
  2827: 64 65                    s0 = s1
  2829: ac ab eb                 jump @115 if a4 <u a3
      :                          @116
  2832: 28 1c                    jump @122
      :                          @117
  2834: 64 7a                    a3 = a0
  2836: 52 09 21                 jump @123 if a2 != 0
      :                          @118
  2839: 28 2f                    jump @125
      :                          @119
  2841: 58 04 13                 jump @122 if t2 <=s 0
      :                          @120
  2844: 64 38                    a1 = t1
  2846: 01                       fallthrough
      :                          @121
  2847: 82 89                    a2 = u64 [a1]
  2849: 7b b9                    u64 [a4] = a2
  2851: 95 bb 08                 a4 = a4 + 0x8
  2854: 95 88 08                 a1 = a1 + 0x8
  2857: ac ab f6                 jump @121 if a4 <u a3
      :                          @122
  2860: c8 43 08                 a1 = t1 + t2
  2863: 84 29 07                 a2 = t0 & 0x7
  2866: 51 09 14                 jump @125 if a2 == 0
      :                          @123
  2869: c8 a9 09                 a2 = a2 + a3
  2872: 01                       fallthrough
      :                          @124
  2873: 7c 8b                    a4 = u8 [a1]
  2875: 78 ab                    u8 [a3] = a4
  2877: 95 aa 01                 a3 = a3 + 0x1
  2880: 95 88 01                 a1 = a1 + 0x1
  2883: ac 9a f6                 jump @124 if a3 <u a2
      :                          @125
  2886: 82 10 18                 ra = u64 [sp + 0x18]
  2889: 82 15 10                 s0 = u64 [sp + 0x10]
  2892: 82 16 08                 s1 = u64 [sp + 0x8]
  2895: 95 11 20                 sp = sp + 0x20
  2898: 32 00                    ret
      :                          @126
  2900: 53 19 10 48              jump @135 if a2 <u 16
      :                          @127
  2904: 8d 7a                    i32 a3 = -a0
  2906: 84 aa 07                 a3 = a3 & 0x7
  2909: c8 a7 0b                 a4 = a0 + a3
  2912: 51 0a 0e                 jump @130 if a3 == 0
      :                          @128
  2915: 64 7c                    a5 = a0
  2917: 01                       fallthrough
      :                          @129
  2918: 78 c8                    u8 [a5] = a1
  2920: 95 cc 01                 a5 = a5 + 0x1
  2923: ac bc fb                 jump @129 if a5 <u a4
      :                          @130
  2926: c9 a9 03                 t1 = a2 - a3
  2929: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2932: c8 cb 0a                 a3 = a4 + a5
  2935: 58 0c 1d                 jump @133 if a5 <=s 0
      :                          @131
  2938: 84 82 ff 00              t0 = a1 & 0xff
  2942: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  2952: ca 92 0c                 a5 = t0 * a2
  2955: 01                       fallthrough
      :                          @132
  2956: 7b bc                    u64 [a4] = a5
  2958: 95 bb 08                 a4 = a4 + 0x8
  2961: ac ab fb                 jump @132 if a4 <u a3
      :                          @133
  2964: 84 39 07                 a2 = t1 & 0x7
  2967: 52 09 0a                 jump @136 if a2 != 0
      :                          @134
  2970: 28 13                    jump @138
      :                          @135
  2972: 64 7a                    a3 = a0
  2974: 51 09 0f                 jump @138 if a2 == 0
      :                          @136
  2977: c8 a9 09                 a2 = a2 + a3
  2980: 01                       fallthrough
      :                          @137
  2981: 78 a8                    u8 [a3] = a1
  2983: 95 aa 01                 a3 = a3 + 0x1
  2986: ac 9a fb                 jump @137 if a3 <u a2
      :                          @138
  2989: 32 00                    ret
