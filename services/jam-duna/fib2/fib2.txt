// RO data = 36/36 bytes
// RW data = 0/0 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [10, 0, 255, 255, 12, 0, 255, 255, 14, 0, 255, 255, 16, 0, 255, 255, 18, 0, 255, 255, 24, 0, 255, 255, 26, 0, 255, 255, 28, 0, 255, 255, 30, 0, 255, 255]
// RW data = []
// Instructions = 892
// Code size = 2863 bytes

      :                          @0
     0: 28 ab 00 00 00           jump @27
      :                          @1
     5: 28 03 01 00 00           jump @32
      :                          @2
    10: 28 14 0a                 jump @102
      :                          @3
    13: 51 08 9b 00              jump @24 if a1 == 0
      :                          @4
    17: 64 79                    a2 = a0
    19: 7c 77                    a0 = u8 [a0]
    21: 51 07 91 00              jump @23 if a0 == 0
      :                          @5
    25: 51 27 ff 00 90 00        jump @25 if a0 == 255
      :                          @6
    31: 6c 7a                    a3 = sext.b a0
    33: 57 0a 09                 jump @8 if a3 <s 0
      :                          @7
    36: 33 0a                    a3 = 0
    38: 33 08                    a1 = 0
    40: 28 73                    jump @22
      :                          @8
    42: 55 27 c0 00 0d           jump @10 if a0 >=u 192
      :                          @9
    47: 33 0a 01                 a3 = 0x1
    50: 33 0b 80                 a4 = 0xffffffffffffff80
    53: 28 4a                    jump @19
      :                          @10
    55: 55 27 e0 00 0e           jump @12 if a0 >=u 224
      :                          @11
    60: 33 0a 02                 a3 = 0x2
    63: 33 0b 40 ff              a4 = 0xffffffffffffff40
    67: 28 3c                    jump @19
      :                          @12
    69: 55 27 f0 00 0e           jump @14 if a0 >=u 240
      :                          @13
    74: 33 0a 03                 a3 = 0x3
    77: 33 0b 20 ff              a4 = 0xffffffffffffff20
    81: 28 2e                    jump @19
      :                          @14
    83: 55 27 f8 00 0e           jump @16 if a0 >=u 248
      :                          @15
    88: 33 0a 04                 a3 = 0x4
    91: 33 0b 10 ff              a4 = 0xffffffffffffff10
    95: 28 20                    jump @19
      :                          @16
    97: 55 27 fc 00 0e           jump @18 if a0 >=u 252
      :                          @17
   102: 33 0a 05                 a3 = 0x5
   105: 33 0b 08 ff              a4 = 0xffffffffffffff08
   109: 28 12                    jump @19
      :                          @18
   111: 88 7a fe 00              a3 = a0 <u 0xfe
   115: 33 0b 04 ff              a4 = 0xffffffffffffff04
   119: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
   123: 85 aa 07                 a3 = a3 ^ 0x7
   126: 01                       fallthrough
      :                          @19
   127: ae 8a 2b                 jump @26 if a3 >=u a1
      :                          @20
   130: 33 08                    a1 = 0
   132: c8 b7 07                 a0 = a0 + a4
   135: 64 ab                    a4 = a3
   137: 01                       fallthrough
      :                          @21
   138: c8 b9 0c                 a5 = a2 + a4
   141: 7c cc                    a5 = u8 [a5]
   143: 97 88 08                 a1 = a1 << 0x8
   146: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   149: d4 c8 08                 a1 = a1 | a5
   152: 52 0b f2                 jump @21 if a4 != 0
      :                          @22
   155: 8a a9 03                 i32 a2 = a3 << 0x3
   158: cf 97 07                 a0 = a0 << a2
   161: c8 87 07                 a0 = a0 + a1
   164: 32 00                    ret
      :                          @23
   166: 32 00                    ret
      :                          @24
   168: 00                       trap
      :                          @25
   169: 00                       trap
      :                          @26
   170: 00                       trap
      :                          @27 [export #0: 'refine']
   171: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   174: 7b 10 18                 u64 [sp + 0x18] = ra
   177: 7b 15 10                 u64 [sp + 0x10] = s0
   180: 48 11 08                 u32 [sp + 8] = 0
   183: 49 01                    u64 [sp + 0] = 0
   185: 64 17                    a0 = sp
   187: 33 09 0c                 a2 = 0xc
   190: 33 0a 05                 a3 = 0x5
   193: 33 08                    a1 = 0
   195: 33 0b                    a4 = 0
   197: 33 0c                    a5 = 0
   199: 0a 12                    ecalli 18 // 'fetch'
   201: 01                       fallthrough
      :                          @28
   202: 51 17 ff 14              jump @30 if a0 == 4294967295
      :                          @29
   206: 81 17 04                 a0 = i32 [sp + 0x4]
   209: 81 18 08                 a1 = i32 [sp + 0x8]
   212: 81 19                    a2 = i32 [sp]
   214: be 78 08                 i32 a1 = a1 + a0
   217: 83 99 01                 i32 a2 = a2 + 0x1
   220: 28 0b                    jump @31
      :                          @30
   222: 33 07                    a0 = 0
   224: 33 09 01                 a2 = 0x1
   227: 33 08 01                 a1 = 0x1
   230: 01                       fallthrough
      :                          @31
   231: 7a 19                    u32 [sp] = a2
   233: 7a 18 04                 u32 [sp + 0x4] = a1
   236: 7a 17 08                 u32 [sp + 0x8] = a0
   239: 33 05 0c                 s0 = 0xc
   242: 64 17                    a0 = sp
   244: 33 08 0c                 a1 = 0xc
   247: 0a 13                    ecalli 19 // 'export'
   249: 64 58                    a1 = s0
   251: 64 17                    a0 = sp
   253: 82 10 18                 ra = u64 [sp + 0x18]
   256: 82 15 10                 s0 = u64 [sp + 0x10]
   259: 95 11 20                 sp = sp + 0x20
   262: 32 00                    ret
      :                          @32 [export #1: 'accumulate']
   264: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   268: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   272: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   276: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   280: 95 11 60 fc              sp = sp + 0xfffffffffffffc60
   284: 64 85                    s0 = a1
   286: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
   289: 51 05 f7 08              jump @96 if s0 == 0
      :                          @33
   293: 95 7b 08                 a4 = a0 + 0x8
   296: 7d b8                    a1 = i8 [a4]
   298: 33 06 01                 s1 = 0x1
   301: 5a 08 69                 jump @41 if a1 >s 0
      :                          @34
   304: 84 88 ff 00              a1 = a1 & 0xff
   308: 83 89 ff                 i32 a2 = a1 + 0xffffffffffffffff
   311: 84 99 ff 00              a2 = a2 & 0xff
   315: 33 0a bf 00              a3 = 0xbf
   319: 33 06 02                 s1 = 0x2
   322: ac a9 54                 jump @41 if a2 <u a3
      :                          @35
   325: 84 89 e0 00              a2 = a1 & 0xe0
   329: 33 0a c0 00              a3 = 0xc0
   333: 33 06 03                 s1 = 0x3
   336: aa a9 46                 jump @41 if a2 == a3
      :                          @36
   339: 84 89 f0 00              a2 = a1 & 0xf0
   343: 33 0a e0 00              a3 = 0xe0
   347: 33 06 04                 s1 = 0x4
   350: aa a9 38                 jump @41 if a2 == a3
      :                          @37
   353: 84 89 f8 00              a2 = a1 & 0xf8
   357: 33 0a f0 00              a3 = 0xf0
   361: 33 06 05                 s1 = 0x5
   364: aa a9 2a                 jump @41 if a2 == a3
      :                          @38
   367: 84 89 fc 00              a2 = a1 & 0xfc
   371: 33 0a f8 00              a3 = 0xf8
   375: 33 06 06                 s1 = 0x6
   378: aa a9 1c                 jump @41 if a2 == a3
      :                          @39
   381: 84 89 fe 00              a2 = a1 & 0xfe
   385: 33 0a fc 00              a3 = 0xfc
   389: 33 06 07                 s1 = 0x7
   392: aa a9 0e                 jump @41 if a2 == a3
      :                          @40
   395: 88 88 fe 00              a1 = a1 <u 0xfe
   399: 85 86 01                 s1 = a1 ^ 0x1
   402: 97 66 03                 s1 = s1 << 0x3
   405: 01                       fallthrough
      :                          @41
   406: 7b 15 18                 u64 [sp + 0x18] = s0
   409: ac 65 80 08              jump @97 if s0 <u s1
      :                          @42
   413: 80 77 04                 a0 = u32 [a0 + 0x4]
   416: 7b 17 20                 u64 [sp + 0x20] = a0
   419: 64 b5                    s0 = a4
   421: 64 b7                    a0 = a4
   423: 64 68                    a1 = s1
   425: 50 10 02 64 fe           ra = 2, jump @3
      :                          @43 [@dyn 1]
   430: 51 07 ad 00              jump @58 if a0 == 0
      :                          @44
   434: 82 19 18                 a2 = u64 [sp + 0x18]
   437: aa 69 66 08              jump @99 if a2 == s1
      :                          @45
   441: c8 56 07                 a0 = s1 + s0
   444: 7c 78                    a1 = u8 [a0]
   446: 95 7a 01                 a3 = a0 + 0x1
   449: 85 67 ff                 a0 = s1 ^ 0xffffffffffffffff
   452: c8 79 05                 s0 = a2 + a0
   455: 51 08 9b 00              jump @59 if a1 == 0
      :                          @46
   459: 33 06                    s1 = 0
   461: 33 0b                    a4 = 0
   463: 95 58 c0                 a1 = s0 + 0xffffffffffffffc0
   466: 51 08 23 01              jump @73 if a1 == 0
      :                          @47
   470: 95 a7 40                 a0 = a3 + 0x40
   473: 7d 7c                    a5 = i8 [a0]
   475: 33 09 01                 a2 = 0x1
   478: 64 ba                    a3 = a4
   480: 5a 0c 6d                 jump @56 if a5 >s 0
      :                          @48
   483: 84 c5 ff 00              s0 = a5 & 0xff
   487: 83 59 ff                 i32 a2 = s0 + 0xffffffffffffffff
   490: 84 9b ff 00              a4 = a2 & 0xff
   494: 33 0c bf 00              a5 = 0xbf
   498: 33 09 02                 a2 = 0x2
   501: ac cb 54                 jump @55 if a4 <u a5
      :                          @49
   504: 84 5b e0 00              a4 = s0 & 0xe0
   508: 33 0c c0 00              a5 = 0xc0
   512: 33 09 03                 a2 = 0x3
   515: aa cb 46                 jump @55 if a4 == a5
      :                          @50
   518: 84 5b f0 00              a4 = s0 & 0xf0
   522: 33 0c e0 00              a5 = 0xe0
   526: 33 09 04                 a2 = 0x4
   529: aa cb 38                 jump @55 if a4 == a5
      :                          @51
   532: 84 5b f8 00              a4 = s0 & 0xf8
   536: 33 0c f0 00              a5 = 0xf0
   540: 33 09 05                 a2 = 0x5
   543: aa cb 2a                 jump @55 if a4 == a5
      :                          @52
   546: 84 5b fc 00              a4 = s0 & 0xfc
   550: 33 0c f8 00              a5 = 0xf8
   554: 33 09 06                 a2 = 0x6
   557: aa cb 1c                 jump @55 if a4 == a5
      :                          @53
   560: 84 5b fe 00              a4 = s0 & 0xfe
   564: 33 0c fc 00              a5 = 0xfc
   568: 33 09 07                 a2 = 0x7
   571: aa cb 0e                 jump @55 if a4 == a5
      :                          @54
   574: 33 0b fe 00              a4 = 0xfe
   578: 33 09 08                 a2 = 0x8
   581: ac b5 b3 00              jump @74 if s0 <u a4
      :                          @55
   585: ac 98 d3 07              jump @100 if a1 <u a2
      :                          @56
   589: 64 98                    a1 = a2
   591: 64 a5                    s0 = a3
   593: 50 10 04 bc fd           ra = 4, jump @3
      :                          @57 [@dyn 2]
   598: 64 5a                    a3 = s0
   600: 28 a0 00                 jump @74
      :                          @58
   603: 33 06                    s1 = 0
   605: 33 0a                    a3 = 0
   607: 28 99 00                 jump @74
      :                          @59
   610: 51 05 77                 jump @71 if s0 == 0
      :                          @60
   613: 7d a7                    a0 = i8 [a3]
   615: 33 06 01                 s1 = 0x1
   618: 5a 07 5a                 jump @68 if a0 >s 0
      :                          @61
   621: 84 77 ff 00              a0 = a0 & 0xff
   625: 83 78 ff                 i32 a1 = a0 + 0xffffffffffffffff
   628: 84 88 ff 00              a1 = a1 & 0xff
   632: 33 06 02                 s1 = 0x2
   635: 53 28 bf 00 49           jump @68 if a1 <u 191
      :                          @62
   640: 84 78 e0 00              a1 = a0 & 0xe0
   644: 33 06 03                 s1 = 0x3
   647: 51 28 c0 00 3d           jump @68 if a1 == 192
      :                          @63
   652: 84 78 f0 00              a1 = a0 & 0xf0
   656: 33 06 04                 s1 = 0x4
   659: 51 28 e0 00 31           jump @68 if a1 == 224
      :                          @64
   664: 84 78 f8 00              a1 = a0 & 0xf8
   668: 33 06 05                 s1 = 0x5
   671: 51 28 f0 00 25           jump @68 if a1 == 240
      :                          @65
   676: 84 78 fc 00              a1 = a0 & 0xfc
   680: 33 06 06                 s1 = 0x6
   683: 51 28 f8 00 19           jump @68 if a1 == 248
      :                          @66
   688: 84 78 fe 00              a1 = a0 & 0xfe
   692: 33 06 07                 s1 = 0x7
   695: 51 28 fc 00 0d           jump @68 if a1 == 252
      :                          @67
   700: 33 06 08                 s1 = 0x8
   703: 53 27 fe 00 1a           jump @71 if a0 <u 254
      :                          @68
   708: ac 65 59 07              jump @101 if s0 <u s1
      :                          @69
   712: 64 a7                    a0 = a3
   714: 64 68                    a1 = s1
   716: 7b 1a 18                 u64 [sp + 0x18] = a3
   719: 50 10 06 3e fd           ra = 6, jump @3
      :                          @70 [@dyn 3]
   724: 82 1a 18                 a3 = u64 [sp + 0x18]
   727: 28 07                    jump @72
      :                          @71
   729: 33 06                    s1 = 0
   731: 33 07                    a0 = 0
   733: 01                       fallthrough
      :                          @72
   734: c8 6a 08                 a1 = a3 + s1
   737: c8 78 0a                 a3 = a1 + a0
   740: 64 7b                    a4 = a0
   742: c8 76 06                 s1 = s1 + a0
   745: c9 65 05                 s0 = s0 - s1
   748: 64 86                    s1 = a1
   750: 95 58 c0                 a1 = s0 + 0xffffffffffffffc0
   753: 52 08 e5 fe              jump @47 if a1 != 0
      :                          @73
   757: 64 ba                    a3 = a4
   759: 01                       fallthrough
      :                          @74
   760: 46 11 29                 u8 [sp + 41] = 0
   763: 81 65                    s0 = i32 [s1]
   765: 95 17 29                 a0 = sp + 0x29
   768: 33 08 01                 a1 = 0x1
   771: 7b 16 10                 u64 [sp + 0x10] = s1
   774: 64 69                    a2 = s1
   776: 7b 1a 18                 u64 [sp + 0x18] = a3
   779: 0a 03                    ecalli 3 // 'write'
   781: 46 11 2a 6a              u8 [sp + 42] = 0x6a
   785: 46 11 2b 61              u8 [sp + 43] = 0x61
   789: 46 11 2c 6d              u8 [sp + 44] = 0x6d
   793: 46 11 2d 44              u8 [sp + 45] = 0x44
   797: 46 11 2e 4f              u8 [sp + 46] = 0x4f
   801: 46 11 2f 54              u8 [sp + 47] = 0x54
   805: 46 11 30 6a              u8 [sp + 48] = 0x6a
   809: 46 11 31 0d              u8 [sp + 49] = 0xd
   813: 46 11 32 4a              u8 [sp + 50] = 0x4a
   817: 46 11 33 19              u8 [sp + 51] = 0x19
   821: 46 11 34 d1 00           u8 [sp + 52] = 0xd1
   826: 46 11 35 99 00           u8 [sp + 53] = 0x99
   831: 46 11 36 50              u8 [sp + 54] = 0x50
   835: 46 11 37 57              u8 [sp + 55] = 0x57
   839: 46 11 38 13              u8 [sp + 56] = 0x13
   843: 46 11 39 fc 00           u8 [sp + 57] = 0xfc
   848: 46 11 3a 65              u8 [sp + 58] = 0x65
   852: 46 11 3b f5 00           u8 [sp + 59] = 0xf5
   857: 46 11 3c 31              u8 [sp + 60] = 0x31
   861: 46 11 3d 03              u8 [sp + 61] = 0x3
   865: 46 11 3e 8e 00           u8 [sp + 62] = 0x8e
   870: 46 11 3f 73              u8 [sp + 63] = 0x73
   874: 33 0b f1 00              a4 = 0xf1
   878: 78 1b 40                 u8 [sp + 0x40] = a4
   881: 46 11 41 d8 00           u8 [sp + 65] = 0xd8
   886: 46 11 42 85 00           u8 [sp + 66] = 0x85
   891: 46 11 43 64              u8 [sp + 67] = 0x64
   895: 46 11 44 56              u8 [sp + 68] = 0x56
   899: 46 11 45 32              u8 [sp + 69] = 0x32
   903: 46 11 46 c8 00           u8 [sp + 70] = 0xc8
   908: 33 06 ae 00              s1 = 0xae
   912: 78 16 47                 u8 [sp + 0x47] = s1
   915: 46 11 48 50              u8 [sp + 72] = 0x50
   919: 33 0c 3c                 a5 = 0x3c
   922: 78 1c 49                 u8 [sp + 0x49] = a5
   925: 46 11 4a 4f              u8 [sp + 74] = 0x4f
   929: 46 11 4b 0c              u8 [sp + 75] = 0xc
   933: 46 11 4c 4d              u8 [sp + 76] = 0x4d
   937: 46 11 4d 5e              u8 [sp + 77] = 0x5e
   941: 46 11 4e 19              u8 [sp + 78] = 0x19
   945: 46 11 4f a7 00           u8 [sp + 79] = 0xa7
   950: 46 11 50 bf 00           u8 [sp + 80] = 0xbf
   955: 46 11 51 a9 00           u8 [sp + 81] = 0xa9
   960: 46 11 52 bb 00           u8 [sp + 82] = 0xbb
   965: 46 11 53 0f              u8 [sp + 83] = 0xf
   969: 46 11 54 a4 00           u8 [sp + 84] = 0xa4
   974: 46 11 55 96 00           u8 [sp + 85] = 0x96
   979: 46 11 56 87 00           u8 [sp + 86] = 0x87
   984: 46 11 57 47              u8 [sp + 87] = 0x47
   988: 46 11 58 e6 00           u8 [sp + 88] = 0xe6
   993: 46 11 59 3d              u8 [sp + 89] = 0x3d
   997: 78 1c 5a                 u8 [sp + 0x5a] = a5
  1000: 78 1b 5b                 u8 [sp + 0x5b] = a4
  1003: 46 11 5c e7 00           u8 [sp + 92] = 0xe7
  1008: 46 11 5d 4a              u8 [sp + 93] = 0x4a
  1012: 46 11 5e 49              u8 [sp + 94] = 0x49
  1016: 46 11 5f dd 00           u8 [sp + 95] = 0xdd
  1021: 46 11 60 c4 00           u8 [sp + 96] = 0xc4
  1026: 46 11 61 a6 00           u8 [sp + 97] = 0xa6
  1031: 46 11 62 ec 00           u8 [sp + 98] = 0xec
  1036: 46 11 63 a8 00           u8 [sp + 99] = 0xa8
  1041: 46 11 64 9a 00           u8 [sp + 100] = 0x9a
  1046: 46 11 65 6a              u8 [sp + 101] = 0x6a
  1050: 46 11 66 6f              u8 [sp + 102] = 0x6f
  1054: 46 11 67 33              u8 [sp + 103] = 0x33
  1058: 46 11 68 9d 00           u8 [sp + 104] = 0x9d
  1063: 46 11 69 a3 00           u8 [sp + 105] = 0xa3
  1068: 46 11 6a 33              u8 [sp + 106] = 0x33
  1072: 46 11 6b 7f              u8 [sp + 107] = 0x7f
  1076: 46 11 6c d2 00           u8 [sp + 108] = 0xd2
  1081: 46 11 6d eb 00           u8 [sp + 109] = 0xeb
  1086: 46 11 6e 55              u8 [sp + 110] = 0x55
  1090: 46 11 6f 07              u8 [sp + 111] = 0x7
  1094: 95 17 70                 a0 = sp + 0x70
  1097: 33 09 00 01              a2 = 0x100
  1101: 33 08                    a1 = 0
  1103: 50 10 08 85 06           ra = 8, jump @121
      :                          @75 [@dyn 4]
  1108: 7b 15 08                 u64 [sp + 0x8] = s0
  1111: 95 57 fe                 a0 = s0 + 0xfffffffffffffffe
  1114: 95 15 ff 07              s0 = sp + 0x7ff
  1118: 95 55 78 03              s0 = s0 + 0x378
  1122: 82 16 20                 s1 = u64 [sp + 0x20]
  1125: 56 17 08 16 05           jump @90 if a0 >u 8
      :                          @76
  1130: 97 77 02                 a0 = a0 << 0x2
  1133: 33 08 00 00 01           a1 = 0x10000
  1138: c8 87 07                 a0 = a0 + a1
  1141: 81 77                    a0 = i32 [a0]
  1143: c8 87 07                 a0 = a0 + a1
  1146: 32 07                    jump [a0]
      :                          @77 [@dyn 5]
  1148: 95 18 2a                 a1 = sp + 0x2a
  1151: 33 09 03                 a2 = 0x3
  1154: 95 1a 70                 a3 = sp + 0x70
  1157: 33 0c 00 01              a5 = 0x100
  1161: 64 67                    a0 = s1
  1163: 33 0b                    a4 = 0
  1165: 0a 02                    ecalli 2 // 'read'
  1167: 46 15 01 01              u8 [s0 + 1] = 0x1
  1171: 7b 17 70 01              u64 [sp + 0x170] = a0
  1175: 95 17 ff 07              a0 = sp + 0x7ff
  1179: 95 77 79 03              a0 = a0 + 0x379
  1183: 33 08 01                 a1 = 0x1
  1186: 95 19 70 01              a2 = sp + 0x170
  1190: 33 0a 08                 a3 = 0x8
  1193: 0a 03                    ecalli 3 // 'write'
  1195: 95 17 2a                 a0 = sp + 0x2a
  1198: 33 08 03                 a1 = 0x3
  1201: 95 19 2d                 a2 = sp + 0x2d
  1204: 33 0a 03                 a3 = 0x3
  1207: 0a 03                    ecalli 3 // 'write'
  1209: 46 15 01 02              u8 [s0 + 1] = 0x2
  1213: 7b 17 70 01              u64 [sp + 0x170] = a0
  1217: 95 17 ff 07              a0 = sp + 0x7ff
  1221: 95 77 79 03              a0 = a0 + 0x379
  1225: 33 08 01                 a1 = 0x1
  1228: 95 19 70 01              a2 = sp + 0x170
  1232: 33 0a 08                 a3 = 0x8
  1235: 0a 03                    ecalli 3 // 'write'
  1237: 95 18 2a                 a1 = sp + 0x2a
  1240: 33 09 03                 a2 = 0x3
  1243: 95 1a 70                 a3 = sp + 0x70
  1246: 33 0c 00 01              a5 = 0x100
  1250: 64 67                    a0 = s1
  1252: 33 0b                    a4 = 0
  1254: 0a 02                    ecalli 2 // 'read'
  1256: 46 15 01 05              u8 [s0 + 1] = 0x5
  1260: 7b 17 70 01              u64 [sp + 0x170] = a0
  1264: 95 17 ff 07              a0 = sp + 0x7ff
  1268: 95 77 79 03              a0 = a0 + 0x379
  1272: 33 08 01                 a1 = 0x1
  1275: 95 19 70 01              a2 = sp + 0x170
  1279: 33 0a 08                 a3 = 0x8
  1282: 0a 03                    ecalli 3 // 'write'
  1284: 95 17 2a                 a0 = sp + 0x2a
  1287: 33 08                    a1 = 0
  1289: 0a 0f                    ecalli 15 // 'forget'
  1291: 46 15 01 06              u8 [s0 + 1] = 0x6
  1295: 7b 17 70 01              u64 [sp + 0x170] = a0
  1299: 95 17 ff 07              a0 = sp + 0x7ff
  1303: 95 77 79 03              a0 = a0 + 0x379
  1307: 33 08 01                 a1 = 0x1
  1310: 95 19 70 01              a2 = sp + 0x170
  1314: 33 0a 08                 a3 = 0x8
  1317: 0a 03                    ecalli 3 // 'write'
  1319: 28 54 04                 jump @90
      :                          @78 [@dyn 6]
  1322: 95 17 30                 a0 = sp + 0x30
  1325: 33 08 03                 a1 = 0x3
  1328: 0a 0e                    ecalli 14 // 'solicit'
  1330: 46 15 01 01              u8 [s0 + 1] = 0x1
  1334: 7b 17 70 01              u64 [sp + 0x170] = a0
  1338: 95 17 ff 07              a0 = sp + 0x7ff
  1342: 95 77 79 03              a0 = a0 + 0x379
  1346: 33 08 01                 a1 = 0x1
  1349: 95 19 70 01              a2 = sp + 0x170
  1353: 33 0a 08                 a3 = 0x8
  1356: 0a 03                    ecalli 3 // 'write'
  1358: 95 17 30                 a0 = sp + 0x30
  1361: 33 08 03                 a1 = 0x3
  1364: 0a 0d                    ecalli 13 // 'query'
  1366: 46 15 01 02              u8 [s0 + 1] = 0x2
  1370: 7b 17 70 01              u64 [sp + 0x170] = a0
  1374: 95 17 ff 07              a0 = sp + 0x7ff
  1378: 95 77 79 03              a0 = a0 + 0x379
  1382: 33 08 01                 a1 = 0x1
  1385: 95 19 70 01              a2 = sp + 0x170
  1389: 33 0a 08                 a3 = 0x8
  1392: 0a 03                    ecalli 3 // 'write'
  1394: 95 17 50                 a0 = sp + 0x50
  1397: 33 08 03                 a1 = 0x3
  1400: 0a 0d                    ecalli 13 // 'query'
  1402: 46 15 01 05              u8 [s0 + 1] = 0x5
  1406: 7b 17 70 01              u64 [sp + 0x170] = a0
  1410: 95 17 ff 07              a0 = sp + 0x7ff
  1414: 95 77 79 03              a0 = a0 + 0x379
  1418: 33 08 01                 a1 = 0x1
  1421: 95 19 70 01              a2 = sp + 0x170
  1425: 33 0a 08                 a3 = 0x8
  1428: 0a 03                    ecalli 3 // 'write'
  1430: 28 e5 03                 jump @90
      :                          @79 [@dyn 7]
  1433: 95 17 30                 a0 = sp + 0x30
  1436: 33 08 03                 a1 = 0x3
  1439: 0a 0f                    ecalli 15 // 'forget'
  1441: 46 15 01 01              u8 [s0 + 1] = 0x1
  1445: 7b 17 70 01              u64 [sp + 0x170] = a0
  1449: 95 17 ff 07              a0 = sp + 0x7ff
  1453: 95 77 79 03              a0 = a0 + 0x379
  1457: 33 08 01                 a1 = 0x1
  1460: 95 19 70 01              a2 = sp + 0x170
  1464: 33 0a 08                 a3 = 0x8
  1467: 0a 03                    ecalli 3 // 'write'
  1469: 95 17 30                 a0 = sp + 0x30
  1472: 33 08 03                 a1 = 0x3
  1475: 0a 0d                    ecalli 13 // 'query'
  1477: 46 15 01 02              u8 [s0 + 1] = 0x2
  1481: 7b 17 70 01              u64 [sp + 0x170] = a0
  1485: 95 17 ff 07              a0 = sp + 0x7ff
  1489: 95 77 79 03              a0 = a0 + 0x379
  1493: 33 08 01                 a1 = 0x1
  1496: 95 19 70 01              a2 = sp + 0x170
  1500: 33 0a 08                 a3 = 0x8
  1503: 0a 03                    ecalli 3 // 'write'
  1505: 95 18 50                 a1 = sp + 0x50
  1508: 95 19 70                 a2 = sp + 0x70
  1511: 33 0b 03                 a4 = 0x3
  1514: 64 67                    a0 = s1
  1516: 33 0a                    a3 = 0
  1518: 0a 01                    ecalli 1 // 'lookup'
  1520: 46 15 01 05              u8 [s0 + 1] = 0x5
  1524: 7b 17 70 01              u64 [sp + 0x170] = a0
  1528: 95 17 ff 07              a0 = sp + 0x7ff
  1532: 95 77 79 03              a0 = a0 + 0x379
  1536: 33 08 01                 a1 = 0x1
  1539: 95 19 70 01              a2 = sp + 0x170
  1543: 33 0a 08                 a3 = 0x8
  1546: 0a 03                    ecalli 3 // 'write'
  1548: 33 07 e8 03              a0 = 0x3e8
  1552: 95 18 2a                 a1 = sp + 0x2a
  1555: 0a 06                    ecalli 6 // 'assign'
  1557: 46 15 01 06              u8 [s0 + 1] = 0x6
  1561: 7b 17 70 01              u64 [sp + 0x170] = a0
  1565: 95 17 ff 07              a0 = sp + 0x7ff
  1569: 95 77 79 03              a0 = a0 + 0x379
  1573: 33 08 01                 a1 = 0x1
  1576: 95 19 70 01              a2 = sp + 0x170
  1580: 33 0a 08                 a3 = 0x8
  1583: 0a 03                    ecalli 3 // 'write'
  1585: 28 4a 03                 jump @90
      :                          @80 [@dyn 8]
  1588: 95 18 30                 a1 = sp + 0x30
  1591: 95 19 70                 a2 = sp + 0x70
  1594: 33 0b 03                 a4 = 0x3
  1597: 64 67                    a0 = s1
  1599: 33 0a                    a3 = 0
  1601: 0a 01                    ecalli 1 // 'lookup'
  1603: 46 15 01 01              u8 [s0 + 1] = 0x1
  1607: 7b 17 70 01              u64 [sp + 0x170] = a0
  1611: 95 17 ff 07              a0 = sp + 0x7ff
  1615: 95 77 79 03              a0 = a0 + 0x379
  1619: 33 08 01                 a1 = 0x1
  1622: 95 19 70 01              a2 = sp + 0x170
  1626: 33 0a 08                 a3 = 0x8
  1629: 0a 03                    ecalli 3 // 'write'
  1631: 95 17 30                 a0 = sp + 0x30
  1634: 33 08 03                 a1 = 0x3
  1637: 0a 0d                    ecalli 13 // 'query'
  1639: 46 15 01 02              u8 [s0 + 1] = 0x2
  1643: 7b 17 70 01              u64 [sp + 0x170] = a0
  1647: 95 17 ff 07              a0 = sp + 0x7ff
  1651: 95 77 79 03              a0 = a0 + 0x379
  1655: 33 08 01                 a1 = 0x1
  1658: 95 19 70 01              a2 = sp + 0x170
  1662: 33 0a 08                 a3 = 0x8
  1665: 0a 03                    ecalli 3 // 'write'
  1667: 95 18 30                 a1 = sp + 0x30
  1670: 64 67                    a0 = s1
  1672: 0a 0c                    ecalli 12 // 'eject'
  1674: 46 15 01 05              u8 [s0 + 1] = 0x5
  1678: 7b 17 70 01              u64 [sp + 0x170] = a0
  1682: 95 17 ff 07              a0 = sp + 0x7ff
  1686: 95 77 79 03              a0 = a0 + 0x379
  1690: 33 08 01                 a1 = 0x1
  1693: 95 19 70 01              a2 = sp + 0x170
  1697: 33 0a 08                 a3 = 0x8
  1700: 0a 03                    ecalli 3 // 'write'
  1702: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  1712: 95 1a 30                 a3 = sp + 0x30
  1715: 33 08                    a1 = 0
  1717: 33 09                    a2 = 0
  1719: 33 0b                    a4 = 0
  1721: 0a 05                    ecalli 5 // 'bless'
  1723: 46 15 01 06              u8 [s0 + 1] = 0x6
  1727: 7b 17 70 01              u64 [sp + 0x170] = a0
  1731: 95 17 ff 07              a0 = sp + 0x7ff
  1735: 95 77 79 03              a0 = a0 + 0x379
  1739: 33 08 01                 a1 = 0x1
  1742: 95 19 70 01              a2 = sp + 0x170
  1746: 33 0a 08                 a3 = 0x8
  1749: 0a 03                    ecalli 3 // 'write'
  1751: 28 a4 02                 jump @90
      :                          @81 [@dyn 9]
  1754: 95 17 30                 a0 = sp + 0x30
  1757: 33 08 03                 a1 = 0x3
  1760: 0a 0e                    ecalli 14 // 'solicit'
  1762: 46 15 01 01              u8 [s0 + 1] = 0x1
  1766: 7b 17 70 01              u64 [sp + 0x170] = a0
  1770: 95 17 ff 07              a0 = sp + 0x7ff
  1774: 95 77 79 03              a0 = a0 + 0x379
  1778: 33 08 01                 a1 = 0x1
  1781: 95 19 70 01              a2 = sp + 0x170
  1785: 33 0a 08                 a3 = 0x8
  1788: 0a 03                    ecalli 3 // 'write'
  1790: 95 17 30                 a0 = sp + 0x30
  1793: 33 08 03                 a1 = 0x3
  1796: 0a 0d                    ecalli 13 // 'query'
  1798: 46 15 01 02              u8 [s0 + 1] = 0x2
  1802: 7b 17 70 01              u64 [sp + 0x170] = a0
  1806: 95 17 ff 07              a0 = sp + 0x7ff
  1810: 95 77 79 03              a0 = a0 + 0x379
  1814: 33 08 01                 a1 = 0x1
  1817: 95 19 70 01              a2 = sp + 0x170
  1821: 33 0a 08                 a3 = 0x8
  1824: 0a 03                    ecalli 3 // 'write'
  1826: 95 15 70 01              s0 = sp + 0x170
  1830: 33 09 00 0a              a2 = 0xa00
  1834: 95 17 70 01              a0 = sp + 0x170
  1838: 33 08                    a1 = 0
  1840: 50 10 14 a4 03           ra = 20, jump @121
      :                          @82 [@dyn 10]
  1845: 33 06 50                 s1 = 0x50
  1848: 01                       fallthrough
      :                          @83
  1849: 95 18 30                 a1 = sp + 0x30
  1852: 33 09 20                 a2 = 0x20
  1855: 64 57                    a0 = s0
  1857: 50 10 16 e1 02           ra = 22, jump @103
      :                          @84 [@dyn 11]
  1862: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  1865: 95 55 20                 s0 = s0 + 0x20
  1868: 52 06 ed                 jump @83 if s1 != 0
      :                          @85
  1871: 95 18 70 01              a1 = sp + 0x170
  1875: 33 07                    a0 = 0
  1877: 0a 06                    ecalli 6 // 'assign'
  1879: 95 15 ff 07              s0 = sp + 0x7ff
  1883: 95 55 78 03              s0 = s0 + 0x378
  1887: 46 05 05                 u8 [s0 + 0] = 0x5
  1890: 7b 57 01                 u64 [s0 + 0x1] = a0
  1893: 95 17 ff 07              a0 = sp + 0x7ff
  1897: 95 77 78 03              a0 = a0 + 0x378
  1901: 33 08 01                 a1 = 0x1
  1904: 95 19 ff 07              a2 = sp + 0x7ff
  1908: 95 99 79 03              a2 = a2 + 0x379
  1912: 33 0a 08                 a3 = 0x8
  1915: 0a 03                    ecalli 3 // 'write'
  1917: 82 16 20                 s1 = u64 [sp + 0x20]
  1920: 28 fb 01                 jump @90
      :                          @86 [@dyn 12]
  1923: 95 17 30                 a0 = sp + 0x30
  1926: 33 08 03                 a1 = 0x3
  1929: 0a 0f                    ecalli 15 // 'forget'
  1931: 46 15 01 01              u8 [s0 + 1] = 0x1
  1935: 7b 17 70 01              u64 [sp + 0x170] = a0
  1939: 95 17 ff 07              a0 = sp + 0x7ff
  1943: 95 77 79 03              a0 = a0 + 0x379
  1947: 33 08 01                 a1 = 0x1
  1950: 95 19 70 01              a2 = sp + 0x170
  1954: 33 0a 08                 a3 = 0x8
  1957: 0a 03                    ecalli 3 // 'write'
  1959: 95 17 30                 a0 = sp + 0x30
  1962: 33 08 03                 a1 = 0x3
  1965: 0a 0d                    ecalli 13 // 'query'
  1967: 46 15 01 02              u8 [s0 + 1] = 0x2
  1971: 7b 17 70 01              u64 [sp + 0x170] = a0
  1975: 95 17 ff 07              a0 = sp + 0x7ff
  1979: 95 77 79 03              a0 = a0 + 0x379
  1983: 33 08 01                 a1 = 0x1
  1986: 95 19 70 01              a2 = sp + 0x170
  1990: 33 0a 08                 a3 = 0x8
  1993: 0a 03                    ecalli 3 // 'write'
  1995: 28 b0 01                 jump @90
      :                          @87 [@dyn 13]
  1998: 95 18 30                 a1 = sp + 0x30
  2001: 95 19 70                 a2 = sp + 0x70
  2004: 33 0b 03                 a4 = 0x3
  2007: 64 67                    a0 = s1
  2009: 33 0a                    a3 = 0
  2011: 0a 01                    ecalli 1 // 'lookup'
  2013: 46 15 01 01              u8 [s0 + 1] = 0x1
  2017: 7b 17 70 01              u64 [sp + 0x170] = a0
  2021: 95 17 ff 07              a0 = sp + 0x7ff
  2025: 95 77 79 03              a0 = a0 + 0x379
  2029: 33 08 01                 a1 = 0x1
  2032: 95 19 70 01              a2 = sp + 0x170
  2036: 33 0a 08                 a3 = 0x8
  2039: 0a 03                    ecalli 3 // 'write'
  2041: 95 17 30                 a0 = sp + 0x30
  2044: 33 08 03                 a1 = 0x3
  2047: 0a 0d                    ecalli 13 // 'query'
  2049: 46 15 01 02              u8 [s0 + 1] = 0x2
  2053: 7b 17 70 01              u64 [sp + 0x170] = a0
  2057: 95 17 ff 07              a0 = sp + 0x7ff
  2061: 95 77 79 03              a0 = a0 + 0x379
  2065: 33 08 01                 a1 = 0x1
  2068: 95 19 70 01              a2 = sp + 0x170
  2072: 33 0a 08                 a3 = 0x8
  2075: 0a 03                    ecalli 3 // 'write'
  2077: 28 5e 01                 jump @90
      :                          @88 [@dyn 14]
  2080: 33 05 27 ea 0d           s0 = 0xdea27
  2085: 95 17 30                 a0 = sp + 0x30
  2088: 33 08 03                 a1 = 0x3
  2091: 33 09 27 ea 0d           a2 = 0xdea27
  2096: 33 0a 27 ea 0d           a3 = 0xdea27
  2101: 0a 09                    ecalli 9 // 'new'
  2103: 95 19 ff 07              a2 = sp + 0x7ff
  2107: 95 99 78 03              a2 = a2 + 0x378
  2111: 46 19 01 01              u8 [a2 + 1] = 0x1
  2115: 7b 17 70 01              u64 [sp + 0x170] = a0
  2119: 95 17 ff 07              a0 = sp + 0x7ff
  2123: 95 77 79 03              a0 = a0 + 0x379
  2127: 33 08 01                 a1 = 0x1
  2130: 95 19 70 01              a2 = sp + 0x170
  2134: 33 0a 08                 a3 = 0x8
  2137: 0a 03                    ecalli 3 // 'write'
  2139: 95 17 30                 a0 = sp + 0x30
  2142: 64 58                    a1 = s0
  2144: 64 59                    a2 = s0
  2146: 0a 0a                    ecalli 10 // 'upgrade'
  2148: 95 19 ff 07              a2 = sp + 0x7ff
  2152: 95 99 78 03              a2 = a2 + 0x378
  2156: 46 19 01 02              u8 [a2 + 1] = 0x2
  2160: 7b 17 70 01              u64 [sp + 0x170] = a0
  2164: 95 17 ff 07              a0 = sp + 0x7ff
  2168: 95 77 79 03              a0 = a0 + 0x379
  2172: 33 08 01                 a1 = 0x1
  2175: 95 19 70 01              a2 = sp + 0x170
  2179: 33 0a 08                 a3 = 0x8
  2182: 0a 03                    ecalli 3 // 'write'
  2184: 48 21 70 01 8f 03        u32 [sp + 368] = 0x38f
  2190: 48 21 78 01              u32 [sp + 376] = 0
  2194: 7a 15 74 01              u32 [sp + 0x174] = s0
  2198: 95 15 ff 07              s0 = sp + 0x7ff
  2202: 95 55 78 03              s0 = s0 + 0x378
  2206: 33 08 01                 a1 = 0x1
  2209: 33 09 01                 a2 = 0x1
  2212: 95 1a 70 01              a3 = sp + 0x170
  2216: 33 0b 01                 a4 = 0x1
  2219: 33 07                    a0 = 0
  2221: 0a 05                    ecalli 5 // 'bless'
  2223: 46 05 05                 u8 [s0 + 0] = 0x5
  2226: 7b 57 01                 u64 [s0 + 0x1] = a0
  2229: 95 17 ff 07              a0 = sp + 0x7ff
  2233: 95 77 78 03              a0 = a0 + 0x378
  2237: 33 08 01                 a1 = 0x1
  2240: 95 19 ff 07              a2 = sp + 0x7ff
  2244: 95 99 79 03              a2 = a2 + 0x379
  2248: 33 0a 08                 a3 = 0x8
  2251: 0a 03                    ecalli 3 // 'write'
  2253: 28 ae 00                 jump @90
      :                          @89 [@dyn 15]
  2256: 95 18 2a                 a1 = sp + 0x2a
  2259: 33 09 03                 a2 = 0x3
  2262: 95 1a 70                 a3 = sp + 0x70
  2265: 33 0c 00 01              a5 = 0x100
  2269: 64 67                    a0 = s1
  2271: 33 0b                    a4 = 0
  2273: 0a 02                    ecalli 2 // 'read'
  2275: 46 15 01 01              u8 [s0 + 1] = 0x1
  2279: 7b 17 70 01              u64 [sp + 0x170] = a0
  2283: 95 17 ff 07              a0 = sp + 0x7ff
  2287: 95 77 79 03              a0 = a0 + 0x379
  2291: 33 08 01                 a1 = 0x1
  2294: 95 19 70 01              a2 = sp + 0x170
  2298: 33 0a 08                 a3 = 0x8
  2301: 0a 03                    ecalli 3 // 'write'
  2303: 95 17 2a                 a0 = sp + 0x2a
  2306: 33 08 03                 a1 = 0x3
  2309: 33 09                    a2 = 0
  2311: 33 0a                    a3 = 0
  2313: 0a 03                    ecalli 3 // 'write'
  2315: 46 15 01 02              u8 [s0 + 1] = 0x2
  2319: 7b 17 70 01              u64 [sp + 0x170] = a0
  2323: 95 17 ff 07              a0 = sp + 0x7ff
  2327: 95 77 79 03              a0 = a0 + 0x379
  2331: 33 08 01                 a1 = 0x1
  2334: 95 19 70 01              a2 = sp + 0x170
  2338: 33 0a 08                 a3 = 0x8
  2341: 0a 03                    ecalli 3 // 'write'
  2343: 95 18 2a                 a1 = sp + 0x2a
  2346: 33 09 03                 a2 = 0x3
  2349: 95 1a 70                 a3 = sp + 0x70
  2352: 33 0c 00 01              a5 = 0x100
  2356: 64 67                    a0 = s1
  2358: 33 0b                    a4 = 0
  2360: 0a 02                    ecalli 2 // 'read'
  2362: 46 15 01 05              u8 [s0 + 1] = 0x5
  2366: 7b 17 70 01              u64 [sp + 0x170] = a0
  2370: 95 17 ff 07              a0 = sp + 0x7ff
  2374: 95 77 79 03              a0 = a0 + 0x379
  2378: 33 08 01                 a1 = 0x1
  2381: 95 19 70 01              a2 = sp + 0x170
  2385: 33 0a 08                 a3 = 0x8
  2388: 0a 03                    ecalli 3 // 'write'
  2390: 95 17 30                 a0 = sp + 0x30
  2393: 33 08 03                 a1 = 0x3
  2396: 0a 0e                    ecalli 14 // 'solicit'
  2398: 46 15 01 06              u8 [s0 + 1] = 0x6
  2402: 7b 17 70 01              u64 [sp + 0x170] = a0
  2406: 95 17 ff 07              a0 = sp + 0x7ff
  2410: 95 77 79 03              a0 = a0 + 0x379
  2414: 33 08 01                 a1 = 0x1
  2417: 95 19 70 01              a2 = sp + 0x170
  2421: 33 0a 08                 a3 = 0x8
  2424: 0a 03                    ecalli 3 // 'write'
  2426: 01                       fallthrough
      :                          @90
  2427: 95 18 70                 a1 = sp + 0x70
  2430: 64 67                    a0 = s1
  2432: 0a 04                    ecalli 4 // 'info'
  2434: 46 15 01 08              u8 [s0 + 1] = 0x8
  2438: 7b 17 70 01              u64 [sp + 0x170] = a0
  2442: 95 17 ff 07              a0 = sp + 0x7ff
  2446: 95 77 79 03              a0 = a0 + 0x379
  2450: 33 08 01                 a1 = 0x1
  2453: 95 19 70 01              a2 = sp + 0x170
  2457: 33 0a 08                 a3 = 0x8
  2460: 0a 03                    ecalli 3 // 'write'
  2462: 0a                       ecalli 0 // 'gas'
  2463: 46 15 01 09              u8 [s0 + 1] = 0x9
  2467: 7b 17 70 01              u64 [sp + 0x170] = a0
  2471: 95 17 ff 07              a0 = sp + 0x7ff
  2475: 95 77 79 03              a0 = a0 + 0x379
  2479: 33 08 01                 a1 = 0x1
  2482: 95 19 70 01              a2 = sp + 0x170
  2486: 33 0a 08                 a3 = 0x8
  2489: 0a 03                    ecalli 3 // 'write'
  2491: 01                       fallthrough
      :                          @91
  2492: 49 21 88 01              u64 [sp + 392] = 0
  2496: 49 21 80 01              u64 [sp + 384] = 0
  2500: 49 21 78 01              u64 [sp + 376] = 0
  2504: 49 21 70 01              u64 [sp + 368] = 0
  2508: 82 19 18                 a2 = u64 [sp + 0x18]
  2511: 55 19 21 4b              jump @98 if a2 >=u 33
      :                          @92
  2515: 95 17 70 01              a0 = sp + 0x170
  2519: 82 18 10                 a1 = u64 [sp + 0x10]
  2522: 50 10 20 48              ra = 32, jump @103
      :                          @93 [@dyn 16]
  2526: 82 18 08                 a1 = u64 [sp + 0x8]
  2529: 87 87 ab aa aa aa        i32 a0 = a1 * 0xffffffffaaaaaaab
  2535: 55 47 56 55 55 55 0e     jump @95 if a0 >=u 1431655766
      :                          @94
  2542: 33 07                    a0 = 0
  2544: 33 08 01                 a1 = 0x1
  2547: 32 07                    jump [a0]
      :                          @95
  2549: 95 17 70 01              a0 = sp + 0x170
  2553: 0a 10                    ecalli 16 // 'oyield'
  2555: 33 08 20                 a1 = 0x20
  2558: 95 17 70 01              a0 = sp + 0x170
  2562: 95 11 a0 03              sp = sp + 0x3a0
  2566: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  2570: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  2574: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  2578: 95 11 f8 07              sp = sp + 0x7f8
  2582: 32 00                    ret
      :                          @96
  2584: 00                       trap
      :                          @97
  2585: 00                       trap
      :                          @98
  2586: 00                       trap
      :                          @99
  2587: 00                       trap
      :                          @100
  2588: 00                       trap
      :                          @101
  2589: 00                       trap
      :                          @102 [export #2: 'on_transfer']
  2590: 33 07                    a0 = 0
  2592: 32 00                    ret
      :                          @103
  2594: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2597: 7b 10 18                 u64 [sp + 0x18] = ra
  2600: 7b 15 10                 u64 [sp + 0x10] = s0
  2603: 7b 16 08                 u64 [sp + 0x8] = s1
  2606: 53 19 10 64              jump @112 if a2 <u 16
      :                          @104
  2610: 8d 7a                    i32 a3 = -a0
  2612: 84 a2 07                 t0 = a3 & 0x7
  2615: c8 27 0b                 a4 = a0 + t0
  2618: 51 02 15                 jump @107 if t0 == 0
      :                          @105
  2621: 64 8c                    a5 = a1
  2623: 64 75                    s0 = a0
  2625: 01                       fallthrough
      :                          @106
  2626: 7c ca                    a3 = u8 [a5]
  2628: 78 5a                    u8 [s0] = a3
  2630: 95 55 01                 s0 = s0 + 0x1
  2633: 95 cc 01                 a5 = a5 + 0x1
  2636: ac b5 f6                 jump @106 if s0 <u a4
      :                          @107
  2639: c8 28 03                 t1 = a1 + t0
  2642: c9 29 02                 t0 = a2 - t0
  2645: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2648: 84 38 07                 a1 = t1 & 0x7
  2651: c8 4b 0a                 a3 = a4 + t2
  2654: 51 08 3b                 jump @114 if a1 == 0
      :                          @108
  2657: 58 04 4b                 jump @117 if t2 <=s 0
      :                          @109
  2660: 97 38 03                 a1 = t1 << 0x3
  2663: 84 80 38                 ra = a1 & 0x38
  2666: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2669: 82 c5                    s0 = u64 [a5]
  2671: 8d 88                    i32 a1 = -a1
  2673: 84 88 38                 a1 = a1 & 0x38
  2676: 95 cc 08                 a5 = a5 + 0x8
  2679: 01                       fallthrough
      :                          @110
  2680: 82 c6                    s1 = u64 [a5]
  2682: d0 05 05                 s0 = s0 >> ra
  2685: cf 86 09                 a2 = s1 << a1
  2688: d4 59 09                 a2 = a2 | s0
  2691: 7b b9                    u64 [a4] = a2
  2693: 95 bb 08                 a4 = a4 + 0x8
  2696: 95 cc 08                 a5 = a5 + 0x8
  2699: 64 65                    s0 = s1
  2701: ac ab eb                 jump @110 if a4 <u a3
      :                          @111
  2704: 28 1c                    jump @117
      :                          @112
  2706: 64 7a                    a3 = a0
  2708: 52 09 21                 jump @118 if a2 != 0
      :                          @113
  2711: 28 2f                    jump @120
      :                          @114
  2713: 58 04 13                 jump @117 if t2 <=s 0
      :                          @115
  2716: 64 38                    a1 = t1
  2718: 01                       fallthrough
      :                          @116
  2719: 82 89                    a2 = u64 [a1]
  2721: 7b b9                    u64 [a4] = a2
  2723: 95 bb 08                 a4 = a4 + 0x8
  2726: 95 88 08                 a1 = a1 + 0x8
  2729: ac ab f6                 jump @116 if a4 <u a3
      :                          @117
  2732: c8 43 08                 a1 = t1 + t2
  2735: 84 29 07                 a2 = t0 & 0x7
  2738: 51 09 14                 jump @120 if a2 == 0
      :                          @118
  2741: c8 a9 09                 a2 = a2 + a3
  2744: 01                       fallthrough
      :                          @119
  2745: 7c 8b                    a4 = u8 [a1]
  2747: 78 ab                    u8 [a3] = a4
  2749: 95 aa 01                 a3 = a3 + 0x1
  2752: 95 88 01                 a1 = a1 + 0x1
  2755: ac 9a f6                 jump @119 if a3 <u a2
      :                          @120
  2758: 82 10 18                 ra = u64 [sp + 0x18]
  2761: 82 15 10                 s0 = u64 [sp + 0x10]
  2764: 82 16 08                 s1 = u64 [sp + 0x8]
  2767: 95 11 20                 sp = sp + 0x20
  2770: 32 00                    ret
      :                          @121
  2772: 53 19 10 48              jump @130 if a2 <u 16
      :                          @122
  2776: 8d 7a                    i32 a3 = -a0
  2778: 84 aa 07                 a3 = a3 & 0x7
  2781: c8 a7 0b                 a4 = a0 + a3
  2784: 51 0a 0e                 jump @125 if a3 == 0
      :                          @123
  2787: 64 7c                    a5 = a0
  2789: 01                       fallthrough
      :                          @124
  2790: 78 c8                    u8 [a5] = a1
  2792: 95 cc 01                 a5 = a5 + 0x1
  2795: ac bc fb                 jump @124 if a5 <u a4
      :                          @125
  2798: c9 a9 03                 t1 = a2 - a3
  2801: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2804: c8 cb 0a                 a3 = a4 + a5
  2807: 58 0c 1d                 jump @128 if a5 <=s 0
      :                          @126
  2810: 84 82 ff 00              t0 = a1 & 0xff
  2814: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  2824: ca 92 0c                 a5 = t0 * a2
  2827: 01                       fallthrough
      :                          @127
  2828: 7b bc                    u64 [a4] = a5
  2830: 95 bb 08                 a4 = a4 + 0x8
  2833: ac ab fb                 jump @127 if a4 <u a3
      :                          @128
  2836: 84 39 07                 a2 = t1 & 0x7
  2839: 52 09 0a                 jump @131 if a2 != 0
      :                          @129
  2842: 28 13                    jump @133
      :                          @130
  2844: 64 7a                    a3 = a0
  2846: 51 09 0f                 jump @133 if a2 == 0
      :                          @131
  2849: c8 a9 09                 a2 = a2 + a3
  2852: 01                       fallthrough
      :                          @132
  2853: 78 a8                    u8 [a3] = a1
  2855: 95 aa 01                 a3 = a3 + 0x1
  2858: ac 9a fb                 jump @132 if a3 <u a2
      :                          @133
  2861: 32 00                    ret
