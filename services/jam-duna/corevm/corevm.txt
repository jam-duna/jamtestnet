// RO data = 103/104 bytes
// RW data = 16/16 bytes
// Stack size = 40960 bytes
// Jump table entry point size = 2 bytes
// RO data = [36, 0, 255, 255, 38, 0, 255, 255, 40, 0, 255, 255, 42, 0, 255, 255, 44, 0, 255, 255, 50, 0, 255, 255, 52, 0, 255, 255, 54, 0, 255, 255, 56, 0, 255, 255, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 103, 101, 116, 95, 112, 97, 103, 101, 58, 32, 112, 101, 101, 107, 32, 102, 97, 105, 108, 101, 100]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 1765
// Code size = 5564 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 c3 0a 00 00           jump @171
      :                          @2
    10: 28 fe 13                 jump @248
      :                          @3 [export #0: 'refine']
    13: 95 11 08 f8              sp = sp + 0xfffffffffffff808
    17: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
    21: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
    25: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
    29: 95 11 c8 b3              sp = sp + 0xffffffffffffb3c8
    33: 33 09 04                 a2 = 0x4
    36: 33 0a 00 00 01           a3 = 0x10000
    41: ac 98 8a 00              jump @16 if a1 <u a2
      :                          @4
    45: 95 85 fc                 s0 = a1 + 0xfffffffffffffffc
    48: 51 05 83 00              jump @16 if s0 == 0
      :                          @5
    52: 95 79 04                 a2 = a0 + 0x4
    55: 7d 98                    a1 = i8 [a2]
    57: 80 7a                    a3 = u32 [a0]
    59: 33 06 01                 s1 = 0x1
    62: 59 08 3b                 jump @13 if a1 >=s 0
      :                          @6
    65: 84 87 ff 00              a0 = a1 & 0xff
    69: 33 06 02                 s1 = 0x2
    72: 53 27 c0 00 2d           jump @12 if a0 <u 192
      :                          @7
    77: 33 06 03                 s1 = 0x3
    80: 53 27 e0 00 25           jump @12 if a0 <u 224
      :                          @8
    85: 33 06 04                 s1 = 0x4
    88: 53 27 f0 00 1d           jump @12 if a0 <u 240
      :                          @9
    93: 33 06 05                 s1 = 0x5
    96: 53 27 f8 00 15           jump @12 if a0 <u 248
      :                          @10
   101: 33 06 06                 s1 = 0x6
   104: 53 27 fc 00 0d           jump @12 if a0 <u 252
      :                          @11
   109: 88 77 fe 00              a0 = a0 <u 0xfe
   113: 9a 76 08                 s1 = 0x8 - a0
   116: 01                       fallthrough
      :                          @12
   117: ac 65 2d 0a              jump @166 if s0 <u s1
      :                          @13
   121: 7b 1a 00 01              u64 [sp + 0x100] = a3
   125: 7b 19 e8 00              u64 [sp + 0xe8] = a2
   129: 64 97                    a0 = a2
   131: 64 68                    a1 = s1
   133: 50 10 02 99 14           ra = 2, jump @280
      :                          @14 [@dyn 1]
   138: 64 68                    a1 = s1
   140: 64 76                    s1 = a0
   142: e4 85 07                 a0 = maxu(s0, a1)
   145: 7b 18 e0 00              u64 [sp + 0xe0] = a1
   149: c9 87 07                 a0 = a0 - a1
   152: d8 67 08                 a1 = a0 <u s1
   155: e4 67 07                 a0 = maxu(a0, s1)
   158: c9 67 07                 a0 = a0 - s1
   161: 88 77 20                 a0 = a0 <u 0x20
   164: d4 87 07                 a0 = a0 | a1
   167: 51 07 2a                 jump @18 if a0 == 0
      :                          @15
   170: 33 08                    a1 = 0
   172: 33 0a 00 00 01           a3 = 0x10000
   177: 28 05                    jump @17
      :                          @16
   179: 33 08                    a1 = 0
   181: 01                       fallthrough
      :                          @17
   182: 64 a7                    a0 = a3
   184: 33 09 38 4c              a2 = 0x4c38
   188: c8 91 01                 sp = sp + a2
   191: 82 10 f0 07              ra = u64 [sp + 0x7f0]
   195: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
   199: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
   203: 95 11 f8 07              sp = sp + 0x7f8
   207: 32 00                    ret
      :                          @18
   209: 48 21 28 01              u32 [sp + 296] = 0
   213: 49 21 20 01              u64 [sp + 288] = 0
   217: 49 21 18 01              u64 [sp + 280] = 0
   221: 49 21 10 01              u64 [sp + 272] = 0
   225: 49 21 08 01              u64 [sp + 264] = 0
   229: 95 17 08 01              a0 = sp + 0x108
   233: 33 09 24                 a2 = 0x24
   236: 33 0a 03                 a3 = 0x3
   239: 33 08                    a1 = 0
   241: 33 0b                    a4 = 0
   243: 33 0c                    a5 = 0
   245: 0a 12                    ecalli 18 // 'fetch'
   247: 01                       fallthrough
      :                          @19
   248: 95 1a 08 01              a3 = sp + 0x108
   252: 33 08 24                 a1 = 0x24
   255: 7b 16 d8 00              u64 [sp + 0xd8] = s1
   259: 53 16 08 b3              jump @17 if s1 <u 8
      :                          @20
   263: 95 17 30 01              a0 = sp + 0x130
   267: 33 09 00 02              a2 = 0x200
   271: 33 08                    a1 = 0
   273: 50 10 04 b2 13           ra = 4, jump @267
      :                          @21 [@dyn 2]
   278: 95 18 08 01              a1 = sp + 0x108
   282: 95 19 30 01              a2 = sp + 0x130
   286: 33 0b 00 02              a4 = 0x200
   290: 82 17 00 01              a0 = u64 [sp + 0x100]
   294: 33 0a                    a3 = 0
   296: 0a 11                    ecalli 17 // 'historical_lookup'
   298: 01                       fallthrough
      :                          @22
   299: 51 17 ff 7f ff           jump @15 if a0 == 4294967295
      :                          @23
   304: 64 78                    a1 = a0
   306: 82 17 d8 00              a0 = u64 [sp + 0xd8]
   310: 98 77 03                 a0 = a0 >> 0x3
   313: 49 21 68 03              u64 [sp + 872] = 0
   317: 49 21 60 03              u64 [sp + 864] = 0
   321: 49 21 58 03              u64 [sp + 856] = 0
   325: 49 21 50 03              u64 [sp + 848] = 0
   329: 49 21 48 03              u64 [sp + 840] = 0
   333: 49 21 40 03              u64 [sp + 832] = 0
   337: 49 21 38 03              u64 [sp + 824] = 0
   341: 95 76 ff                 s1 = a0 + 0xffffffffffffffff
   344: 49 21 30 03              u64 [sp + 816] = 0
   348: 7b 16 88 00              u64 [sp + 0x88] = s1
   352: 51 06 4c                 jump @27 if s1 == 0
      :                          @24
   355: 95 17 30 01              a0 = sp + 0x130
   359: 7b 18 00 01              u64 [sp + 0x100] = a1
   363: 33 09                    a2 = 0
   365: 0a 14                    ecalli 20 // 'machine'
   367: 01                       fallthrough
      :                          @25
   368: 7b 17 80 00              u64 [sp + 0x80] = a0
   372: 7a 17 30 03              u32 [sp + 0x330] = a0
   376: 52 16 01 68              jump @28 if s1 != 1
      :                          @26
   380: 49 11 08                 u64 [sp + 8] = 0
   383: 49 11 10                 u64 [sp + 16] = 0
   386: 49 11 18                 u64 [sp + 24] = 0
   389: 49 11 20                 u64 [sp + 32] = 0
   392: 49 11 28                 u64 [sp + 40] = 0
   395: 49 11 30                 u64 [sp + 48] = 0
   398: 49 11 38                 u64 [sp + 56] = 0
   401: 49 11 48                 u64 [sp + 72] = 0
   404: 49 11 50                 u64 [sp + 80] = 0
   407: 49 11 58                 u64 [sp + 88] = 0
   410: 49 11 60                 u64 [sp + 96] = 0
   413: 49 11 68                 u64 [sp + 104] = 0
   416: 49 11 70                 u64 [sp + 112] = 0
   419: 49 11 40                 u64 [sp + 64] = 0
   422: 49 11 78                 u64 [sp + 120] = 0
   425: 28 25 03                 jump @71
      :                          @27
   428: 49 11 40                 u64 [sp + 64] = 0
   431: 49 11 08                 u64 [sp + 8] = 0
   434: 49 11 10                 u64 [sp + 16] = 0
   437: 49 11 18                 u64 [sp + 24] = 0
   440: 49 11 20                 u64 [sp + 32] = 0
   443: 49 11 28                 u64 [sp + 40] = 0
   446: 49 11 30                 u64 [sp + 48] = 0
   449: 49 11 38                 u64 [sp + 56] = 0
   452: 49 11 48                 u64 [sp + 72] = 0
   455: 49 11 50                 u64 [sp + 80] = 0
   458: 49 11 58                 u64 [sp + 88] = 0
   461: 49 11 60                 u64 [sp + 96] = 0
   464: 49 11 68                 u64 [sp + 104] = 0
   467: 49 11 70                 u64 [sp + 112] = 0
   470: 49 11 78                 u64 [sp + 120] = 0
   473: 49 21 80 00              u64 [sp + 128] = 0
   477: 28 f1 02                 jump @71
      :                          @28
   480: 95 17 30 01              a0 = sp + 0x130
   484: 82 18 00 01              a1 = u64 [sp + 0x100]
   488: 33 09                    a2 = 0
   490: 0a 14                    ecalli 20 // 'machine'
   492: 01                       fallthrough
      :                          @29
   493: 7b 17 78                 u64 [sp + 0x78] = a0
   496: 7a 17 34 03              u32 [sp + 0x334] = a0
   500: 52 16 02 31              jump @31 if s1 != 2
      :                          @30
   504: 49 11 08                 u64 [sp + 8] = 0
   507: 49 11 10                 u64 [sp + 16] = 0
   510: 49 11 18                 u64 [sp + 24] = 0
   513: 49 11 20                 u64 [sp + 32] = 0
   516: 49 11 28                 u64 [sp + 40] = 0
   519: 49 11 30                 u64 [sp + 48] = 0
   522: 49 11 38                 u64 [sp + 56] = 0
   525: 49 11 48                 u64 [sp + 72] = 0
   528: 49 11 50                 u64 [sp + 80] = 0
   531: 49 11 58                 u64 [sp + 88] = 0
   534: 49 11 60                 u64 [sp + 96] = 0
   537: 49 11 68                 u64 [sp + 104] = 0
   540: 49 11 40                 u64 [sp + 64] = 0
   543: 49 11 70                 u64 [sp + 112] = 0
   546: 28 ac 02                 jump @71
      :                          @31
   549: 95 17 30 01              a0 = sp + 0x130
   553: 82 18 00 01              a1 = u64 [sp + 0x100]
   557: 33 09                    a2 = 0
   559: 0a 14                    ecalli 20 // 'machine'
   561: 01                       fallthrough
      :                          @32
   562: 7b 17 70                 u64 [sp + 0x70] = a0
   565: 7a 17 38 03              u32 [sp + 0x338] = a0
   569: 52 16 03 2e              jump @34 if s1 != 3
      :                          @33
   573: 49 11 08                 u64 [sp + 8] = 0
   576: 49 11 10                 u64 [sp + 16] = 0
   579: 49 11 18                 u64 [sp + 24] = 0
   582: 49 11 20                 u64 [sp + 32] = 0
   585: 49 11 28                 u64 [sp + 40] = 0
   588: 49 11 30                 u64 [sp + 48] = 0
   591: 49 11 38                 u64 [sp + 56] = 0
   594: 49 11 48                 u64 [sp + 72] = 0
   597: 49 11 50                 u64 [sp + 80] = 0
   600: 49 11 58                 u64 [sp + 88] = 0
   603: 49 11 60                 u64 [sp + 96] = 0
   606: 49 11 40                 u64 [sp + 64] = 0
   609: 49 11 68                 u64 [sp + 104] = 0
   612: 28 6a 02                 jump @71
      :                          @34
   615: 95 17 30 01              a0 = sp + 0x130
   619: 82 18 00 01              a1 = u64 [sp + 0x100]
   623: 33 09                    a2 = 0
   625: 0a 14                    ecalli 20 // 'machine'
   627: 01                       fallthrough
      :                          @35
   628: 7b 17 68                 u64 [sp + 0x68] = a0
   631: 7a 17 3c 03              u32 [sp + 0x33c] = a0
   635: 52 16 04 2b              jump @37 if s1 != 4
      :                          @36
   639: 49 11 08                 u64 [sp + 8] = 0
   642: 49 11 10                 u64 [sp + 16] = 0
   645: 49 11 18                 u64 [sp + 24] = 0
   648: 49 11 20                 u64 [sp + 32] = 0
   651: 49 11 28                 u64 [sp + 40] = 0
   654: 49 11 30                 u64 [sp + 48] = 0
   657: 49 11 38                 u64 [sp + 56] = 0
   660: 49 11 48                 u64 [sp + 72] = 0
   663: 49 11 50                 u64 [sp + 80] = 0
   666: 49 11 58                 u64 [sp + 88] = 0
   669: 49 11 40                 u64 [sp + 64] = 0
   672: 49 11 60                 u64 [sp + 96] = 0
   675: 28 2b 02                 jump @71
      :                          @37
   678: 95 17 30 01              a0 = sp + 0x130
   682: 82 18 00 01              a1 = u64 [sp + 0x100]
   686: 33 09                    a2 = 0
   688: 0a 14                    ecalli 20 // 'machine'
   690: 01                       fallthrough
      :                          @38
   691: 7b 17 60                 u64 [sp + 0x60] = a0
   694: 7a 17 40 03              u32 [sp + 0x340] = a0
   698: 52 16 05 28              jump @40 if s1 != 5
      :                          @39
   702: 49 11 08                 u64 [sp + 8] = 0
   705: 49 11 10                 u64 [sp + 16] = 0
   708: 49 11 18                 u64 [sp + 24] = 0
   711: 49 11 20                 u64 [sp + 32] = 0
   714: 49 11 28                 u64 [sp + 40] = 0
   717: 49 11 30                 u64 [sp + 48] = 0
   720: 49 11 38                 u64 [sp + 56] = 0
   723: 49 11 48                 u64 [sp + 72] = 0
   726: 49 11 50                 u64 [sp + 80] = 0
   729: 49 11 40                 u64 [sp + 64] = 0
   732: 49 11 58                 u64 [sp + 88] = 0
   735: 28 ef 01                 jump @71
      :                          @40
   738: 95 17 30 01              a0 = sp + 0x130
   742: 82 18 00 01              a1 = u64 [sp + 0x100]
   746: 33 09                    a2 = 0
   748: 0a 14                    ecalli 20 // 'machine'
   750: 01                       fallthrough
      :                          @41
   751: 7b 17 58                 u64 [sp + 0x58] = a0
   754: 7a 17 44 03              u32 [sp + 0x344] = a0
   758: 52 16 06 25              jump @43 if s1 != 6
      :                          @42
   762: 49 11 08                 u64 [sp + 8] = 0
   765: 49 11 10                 u64 [sp + 16] = 0
   768: 49 11 18                 u64 [sp + 24] = 0
   771: 49 11 20                 u64 [sp + 32] = 0
   774: 49 11 28                 u64 [sp + 40] = 0
   777: 49 11 30                 u64 [sp + 48] = 0
   780: 49 11 38                 u64 [sp + 56] = 0
   783: 49 11 48                 u64 [sp + 72] = 0
   786: 49 11 40                 u64 [sp + 64] = 0
   789: 49 11 50                 u64 [sp + 80] = 0
   792: 28 b6 01                 jump @71
      :                          @43
   795: 95 17 30 01              a0 = sp + 0x130
   799: 82 18 00 01              a1 = u64 [sp + 0x100]
   803: 33 09                    a2 = 0
   805: 0a 14                    ecalli 20 // 'machine'
   807: 01                       fallthrough
      :                          @44
   808: 7b 17 50                 u64 [sp + 0x50] = a0
   811: 7a 17 48 03              u32 [sp + 0x348] = a0
   815: 52 16 07 22              jump @46 if s1 != 7
      :                          @45
   819: 49 11 08                 u64 [sp + 8] = 0
   822: 49 11 10                 u64 [sp + 16] = 0
   825: 49 11 18                 u64 [sp + 24] = 0
   828: 49 11 20                 u64 [sp + 32] = 0
   831: 49 11 28                 u64 [sp + 40] = 0
   834: 49 11 30                 u64 [sp + 48] = 0
   837: 49 11 38                 u64 [sp + 56] = 0
   840: 49 11 40                 u64 [sp + 64] = 0
   843: 49 11 48                 u64 [sp + 72] = 0
   846: 28 80 01                 jump @71
      :                          @46
   849: 95 17 30 01              a0 = sp + 0x130
   853: 82 18 00 01              a1 = u64 [sp + 0x100]
   857: 33 09                    a2 = 0
   859: 0a 14                    ecalli 20 // 'machine'
   861: 01                       fallthrough
      :                          @47
   862: 7b 17 48                 u64 [sp + 0x48] = a0
   865: 7a 17 4c 03              u32 [sp + 0x34c] = a0
   869: 52 16 08 1f              jump @49 if s1 != 8
      :                          @48
   873: 49 11 08                 u64 [sp + 8] = 0
   876: 49 11 10                 u64 [sp + 16] = 0
   879: 49 11 18                 u64 [sp + 24] = 0
   882: 49 11 20                 u64 [sp + 32] = 0
   885: 49 11 28                 u64 [sp + 40] = 0
   888: 49 11 30                 u64 [sp + 48] = 0
   891: 49 11 40                 u64 [sp + 64] = 0
   894: 49 11 38                 u64 [sp + 56] = 0
   897: 28 4d 01                 jump @71
      :                          @49
   900: 95 17 30 01              a0 = sp + 0x130
   904: 82 18 00 01              a1 = u64 [sp + 0x100]
   908: 33 09                    a2 = 0
   910: 0a 14                    ecalli 20 // 'machine'
   912: 01                       fallthrough
      :                          @50
   913: 7b 17 38                 u64 [sp + 0x38] = a0
   916: 7a 17 50 03              u32 [sp + 0x350] = a0
   920: 82 18 88 00              a1 = u64 [sp + 0x88]
   924: 52 18 09 1c              jump @52 if a1 != 9
      :                          @51
   928: 49 11 08                 u64 [sp + 8] = 0
   931: 49 11 10                 u64 [sp + 16] = 0
   934: 49 11 18                 u64 [sp + 24] = 0
   937: 49 11 20                 u64 [sp + 32] = 0
   940: 49 11 28                 u64 [sp + 40] = 0
   943: 49 11 40                 u64 [sp + 64] = 0
   946: 49 11 30                 u64 [sp + 48] = 0
   949: 28 19 01                 jump @71
      :                          @52
   952: 49 11 40                 u64 [sp + 64] = 0
   955: 95 17 30 01              a0 = sp + 0x130
   959: 82 18 00 01              a1 = u64 [sp + 0x100]
   963: 64 85                    s0 = a1
   965: 33 09                    a2 = 0
   967: 0a 14                    ecalli 20 // 'machine'
   969: 01                       fallthrough
      :                          @53
   970: 7b 17 30                 u64 [sp + 0x30] = a0
   973: 7a 17 54 03              u32 [sp + 0x354] = a0
   977: 82 18 88 00              a1 = u64 [sp + 0x88]
   981: 52 18 0a 19              jump @55 if a1 != 10
      :                          @54
   985: 82 17 40                 a0 = u64 [sp + 0x40]
   988: 7b 17 08                 u64 [sp + 0x8] = a0
   991: 7b 17 10                 u64 [sp + 0x10] = a0
   994: 7b 17 18                 u64 [sp + 0x18] = a0
   997: 7b 17 20                 u64 [sp + 0x20] = a0
  1000: 7b 17 28                 u64 [sp + 0x28] = a0
  1003: 28 e3 00                 jump @71
      :                          @55
  1006: 49 11 40                 u64 [sp + 64] = 0
  1009: 95 17 30 01              a0 = sp + 0x130
  1013: 64 58                    a1 = s0
  1015: 33 09                    a2 = 0
  1017: 0a 14                    ecalli 20 // 'machine'
  1019: 01                       fallthrough
      :                          @56
  1020: 7b 17 28                 u64 [sp + 0x28] = a0
  1023: 7a 17 58 03              u32 [sp + 0x358] = a0
  1027: 82 18 88 00              a1 = u64 [sp + 0x88]
  1031: 52 18 0b 16              jump @58 if a1 != 11
      :                          @57
  1035: 82 17 40                 a0 = u64 [sp + 0x40]
  1038: 7b 17 08                 u64 [sp + 0x8] = a0
  1041: 7b 17 10                 u64 [sp + 0x10] = a0
  1044: 7b 17 18                 u64 [sp + 0x18] = a0
  1047: 7b 17 20                 u64 [sp + 0x20] = a0
  1050: 28 b4 00                 jump @71
      :                          @58
  1053: 49 11 40                 u64 [sp + 64] = 0
  1056: 95 17 30 01              a0 = sp + 0x130
  1060: 64 58                    a1 = s0
  1062: 33 09                    a2 = 0
  1064: 0a 14                    ecalli 20 // 'machine'
  1066: 01                       fallthrough
      :                          @59
  1067: 7b 17 20                 u64 [sp + 0x20] = a0
  1070: 7a 17 5c 03              u32 [sp + 0x35c] = a0
  1074: 82 18 88 00              a1 = u64 [sp + 0x88]
  1078: 52 18 0c 13              jump @61 if a1 != 12
      :                          @60
  1082: 82 17 40                 a0 = u64 [sp + 0x40]
  1085: 7b 17 08                 u64 [sp + 0x8] = a0
  1088: 7b 17 10                 u64 [sp + 0x10] = a0
  1091: 7b 17 18                 u64 [sp + 0x18] = a0
  1094: 28 88 00                 jump @71
      :                          @61
  1097: 49 11 40                 u64 [sp + 64] = 0
  1100: 95 17 30 01              a0 = sp + 0x130
  1104: 64 58                    a1 = s0
  1106: 33 09                    a2 = 0
  1108: 0a 14                    ecalli 20 // 'machine'
  1110: 01                       fallthrough
      :                          @62
  1111: 7b 17 18                 u64 [sp + 0x18] = a0
  1114: 7a 17 60 03              u32 [sp + 0x360] = a0
  1118: 82 18 88 00              a1 = u64 [sp + 0x88]
  1122: 52 18 0d 0f              jump @64 if a1 != 13
      :                          @63
  1126: 82 17 40                 a0 = u64 [sp + 0x40]
  1129: 7b 17 08                 u64 [sp + 0x8] = a0
  1132: 7b 17 10                 u64 [sp + 0x10] = a0
  1135: 28 5f                    jump @71
      :                          @64
  1137: 49 11 40                 u64 [sp + 64] = 0
  1140: 95 17 30 01              a0 = sp + 0x130
  1144: 64 58                    a1 = s0
  1146: 33 09                    a2 = 0
  1148: 0a 14                    ecalli 20 // 'machine'
  1150: 01                       fallthrough
      :                          @65
  1151: 7b 17 10                 u64 [sp + 0x10] = a0
  1154: 7a 17 64 03              u32 [sp + 0x364] = a0
  1158: 82 18 88 00              a1 = u64 [sp + 0x88]
  1162: 52 18 0e 0c              jump @67 if a1 != 14
      :                          @66
  1166: 82 17 40                 a0 = u64 [sp + 0x40]
  1169: 7b 17 08                 u64 [sp + 0x8] = a0
  1172: 28 3a                    jump @71
      :                          @67
  1174: 49 11 40                 u64 [sp + 64] = 0
  1177: 95 17 30 01              a0 = sp + 0x130
  1181: 64 58                    a1 = s0
  1183: 33 09                    a2 = 0
  1185: 0a 14                    ecalli 20 // 'machine'
  1187: 01                       fallthrough
      :                          @68
  1188: 7b 17 08                 u64 [sp + 0x8] = a0
  1191: 7a 17 68 03              u32 [sp + 0x368] = a0
  1195: 82 18 88 00              a1 = u64 [sp + 0x88]
  1199: 51 18 0f 1f              jump @71 if a1 == 15
      :                          @69
  1203: 95 17 30 01              a0 = sp + 0x130
  1207: 64 58                    a1 = s0
  1209: 33 09                    a2 = 0
  1211: 0a 14                    ecalli 20 // 'machine'
  1213: 01                       fallthrough
      :                          @70
  1214: 7b 17 40                 u64 [sp + 0x40] = a0
  1217: 7a 17 6c 03              u32 [sp + 0x36c] = a0
  1221: 82 18 88 00              a1 = u64 [sp + 0x88]
  1225: 52 18 10 f3 05           jump @169 if a1 != 16
      :                          @71
  1230: 33 05 08 10              s0 = 0x1008
  1234: 95 17 70 03              a0 = sp + 0x370
  1238: 33 08                    a1 = 0
  1240: 33 09 08 10              a2 = 0x1008
  1244: 50 10 06 e7 0f           ra = 6, jump @267
      :                          @72 [@dyn 3]
  1249: 95 17 70 03              a0 = sp + 0x370
  1253: 33 0a 06                 a3 = 0x6
  1256: 33 06 ff                 s1 = 0xffffffffffffffff
  1259: 33 08                    a1 = 0
  1261: 7b 15 f8 00              u64 [sp + 0xf8] = s0
  1265: 64 59                    a2 = s0
  1267: 33 0b                    a4 = 0
  1269: 33 0c                    a5 = 0
  1271: 0a 12                    ecalli 18 // 'fetch'
  1273: 01                       fallthrough
      :                          @73
  1274: 51 17 ff 86 00           jump @83 if a0 == 4294967295
      :                          @74
  1279: 33 06 01                 s1 = 0x1
  1282: 33 07 3b 00 01           a0 = 0x1003b
  1287: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  1291: 33 07 24 00 01           a0 = 0x10024
  1296: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  1300: 28 2e                    jump @78
      :                          @75
  1302: 33 07 02                 a0 = 0x2
  1305: 33 0b 17                 a4 = 0x17
  1308: 33 08                    a1 = 0
  1310: 33 09                    a2 = 0
  1312: 82 1a f0 00              a3 = u64 [sp + 0xf0]
  1316: 0a 64                    ecalli 100 // 'log'
  1318: 01                       fallthrough
      :                          @76
  1319: 95 17 70 03              a0 = sp + 0x370
  1323: 33 0a 06                 a3 = 0x6
  1326: 33 08                    a1 = 0
  1328: 82 19 f8 00              a2 = u64 [sp + 0xf8]
  1332: 64 6b                    a4 = s1
  1334: 33 0c                    a5 = 0
  1336: 0a 12                    ecalli 18 // 'fetch'
  1338: 01                       fallthrough
      :                          @77
  1339: 95 66 01                 s1 = s1 + 0x1
  1342: 51 17 ff 42              jump @83 if a0 == 4294967295
      :                          @78
  1346: 80 17 70 03              a0 = u32 [sp + 0x370]
  1350: 80 15 74 03              s0 = u32 [sp + 0x374]
  1354: 33 09 01                 a2 = 0x1
  1357: 7b 17 00 01              u64 [sp + 0x100] = a0
  1361: 64 58                    a1 = s0
  1363: 0a 17                    ecalli 23 // 'zero'
  1365: 01                       fallthrough
      :                          @79
  1366: 52 07 c0                 jump @75 if a0 != 0
      :                          @80
  1369: 97 59 0c                 a2 = s0 << 0xc
  1372: 33 0a 00 10              a3 = 0x1000
  1376: 82 17 00 01              a0 = u64 [sp + 0x100]
  1380: 95 18 78 03              a1 = sp + 0x378
  1384: 0a 16                    ecalli 22 // 'poke'
  1386: 01                       fallthrough
      :                          @81
  1387: 51 07 bc                 jump @76 if a0 == 0
      :                          @82
  1390: 33 07 02                 a0 = 0x2
  1393: 33 0b 17                 a4 = 0x17
  1396: 33 08                    a1 = 0
  1398: 33 09                    a2 = 0
  1400: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  1404: 0a 64                    ecalli 100 // 'log'
  1406: 28 a9                    jump @76
      :                          @83
  1408: 82 18 88 00              a1 = u64 [sp + 0x88]
  1412: 51 08 13 05              jump @164 if a1 == 0
      :                          @84
  1416: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  1420: 82 19 e0 00              a2 = u64 [sp + 0xe0]
  1424: c8 97 07                 a0 = a0 + a2
  1427: 51 07 10 05              jump @167 if a0 == 0
      :                          @85
  1431: 95 75 04                 s0 = a0 + 0x4
  1434: 33 06 08 10              s1 = 0x1008
  1438: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  1448: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1452: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  1462: 7b 17 98 00              u64 [sp + 0x98] = a0
  1466: 33 07 3b 00 01           a0 = 0x1003b
  1471: 7b 17 90 00              u64 [sp + 0x90] = a0
  1475: 33 07 24 00 01           a0 = 0x10024
  1480: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1484: 95 17 30 03              a0 = sp + 0x330
  1488: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  1492: 33 07 08                 a0 = 0x8
  1495: 7b 16 e0 00              u64 [sp + 0xe0] = s1
  1499: 28 44                    jump @89
      :                          @86
  1501: 33 07 02                 a0 = 0x2
  1504: 33 0b 17                 a4 = 0x17
  1507: 33 08                    a1 = 0
  1509: 33 09                    a2 = 0
  1511: 82 1a c8 00              a3 = u64 [sp + 0xc8]
  1515: 0a 64                    ecalli 100 // 'log'
  1517: 82 15 d0 00              s0 = u64 [sp + 0xd0]
  1521: 01                       fallthrough
      :                          @87
  1522: 95 17 88 33              a0 = sp + 0x3388
  1526: 82 16 e0 00              s1 = u64 [sp + 0xe0]
  1530: 64 68                    a1 = s1
  1532: 0a 13                    ecalli 19 // 'export'
  1534: 01                       fallthrough
      :                          @88
  1535: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  1539: 95 77 04                 a0 = a0 + 0x4
  1542: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  1546: 95 55 08                 s0 = s0 + 0x8
  1549: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  1553: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  1556: 82 17 00 01              a0 = u64 [sp + 0x100]
  1560: 95 77 08                 a0 = a0 + 0x8
  1563: 51 08 58 03              jump @132 if a1 == 0
      :                          @89
  1567: 7b 18 f0 00              u64 [sp + 0xf0] = a1
  1571: 7b 17 00 01              u64 [sp + 0x100] = a0
  1575: 95 17 78 13              a0 = sp + 0x1378
  1579: 33 08                    a1 = 0
  1581: 64 69                    a2 = s1
  1583: 50 10 08 94 0e           ra = 8, jump @267
      :                          @90 [@dyn 4]
  1588: 95 17 80 23              a0 = sp + 0x2380
  1592: 33 08                    a1 = 0
  1594: 64 69                    a2 = s1
  1596: 50 10 0a 87 0e           ra = 10, jump @267
      :                          @91 [@dyn 5]
  1601: 95 17 88 33              a0 = sp + 0x3388
  1605: 33 08                    a1 = 0
  1607: 64 69                    a2 = s1
  1609: 50 10 0c 7a 0e           ra = 12, jump @267
      :                          @92 [@dyn 6]
  1614: 82 17 00 01              a0 = u64 [sp + 0x100]
  1618: 95 18 90 43              a1 = sp + 0x4390
  1622: 49 08                    u64 [a1 + 0] = 0
  1624: 49 18 08                 u64 [a1 + 8] = 0
  1627: 51 27 88 00 6c 04        jump @170 if a0 == 136
      :                          @93
  1633: 82 18 d8 00              a1 = u64 [sp + 0xd8]
  1637: ac 78 3c 04              jump @165 if a1 <u a0
      :                          @94
  1641: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1644: 7c 58                    a1 = u8 [s0]
  1646: 7c 59 02                 a2 = u8 [s0 + 0x2]
  1649: 7d 5a 03                 a3 = i8 [s0 + 0x3]
  1652: 97 77 08                 a0 = a0 << 0x8
  1655: d4 87 07                 a0 = a0 | a1
  1658: 97 99 10                 a2 = a2 << 0x10
  1661: 97 aa 18                 a3 = a3 << 0x18
  1664: d4 a9 09                 a2 = a2 | a3
  1667: d4 97 07                 a0 = a0 | a2
  1670: 52 17 01 6c ff           jump @87 if a0 != 1
      :                          @95
  1675: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  1679: 80 79                    a2 = u32 [a0]
  1681: 83 92                    i32 t0 = a2 + 0
  1683: 7c 5b fc                 a4 = u8 [s0 + 0xfffffffffffffffc]
  1686: 7c 58 fd                 a1 = u8 [s0 + 0xfffffffffffffffd]
  1689: 7c 56 fe                 s1 = u8 [s0 + 0xfffffffffffffffe]
  1692: 7c 5c ff                 a5 = u8 [s0 + 0xffffffffffffffff]
  1695: 95 1a 90 43              a3 = sp + 0x4390
  1699: 49 1a 10 00 00 01        u64 [a3 + 16] = 0x10000
  1705: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  1709: 7b a7 18                 u64 [a3 + 0x18] = a0
  1712: 82 17 98 00              a0 = u64 [sp + 0x98]
  1716: 7b a7 20                 u64 [a3 + 0x20] = a0
  1719: 95 17 b8 43              a0 = sp + 0x43b8
  1723: 49 17 20                 u64 [a0 + 32] = 0
  1726: 49 17 18                 u64 [a0 + 24] = 0
  1729: 49 17 10                 u64 [a0 + 16] = 0
  1732: 49 17 08                 u64 [a0 + 8] = 0
  1735: 49 07                    u64 [a0 + 0] = 0
  1737: 49 1a 50 02              u64 [a3 + 80] = 0x2
  1741: 95 17 e8 43              a0 = sp + 0x43e8
  1745: 49 17 20                 u64 [a0 + 32] = 0
  1748: 49 17 18                 u64 [a0 + 24] = 0
  1751: 49 17 10                 u64 [a0 + 16] = 0
  1754: 49 17 08                 u64 [a0 + 8] = 0
  1757: 49 07                    u64 [a0 + 0] = 0
  1759: 7b 19 e8 00              u64 [sp + 0xe8] = a2
  1763: 64 97                    a0 = a2
  1765: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  1769: 51 02 4e 01              jump @115 if t0 == 0
      :                          @96
  1773: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  1777: 7b 1c b0 00              u64 [sp + 0xb0] = a5
  1781: 7b 16 b8 00              u64 [sp + 0xb8] = s1
  1785: 7b 1b c0 00              u64 [sp + 0xc0] = a4
  1789: 52 12 01 64              jump @103 if t0 != 1
      :                          @97
  1793: 33 09 00 10              a2 = 0x1000
  1797: 95 16 18 44              s1 = sp + 0x4418
  1801: 64 67                    a0 = s1
  1803: 33 08                    a1 = 0
  1805: 50 10 0e b6 0d           ra = 14, jump @267
      :                          @98 [@dyn 7]
  1810: 95 18 90 43              a1 = sp + 0x4390
  1814: 48 28 80 00              u32 [a1 + 128] = 0
  1818: 48 28 84 00 10           u32 [a1 + 132] = 0x10
  1823: 33 09 00 00 01           a2 = 0x10000
  1828: 33 0a 00 10              a3 = 0x1000
  1832: 33 07                    a0 = 0
  1834: 64 68                    a1 = s1
  1836: 0a 15                    ecalli 21 // 'peek'
  1838: 01                       fallthrough
      :                          @99
  1839: 51 07 15                 jump @101 if a0 == 0
      :                          @100
  1842: 33 0a 52 00 01           a3 = 0x10052
  1847: 33 07 02                 a0 = 0x2
  1850: 33 0b 15                 a4 = 0x15
  1853: 33 08                    a1 = 0
  1855: 33 09                    a2 = 0
  1857: 0a 64                    ecalli 100 // 'log'
  1859: 01                       fallthrough
      :                          @101
  1860: 95 17 78 13              a0 = sp + 0x1378
  1864: 95 18 10 44              a1 = sp + 0x4410
  1868: 82 19 e0 00              a2 = u64 [sp + 0xe0]
  1872: 50 10 10 c1 0c           ra = 16, jump @249
      :                          @102 [@dyn 8]
  1877: 33 07 01                 a0 = 0x1
  1880: 95 18 88 23              a1 = sp + 0x2388
  1884: 7a 87                    u32 [a1] = a0
  1886: 28 c8 00                 jump @114
      :                          @103
  1889: 95 15 90 43              s0 = sp + 0x4390
  1893: 82 16 e8 00              s1 = u64 [sp + 0xe8]
  1897: 83 66 fe                 i32 s1 = s1 + 0xfffffffffffffffe
  1900: 33 09 00 10              a2 = 0x1000
  1904: 95 17 18 44              a0 = sp + 0x4418
  1908: 33 08                    a1 = 0
  1910: 50 10 12 4d 0d           ra = 18, jump @267
      :                          @104 [@dyn 9]
  1915: 7a 56 80 00              u32 [s0 + 0x80] = s1
  1919: 48 25 84 00 10           u32 [s0 + 132] = 0x10
  1924: 97 67 20                 a0 = s1 << 0x20
  1927: 98 77 20                 a0 = a0 >> 0x20
  1930: 33 09 00 00 01           a2 = 0x10000
  1935: 33 0a 00 10              a3 = 0x1000
  1939: 95 18 18 44              a1 = sp + 0x4418
  1943: 0a 15                    ecalli 21 // 'peek'
  1945: 01                       fallthrough
      :                          @105
  1946: 51 07 15                 jump @107 if a0 == 0
      :                          @106
  1949: 33 0a 52 00 01           a3 = 0x10052
  1954: 33 07 02                 a0 = 0x2
  1957: 33 0b 15                 a4 = 0x15
  1960: 33 08                    a1 = 0
  1962: 33 09                    a2 = 0
  1964: 0a 64                    ecalli 100 // 'log'
  1966: 01                       fallthrough
      :                          @107
  1967: 95 17 78 13              a0 = sp + 0x1378
  1971: 95 18 10 44              a1 = sp + 0x4410
  1975: 82 19 e0 00              a2 = u64 [sp + 0xe0]
  1979: 50 10 14 56 0c           ra = 20, jump @249
      :                          @108 [@dyn 10]
  1984: 82 16 e8 00              s1 = u64 [sp + 0xe8]
  1988: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
  1991: 33 09 00 10              a2 = 0x1000
  1995: 95 15 18 44              s0 = sp + 0x4418
  1999: 64 57                    a0 = s0
  2001: 33 08                    a1 = 0
  2003: 50 10 16 f0 0c           ra = 22, jump @267
      :                          @109 [@dyn 11]
  2008: 95 17 90 43              a0 = sp + 0x4390
  2012: 7a 76 80 00              u32 [a0 + 0x80] = s1
  2016: 48 27 84 00 10           u32 [a0 + 132] = 0x10
  2021: 97 67 20                 a0 = s1 << 0x20
  2024: 98 77 20                 a0 = a0 >> 0x20
  2027: 33 09 00 00 01           a2 = 0x10000
  2032: 33 0a 00 10              a3 = 0x1000
  2036: 64 58                    a1 = s0
  2038: 0a 15                    ecalli 21 // 'peek'
  2040: 01                       fallthrough
      :                          @110
  2041: 51 07 15                 jump @112 if a0 == 0
      :                          @111
  2044: 33 0a 52 00 01           a3 = 0x10052
  2049: 33 07 02                 a0 = 0x2
  2052: 33 0b 15                 a4 = 0x15
  2055: 33 08                    a1 = 0
  2057: 33 09                    a2 = 0
  2059: 0a 64                    ecalli 100 // 'log'
  2061: 01                       fallthrough
      :                          @112
  2062: 95 17 80 23              a0 = sp + 0x2380
  2066: 95 18 10 44              a1 = sp + 0x4410
  2070: 82 19 e0 00              a2 = u64 [sp + 0xe0]
  2074: 50 10 18 f7 0b           ra = 24, jump @249
      :                          @113 [@dyn 12]
  2079: 95 17 88 23              a0 = sp + 0x2388
  2083: 81 77                    a0 = i32 [a0]
  2085: 01                       fallthrough
      :                          @114
  2086: 82 1b c0 00              a4 = u64 [sp + 0xc0]
  2090: 82 16 b8 00              s1 = u64 [sp + 0xb8]
  2094: 82 1c b0 00              a5 = u64 [sp + 0xb0]
  2098: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  2102: 01                       fallthrough
      :                          @115
  2103: 97 85 08                 s0 = a1 << 0x8
  2106: d4 b5 08                 a1 = s0 | a4
  2109: 97 66 10                 s1 = s1 << 0x10
  2112: 97 c9 18                 a2 = a5 << 0x18
  2115: d4 69 09                 a2 = a2 | s1
  2118: 95 1a 90 43              a3 = sp + 0x4390
  2122: d4 98 08                 a1 = a1 | a2
  2125: 95 1b 78 13              a4 = sp + 0x1378
  2129: 82 15 e8 00              s0 = u64 [sp + 0xe8]
  2133: 7a b5                    u32 [a4] = s0
  2135: 81 b9 08                 a2 = i32 [a4 + 0x8]
  2138: 48 1b 04 10              u32 [a4 + 4] = 0x10
  2142: 95 1b 88 23              a4 = sp + 0x2388
  2146: 7a b5 f8                 u32 [a4 + 0xfffffffffffffff8] = s0
  2149: 48 1b fc 11              u32 [a4 + 4294967292] = 0x11
  2153: 7a a9 0c                 u32 [a3 + 0xc] = a2
  2156: 7a a7 08                 u32 [a3 + 0x8] = a0
  2159: 7a a8                    u32 [a3] = a1
  2161: 33 08 10                 a1 = 0x10
  2164: 33 09 01                 a2 = 0x1
  2167: 64 57                    a0 = s0
  2169: 0a 17                    ecalli 23 // 'zero'
  2171: 01                       fallthrough
      :                          @116
  2172: 51 07 15                 jump @118 if a0 == 0
      :                          @117
  2175: 33 07 02                 a0 = 0x2
  2178: 33 0b 17                 a4 = 0x17
  2181: 33 08                    a1 = 0
  2183: 33 09                    a2 = 0
  2185: 82 1a c8 00              a3 = u64 [sp + 0xc8]
  2189: 0a 64                    ecalli 100 // 'log'
  2191: 28 28                    jump @121
      :                          @118
  2193: 33 09 00 00 01           a2 = 0x10000
  2198: 33 0a 00 10              a3 = 0x1000
  2202: 64 57                    a0 = s0
  2204: 95 18 80 13              a1 = sp + 0x1380
  2208: 0a 16                    ecalli 22 // 'poke'
  2210: 01                       fallthrough
      :                          @119
  2211: 51 07 14                 jump @121 if a0 == 0
      :                          @120
  2214: 33 07 02                 a0 = 0x2
  2217: 33 0b 17                 a4 = 0x17
  2220: 33 08                    a1 = 0
  2222: 33 09                    a2 = 0
  2224: 82 1a 90 00              a3 = u64 [sp + 0x90]
  2228: 0a 64                    ecalli 100 // 'log'
  2230: 01                       fallthrough
      :                          @121
  2231: 95 17 88 23              a0 = sp + 0x2388
  2235: 80 76 f8                 s1 = u32 [a0 + 0xfffffffffffffff8]
  2238: 80 75 fc                 s0 = u32 [a0 + 0xfffffffffffffffc]
  2241: 33 09 01                 a2 = 0x1
  2244: 64 67                    a0 = s1
  2246: 64 58                    a1 = s0
  2248: 0a 17                    ecalli 23 // 'zero'
  2250: 01                       fallthrough
      :                          @122
  2251: 51 07 15                 jump @124 if a0 == 0
      :                          @123
  2254: 33 07 02                 a0 = 0x2
  2257: 33 0b 17                 a4 = 0x17
  2260: 33 08                    a1 = 0
  2262: 33 09                    a2 = 0
  2264: 82 1a c8 00              a3 = u64 [sp + 0xc8]
  2268: 0a 64                    ecalli 100 // 'log'
  2270: 28 26                    jump @127
      :                          @124
  2272: 97 59 0c                 a2 = s0 << 0xc
  2275: 33 0a 00 10              a3 = 0x1000
  2279: 64 67                    a0 = s1
  2281: 95 18 88 23              a1 = sp + 0x2388
  2285: 0a 16                    ecalli 22 // 'poke'
  2287: 01                       fallthrough
      :                          @125
  2288: 51 07 14                 jump @127 if a0 == 0
      :                          @126
  2291: 33 07 02                 a0 = 0x2
  2294: 33 0b 17                 a4 = 0x17
  2297: 33 08                    a1 = 0
  2299: 33 09                    a2 = 0
  2301: 82 1a 90 00              a3 = u64 [sp + 0x90]
  2305: 0a 64                    ecalli 100 // 'log'
  2307: 01                       fallthrough
      :                          @127
  2308: 95 18 a0 43              a1 = sp + 0x43a0
  2312: 82 16 e8 00              s1 = u64 [sp + 0xe8]
  2316: 64 67                    a0 = s1
  2318: 0a 19                    ecalli 25 // 'invoke'
  2320: 95 17 90 43              a0 = sp + 0x4390
  2324: 82 79 50                 a2 = u64 [a0 + 0x50]
  2327: 33 0a 00 10              a3 = 0x1000
  2331: 64 67                    a0 = s1
  2333: 95 15 90 33              s0 = sp + 0x3390
  2337: 64 58                    a1 = s0
  2339: 0a 15                    ecalli 21 // 'peek'
  2341: 95 18 88 33              a1 = sp + 0x3388
  2345: 81 87 08                 a0 = i32 [a1 + 0x8]
  2348: 7a 86                    u32 [a1] = s1
  2350: 48 18 04 10              u32 [a1 + 4] = 0x10
  2354: 95 18 90 43              a1 = sp + 0x4390
  2358: 7a 87 04                 u32 [a1 + 0x4] = a0
  2361: 33 08 10                 a1 = 0x10
  2364: 33 09 01                 a2 = 0x1
  2367: 64 67                    a0 = s1
  2369: 0a 17                    ecalli 23 // 'zero'
  2371: 01                       fallthrough
      :                          @128
  2372: 52 07 99 fc              jump @86 if a0 != 0
      :                          @129
  2376: 33 09 00 00 01           a2 = 0x10000
  2381: 33 0a 00 10              a3 = 0x1000
  2385: 64 67                    a0 = s1
  2387: 64 58                    a1 = s0
  2389: 0a 16                    ecalli 22 // 'poke'
  2391: 01                       fallthrough
      :                          @130
  2392: 82 15 d0 00              s0 = u64 [sp + 0xd0]
  2396: 51 07 96 fc              jump @87 if a0 == 0
      :                          @131
  2400: 33 07 02                 a0 = 0x2
  2403: 33 0b 17                 a4 = 0x17
  2406: 33 08                    a1 = 0
  2408: 33 09                    a2 = 0
  2410: 82 1a 90 00              a3 = u64 [sp + 0x90]
  2414: 0a 64                    ecalli 100 // 'log'
  2416: 28 82 fc                 jump @87
      :                          @132
  2419: 82 17 80 00              a0 = u64 [sp + 0x80]
  2423: 97 77 20                 a0 = a0 << 0x20
  2426: 98 77 20                 a0 = a0 >> 0x20
  2429: 0a 1a                    ecalli 26 // 'expunge'
  2431: 01                       fallthrough
      :                          @133
  2432: 82 18 88 00              a1 = u64 [sp + 0x88]
  2436: 51 18 01 13 01           jump @164 if a1 == 1
      :                          @134
  2441: 14 05 ff ff ff ff 00 00 00 00 s0 = 0xffffffff
  2451: 82 17 78                 a0 = u64 [sp + 0x78]
  2454: d2 57 07                 a0 = a0 & s0
  2457: 0a 1a                    ecalli 26 // 'expunge'
  2459: 01                       fallthrough
      :                          @135
  2460: 82 18 88 00              a1 = u64 [sp + 0x88]
  2464: 51 18 02 f7 00           jump @164 if a1 == 2
      :                          @136
  2469: 82 17 70                 a0 = u64 [sp + 0x70]
  2472: d2 57 07                 a0 = a0 & s0
  2475: 0a 1a                    ecalli 26 // 'expunge'
  2477: 01                       fallthrough
      :                          @137
  2478: 82 18 88 00              a1 = u64 [sp + 0x88]
  2482: 51 18 03 e5 00           jump @164 if a1 == 3
      :                          @138
  2487: 82 17 68                 a0 = u64 [sp + 0x68]
  2490: d2 57 07                 a0 = a0 & s0
  2493: 0a 1a                    ecalli 26 // 'expunge'
  2495: 01                       fallthrough
      :                          @139
  2496: 82 18 88 00              a1 = u64 [sp + 0x88]
  2500: 51 18 04 d3 00           jump @164 if a1 == 4
      :                          @140
  2505: 82 17 60                 a0 = u64 [sp + 0x60]
  2508: d2 57 07                 a0 = a0 & s0
  2511: 0a 1a                    ecalli 26 // 'expunge'
  2513: 01                       fallthrough
      :                          @141
  2514: 82 18 88 00              a1 = u64 [sp + 0x88]
  2518: 51 18 05 c1 00           jump @164 if a1 == 5
      :                          @142
  2523: 82 17 58                 a0 = u64 [sp + 0x58]
  2526: d2 57 07                 a0 = a0 & s0
  2529: 0a 1a                    ecalli 26 // 'expunge'
  2531: 01                       fallthrough
      :                          @143
  2532: 82 18 88 00              a1 = u64 [sp + 0x88]
  2536: 51 18 06 af 00           jump @164 if a1 == 6
      :                          @144
  2541: 82 17 50                 a0 = u64 [sp + 0x50]
  2544: d2 57 07                 a0 = a0 & s0
  2547: 0a 1a                    ecalli 26 // 'expunge'
  2549: 01                       fallthrough
      :                          @145
  2550: 82 18 88 00              a1 = u64 [sp + 0x88]
  2554: 51 18 07 9d 00           jump @164 if a1 == 7
      :                          @146
  2559: 82 17 48                 a0 = u64 [sp + 0x48]
  2562: d2 57 07                 a0 = a0 & s0
  2565: 0a 1a                    ecalli 26 // 'expunge'
  2567: 01                       fallthrough
      :                          @147
  2568: 82 18 88 00              a1 = u64 [sp + 0x88]
  2572: 51 18 08 8b 00           jump @164 if a1 == 8
      :                          @148
  2577: 82 17 38                 a0 = u64 [sp + 0x38]
  2580: d2 57 07                 a0 = a0 & s0
  2583: 0a 1a                    ecalli 26 // 'expunge'
  2585: 01                       fallthrough
      :                          @149
  2586: 82 18 88 00              a1 = u64 [sp + 0x88]
  2590: 51 18 09 79              jump @164 if a1 == 9
      :                          @150
  2594: 82 17 30                 a0 = u64 [sp + 0x30]
  2597: d2 57 07                 a0 = a0 & s0
  2600: 0a 1a                    ecalli 26 // 'expunge'
  2602: 01                       fallthrough
      :                          @151
  2603: 82 18 88 00              a1 = u64 [sp + 0x88]
  2607: 51 18 0a 68              jump @164 if a1 == 10
      :                          @152
  2611: 82 17 28                 a0 = u64 [sp + 0x28]
  2614: d2 57 07                 a0 = a0 & s0
  2617: 0a 1a                    ecalli 26 // 'expunge'
  2619: 01                       fallthrough
      :                          @153
  2620: 82 18 88 00              a1 = u64 [sp + 0x88]
  2624: 51 18 0b 57              jump @164 if a1 == 11
      :                          @154
  2628: 82 17 20                 a0 = u64 [sp + 0x20]
  2631: d2 57 07                 a0 = a0 & s0
  2634: 0a 1a                    ecalli 26 // 'expunge'
  2636: 01                       fallthrough
      :                          @155
  2637: 82 18 88 00              a1 = u64 [sp + 0x88]
  2641: 51 18 0c 46              jump @164 if a1 == 12
      :                          @156
  2645: 82 17 18                 a0 = u64 [sp + 0x18]
  2648: d2 57 07                 a0 = a0 & s0
  2651: 0a 1a                    ecalli 26 // 'expunge'
  2653: 01                       fallthrough
      :                          @157
  2654: 82 18 88 00              a1 = u64 [sp + 0x88]
  2658: 51 18 0d 35              jump @164 if a1 == 13
      :                          @158
  2662: 82 17 10                 a0 = u64 [sp + 0x10]
  2665: d2 57 07                 a0 = a0 & s0
  2668: 0a 1a                    ecalli 26 // 'expunge'
  2670: 01                       fallthrough
      :                          @159
  2671: 82 18 88 00              a1 = u64 [sp + 0x88]
  2675: 51 18 0e 24              jump @164 if a1 == 14
      :                          @160
  2679: 82 17 08                 a0 = u64 [sp + 0x8]
  2682: d2 57 07                 a0 = a0 & s0
  2685: 0a 1a                    ecalli 26 // 'expunge'
  2687: 01                       fallthrough
      :                          @161
  2688: 82 18 88 00              a1 = u64 [sp + 0x88]
  2692: 51 18 0f 13              jump @164 if a1 == 15
      :                          @162
  2696: 82 17 40                 a0 = u64 [sp + 0x40]
  2699: d2 57 07                 a0 = a0 & s0
  2702: 64 85                    s0 = a1
  2704: 0a 1a                    ecalli 26 // 'expunge'
  2706: 01                       fallthrough
      :                          @163
  2707: 52 15 10 34              jump @170 if s0 != 16
      :                          @164
  2711: 95 1a 90 43              a3 = sp + 0x4390
  2715: 33 08 10                 a1 = 0x10
  2718: 28 18 f6                 jump @17
      :                          @165
  2721: 00                       trap
      :                          @166
  2722: 00                       trap
      :                          @167
  2723: 33 09 08 10              a2 = 0x1008
  2727: 95 17 88 33              a0 = sp + 0x3388
  2731: 33 08                    a1 = 0
  2733: 50 10 1a 16 0a           ra = 26, jump @267
      :                          @168 [@dyn 13]
  2738: 95 17 90 43              a0 = sp + 0x4390
  2742: 49 07                    u64 [a0 + 0] = 0
  2744: 49 17 08                 u64 [a0 + 8] = 0
  2747: 00                       trap
      :                          @169
  2748: 95 17 30 01              a0 = sp + 0x130
  2752: 64 58                    a1 = s0
  2754: 33 09                    a2 = 0
  2756: 0a 14                    ecalli 20 // 'machine'
  2758: 00                       trap
      :                          @170
  2759: 00                       trap
      :                          @171 [export #1: 'accumulate']
  2760: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  2764: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  2768: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  2772: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  2776: 95 11 58 fc              sp = sp + 0xfffffffffffffc58
  2780: 33 09 08                 a2 = 0x8
  2783: ac 98 02 01              jump @201 if a1 <u a2
      :                          @172
  2787: 51 07 20 09              jump @243 if a0 == 0
      :                          @173
  2791: 95 79 04                 a2 = a0 + 0x4
  2794: 51 09 1a 09              jump @244 if a2 == 0
      :                          @174
  2798: 7c 79 04                 a2 = u8 [a0 + 0x4]
  2801: 7b 19 20                 u64 [sp + 0x20] = a2
  2804: 7c 79 05                 a2 = u8 [a0 + 0x5]
  2807: 7b 19 08                 u64 [sp + 0x8] = a2
  2810: 7c 79 06                 a2 = u8 [a0 + 0x6]
  2813: 7b 19 18                 u64 [sp + 0x18] = a2
  2816: 7c 79 07                 a2 = u8 [a0 + 0x7]
  2819: 7b 19 10                 u64 [sp + 0x10] = a2
  2822: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  2825: 95 75 08                 s0 = a0 + 0x8
  2828: 51 0a 45                 jump @184 if a3 == 0
      :                          @175
  2831: 7d 58                    a1 = i8 [s0]
  2833: 33 06 01                 s1 = 0x1
  2836: 59 08 40                 jump @185 if a1 >=s 0
      :                          @176
  2839: 84 89 ff 00              a2 = a1 & 0xff
  2843: 33 06 02                 s1 = 0x2
  2846: 53 29 c0 00 2d           jump @182 if a2 <u 192
      :                          @177
  2851: 33 06 03                 s1 = 0x3
  2854: 53 29 e0 00 25           jump @182 if a2 <u 224
      :                          @178
  2859: 33 06 04                 s1 = 0x4
  2862: 53 29 f0 00 1d           jump @182 if a2 <u 240
      :                          @179
  2867: 33 06 05                 s1 = 0x5
  2870: 53 29 f8 00 15           jump @182 if a2 <u 248
      :                          @180
  2875: 33 06 06                 s1 = 0x6
  2878: 53 29 fc 00 0d           jump @182 if a2 <u 252
      :                          @181
  2883: 88 98 fe 00              a1 = a2 <u 0xfe
  2887: 9a 86 08                 s1 = 0x8 - a1
  2890: 01                       fallthrough
      :                          @182
  2891: ae 6a 09                 jump @185 if a3 >=u s1
      :                          @183
  2894: 28 93 00                 jump @201
      :                          @184
  2897: 33 06                    s1 = 0
  2899: 01                       fallthrough
      :                          @185
  2900: 7b 16 28                 u64 [sp + 0x28] = s1
  2903: 64 57                    a0 = s0
  2905: 64 68                    a1 = s1
  2907: 64 a6                    s1 = a3
  2909: 50 10 1c c1 09           ra = 28, jump @280
      :                          @186 [@dyn 14]
  2914: 82 1a 28                 a3 = u64 [sp + 0x28]
  2917: 51 07 7c                 jump @201 if a0 == 0
      :                          @187
  2920: e4 a6 07                 a0 = maxu(s1, a3)
  2923: c9 a7 07                 a0 = a0 - a3
  2926: 53 17 60 73              jump @201 if a0 <u 96
      :                          @188
  2930: c8 5a 08                 a1 = a3 + s0
  2933: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  2936: 95 87 60                 a0 = a1 + 0x60
  2939: 7b 17 28                 u64 [sp + 0x28] = a0
  2942: 51 06 4c                 jump @199 if s1 == 0
      :                          @189
  2945: 7d 78                    a1 = i8 [a0]
  2947: 33 05 01                 s0 = 0x1
  2950: 59 08 37                 jump @196 if a1 >=s 0
      :                          @190
  2953: 84 89 ff 00              a2 = a1 & 0xff
  2957: 33 05 02                 s0 = 0x2
  2960: 53 29 c0 00 2d           jump @196 if a2 <u 192
      :                          @191
  2965: 33 05 03                 s0 = 0x3
  2968: 53 29 e0 00 25           jump @196 if a2 <u 224
      :                          @192
  2973: 33 05 04                 s0 = 0x4
  2976: 53 29 f0 00 1d           jump @196 if a2 <u 240
      :                          @193
  2981: 33 05 05                 s0 = 0x5
  2984: 53 29 f8 00 15           jump @196 if a2 <u 248
      :                          @194
  2989: 33 05 06                 s0 = 0x6
  2992: 53 29 fc 00 0d           jump @196 if a2 <u 252
      :                          @195
  2997: 88 98 fe 00              a1 = a2 <u 0xfe
  3001: 9a 85 08                 s0 = 0x8 - a1
  3004: 01                       fallthrough
      :                          @196
  3005: ac 56 48 08              jump @245 if s1 <u s0
      :                          @197
  3009: 64 58                    a1 = s0
  3011: 50 10 1e 5b 09           ra = 30, jump @280
      :                          @198 [@dyn 15]
  3016: 28 07                    jump @200
      :                          @199
  3018: 33 05                    s0 = 0
  3020: 33 07                    a0 = 0
  3022: 01                       fallthrough
      :                          @200
  3023: e4 56 08                 a1 = maxu(s1, s0)
  3026: c9 58 08                 a1 = a1 - s0
  3029: e4 78 08                 a1 = maxu(a1, a0)
  3032: c9 78 08                 a1 = a1 - a0
  3035: 33 09 21                 a2 = 0x21
  3038: ae 98 23                 jump @203 if a1 >=u a2
      :                          @201
  3041: 33 08                    a1 = 0
  3043: 33 05 00 00 01           s0 = 0x10000
  3048: 01                       fallthrough
      :                          @202
  3049: 64 57                    a0 = s0
  3051: 95 11 a8 03              sp = sp + 0x3a8
  3055: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3059: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3063: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  3067: 95 11 f8 07              sp = sp + 0x7f8
  3071: 32 00                    ret
      :                          @203
  3073: 82 19 28                 a2 = u64 [sp + 0x28]
  3076: c8 95 05                 s0 = s0 + a2
  3079: c8 57 07                 a0 = a0 + s0
  3082: 7c 79 20                 a2 = u8 [a0 + 0x20]
  3085: 51 09 0a                 jump @205 if a2 == 0
      :                          @204
  3088: 33 06                    s1 = 0
  3090: 33 0a                    a3 = 0
  3092: 28 83 00                 jump @219
      :                          @205
  3095: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  3098: 95 75 21                 s0 = a0 + 0x21
  3101: 51 0a 54                 jump @216 if a3 == 0
      :                          @206
  3104: 7d 57                    a0 = i8 [s0]
  3106: 33 06 01                 s1 = 0x1
  3109: 59 07 37                 jump @213 if a0 >=s 0
      :                          @207
  3112: 84 77 ff 00              a0 = a0 & 0xff
  3116: 33 06 02                 s1 = 0x2
  3119: 53 27 c0 00 2d           jump @213 if a0 <u 192
      :                          @208
  3124: 33 06 03                 s1 = 0x3
  3127: 53 27 e0 00 25           jump @213 if a0 <u 224
      :                          @209
  3132: 33 06 04                 s1 = 0x4
  3135: 53 27 f0 00 1d           jump @213 if a0 <u 240
      :                          @210
  3140: 33 06 05                 s1 = 0x5
  3143: 53 27 f8 00 15           jump @213 if a0 <u 248
      :                          @211
  3148: 33 06 06                 s1 = 0x6
  3151: 53 27 fc 00 0d           jump @213 if a0 <u 252
      :                          @212
  3156: 88 77 fe 00              a0 = a0 <u 0xfe
  3160: 9a 76 08                 s1 = 0x8 - a0
  3163: 01                       fallthrough
      :                          @213
  3164: 7b 1a 28                 u64 [sp + 0x28] = a3
  3167: ac 6a a8 07              jump @247 if a3 <u s1
      :                          @214
  3171: 64 57                    a0 = s0
  3173: 64 68                    a1 = s1
  3175: 50 10 20 b7 08           ra = 32, jump @280
      :                          @215 [@dyn 16]
  3180: 82 1a 28                 a3 = u64 [sp + 0x28]
  3183: 28 07                    jump @217
      :                          @216
  3185: 33 06                    s1 = 0
  3187: 33 07                    a0 = 0
  3189: 01                       fallthrough
      :                          @217
  3190: e4 6a 08                 a1 = maxu(a3, s1)
  3193: c9 68 08                 a1 = a1 - s1
  3196: e6 78 0a                 a3 = minu(a1, a0)
  3199: c8 56 06                 s1 = s1 + s0
  3202: 52 1a 24 15              jump @219 if a3 != 36
      :                          @218
  3206: 80 68 20                 a1 = u32 [s1 + 0x20]
  3209: 64 67                    a0 = s1
  3211: 0a 0e                    ecalli 14 // 'solicit'
  3213: 33 08                    a1 = 0
  3215: 33 05 00 00 01           s0 = 0x10000
  3220: 28 55 ff                 jump @202
      :                          @219
  3223: 82 17 08                 a0 = u64 [sp + 0x8]
  3226: 97 77 08                 a0 = a0 << 0x8
  3229: 82 18 20                 a1 = u64 [sp + 0x20]
  3232: d4 87 07                 a0 = a0 | a1
  3235: 82 18 18                 a1 = u64 [sp + 0x18]
  3238: 97 88 10                 a1 = a1 << 0x10
  3241: 82 19 10                 a2 = u64 [sp + 0x10]
  3244: 97 99 18                 a2 = a2 << 0x18
  3247: d4 98 08                 a1 = a1 | a2
  3250: d4 78 05                 s0 = a1 | a0
  3253: 46 11 31                 u8 [sp + 49] = 0
  3256: 81 67                    a0 = i32 [s1]
  3258: 7b 17 28                 u64 [sp + 0x28] = a0
  3261: 95 17 31                 a0 = sp + 0x31
  3264: 33 08 01                 a1 = 0x1
  3267: 7b 16 18                 u64 [sp + 0x18] = s1
  3270: 64 69                    a2 = s1
  3272: 7b 1a 20                 u64 [sp + 0x20] = a3
  3275: 0a 03                    ecalli 3 // 'write'
  3277: 46 11 32 6a              u8 [sp + 50] = 0x6a
  3281: 46 11 33 61              u8 [sp + 51] = 0x61
  3285: 46 11 34 6d              u8 [sp + 52] = 0x6d
  3289: 46 11 35 44              u8 [sp + 53] = 0x44
  3293: 46 11 36 4f              u8 [sp + 54] = 0x4f
  3297: 46 11 37 54              u8 [sp + 55] = 0x54
  3301: 46 11 38 6a              u8 [sp + 56] = 0x6a
  3305: 46 11 39 0d              u8 [sp + 57] = 0xd
  3309: 46 11 3a 4a              u8 [sp + 58] = 0x4a
  3313: 46 11 3b 19              u8 [sp + 59] = 0x19
  3317: 46 11 3c d1 00           u8 [sp + 60] = 0xd1
  3322: 46 11 3d 99 00           u8 [sp + 61] = 0x99
  3327: 46 11 3e 50              u8 [sp + 62] = 0x50
  3331: 46 11 3f 57              u8 [sp + 63] = 0x57
  3335: 46 11 40 13              u8 [sp + 64] = 0x13
  3339: 46 11 41 fc 00           u8 [sp + 65] = 0xfc
  3344: 46 11 42 65              u8 [sp + 66] = 0x65
  3348: 46 11 43 f5 00           u8 [sp + 67] = 0xf5
  3353: 46 11 44 31              u8 [sp + 68] = 0x31
  3357: 46 11 45 03              u8 [sp + 69] = 0x3
  3361: 46 11 46 8e 00           u8 [sp + 70] = 0x8e
  3366: 46 11 47 73              u8 [sp + 71] = 0x73
  3370: 33 0b f1 00              a4 = 0xf1
  3374: 78 1b 48                 u8 [sp + 0x48] = a4
  3377: 46 11 49 d8 00           u8 [sp + 73] = 0xd8
  3382: 46 11 4a 85 00           u8 [sp + 74] = 0x85
  3387: 46 11 4b 64              u8 [sp + 75] = 0x64
  3391: 46 11 4c 56              u8 [sp + 76] = 0x56
  3395: 46 11 4d 32              u8 [sp + 77] = 0x32
  3399: 46 11 4e c8 00           u8 [sp + 78] = 0xc8
  3404: 46 11 4f ae 00           u8 [sp + 79] = 0xae
  3409: 64 56                    s1 = s0
  3411: 46 11 50 50              u8 [sp + 80] = 0x50
  3415: 33 0c 3c                 a5 = 0x3c
  3418: 78 1c 51                 u8 [sp + 0x51] = a5
  3421: 46 11 52 4f              u8 [sp + 82] = 0x4f
  3425: 46 11 53 0c              u8 [sp + 83] = 0xc
  3429: 46 11 54 4d              u8 [sp + 84] = 0x4d
  3433: 46 11 55 5e              u8 [sp + 85] = 0x5e
  3437: 46 11 56 19              u8 [sp + 86] = 0x19
  3441: 46 11 57 a7 00           u8 [sp + 87] = 0xa7
  3446: 46 11 58 bf 00           u8 [sp + 88] = 0xbf
  3451: 46 11 59 a9 00           u8 [sp + 89] = 0xa9
  3456: 46 11 5a bb 00           u8 [sp + 90] = 0xbb
  3461: 46 11 5b 0f              u8 [sp + 91] = 0xf
  3465: 46 11 5c a4 00           u8 [sp + 92] = 0xa4
  3470: 46 11 5d 96 00           u8 [sp + 93] = 0x96
  3475: 46 11 5e 87 00           u8 [sp + 94] = 0x87
  3480: 46 11 5f 47              u8 [sp + 95] = 0x47
  3484: 46 11 60 e6 00           u8 [sp + 96] = 0xe6
  3489: 46 11 61 3d              u8 [sp + 97] = 0x3d
  3493: 78 1c 62                 u8 [sp + 0x62] = a5
  3496: 78 1b 63                 u8 [sp + 0x63] = a4
  3499: 46 11 64 e7 00           u8 [sp + 100] = 0xe7
  3504: 46 11 65 4a              u8 [sp + 101] = 0x4a
  3508: 46 11 66 49              u8 [sp + 102] = 0x49
  3512: 46 11 67 dd 00           u8 [sp + 103] = 0xdd
  3517: 46 11 68 c4 00           u8 [sp + 104] = 0xc4
  3522: 46 11 69 a6 00           u8 [sp + 105] = 0xa6
  3527: 46 11 6a ec 00           u8 [sp + 106] = 0xec
  3532: 46 11 6b a8 00           u8 [sp + 107] = 0xa8
  3537: 46 11 6c 9a 00           u8 [sp + 108] = 0x9a
  3542: 46 11 6d 6a              u8 [sp + 109] = 0x6a
  3546: 46 11 6e 6f              u8 [sp + 110] = 0x6f
  3550: 46 11 6f 33              u8 [sp + 111] = 0x33
  3554: 46 11 70 9d 00           u8 [sp + 112] = 0x9d
  3559: 46 11 71 a3 00           u8 [sp + 113] = 0xa3
  3564: 46 11 72 33              u8 [sp + 114] = 0x33
  3568: 46 11 73 7f              u8 [sp + 115] = 0x7f
  3572: 46 11 74 d2 00           u8 [sp + 116] = 0xd2
  3577: 46 11 75 eb 00           u8 [sp + 117] = 0xeb
  3582: 46 11 76 55              u8 [sp + 118] = 0x55
  3586: 46 11 77 07              u8 [sp + 119] = 0x7
  3590: 95 15 ff 07              s0 = sp + 0x7ff
  3594: 95 55 80 03              s0 = s0 + 0x380
  3598: 95 17 78                 a0 = sp + 0x78
  3601: 33 09 00 01              a2 = 0x100
  3605: 33 08                    a1 = 0
  3607: 50 10 22 ac 06           ra = 34, jump @267
      :                          @220 [@dyn 17]
  3612: 82 17 28                 a0 = u64 [sp + 0x28]
  3615: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
  3618: 56 17 08 1c 05           jump @235 if a0 >u 8
      :                          @221
  3623: 97 77 02                 a0 = a0 << 0x2
  3626: 33 08 00 00 01           a1 = 0x10000
  3631: c8 87 07                 a0 = a0 + a1
  3634: 81 77                    a0 = i32 [a0]
  3636: c8 87 07                 a0 = a0 + a1
  3639: 32 07                    jump [a0]
      :                          @222 [@dyn 18]
  3641: 95 18 32                 a1 = sp + 0x32
  3644: 33 09 03                 a2 = 0x3
  3647: 95 1a 78                 a3 = sp + 0x78
  3650: 33 0c 00 01              a5 = 0x100
  3654: 64 67                    a0 = s1
  3656: 33 0b                    a4 = 0
  3658: 0a 02                    ecalli 2 // 'read'
  3660: 46 15 01 01              u8 [s0 + 1] = 0x1
  3664: 7b 17 78 01              u64 [sp + 0x178] = a0
  3668: 95 17 ff 07              a0 = sp + 0x7ff
  3672: 95 77 81 03              a0 = a0 + 0x381
  3676: 33 08 01                 a1 = 0x1
  3679: 95 19 78 01              a2 = sp + 0x178
  3683: 33 0a 08                 a3 = 0x8
  3686: 0a 03                    ecalli 3 // 'write'
  3688: 95 17 32                 a0 = sp + 0x32
  3691: 33 08 03                 a1 = 0x3
  3694: 95 19 35                 a2 = sp + 0x35
  3697: 33 0a 03                 a3 = 0x3
  3700: 0a 03                    ecalli 3 // 'write'
  3702: 46 15 01 02              u8 [s0 + 1] = 0x2
  3706: 7b 17 78 01              u64 [sp + 0x178] = a0
  3710: 95 17 ff 07              a0 = sp + 0x7ff
  3714: 95 77 81 03              a0 = a0 + 0x381
  3718: 33 08 01                 a1 = 0x1
  3721: 95 19 78 01              a2 = sp + 0x178
  3725: 33 0a 08                 a3 = 0x8
  3728: 0a 03                    ecalli 3 // 'write'
  3730: 95 18 32                 a1 = sp + 0x32
  3733: 33 09 03                 a2 = 0x3
  3736: 95 1a 78                 a3 = sp + 0x78
  3739: 33 0c 00 01              a5 = 0x100
  3743: 64 67                    a0 = s1
  3745: 33 0b                    a4 = 0
  3747: 0a 02                    ecalli 2 // 'read'
  3749: 46 15 01 05              u8 [s0 + 1] = 0x5
  3753: 7b 17 78 01              u64 [sp + 0x178] = a0
  3757: 95 17 ff 07              a0 = sp + 0x7ff
  3761: 95 77 81 03              a0 = a0 + 0x381
  3765: 33 08 01                 a1 = 0x1
  3768: 95 19 78 01              a2 = sp + 0x178
  3772: 33 0a 08                 a3 = 0x8
  3775: 0a 03                    ecalli 3 // 'write'
  3777: 95 17 32                 a0 = sp + 0x32
  3780: 33 08                    a1 = 0
  3782: 0a 0f                    ecalli 15 // 'forget'
  3784: 46 15 01 06              u8 [s0 + 1] = 0x6
  3788: 7b 17 78 01              u64 [sp + 0x178] = a0
  3792: 95 17 ff 07              a0 = sp + 0x7ff
  3796: 95 77 81 03              a0 = a0 + 0x381
  3800: 33 08 01                 a1 = 0x1
  3803: 95 19 78 01              a2 = sp + 0x178
  3807: 33 0a 08                 a3 = 0x8
  3810: 0a 03                    ecalli 3 // 'write'
  3812: 28 5a 04                 jump @235
      :                          @223 [@dyn 19]
  3815: 95 17 38                 a0 = sp + 0x38
  3818: 33 08 03                 a1 = 0x3
  3821: 0a 0e                    ecalli 14 // 'solicit'
  3823: 46 15 01 01              u8 [s0 + 1] = 0x1
  3827: 7b 17 78 01              u64 [sp + 0x178] = a0
  3831: 95 17 ff 07              a0 = sp + 0x7ff
  3835: 95 77 81 03              a0 = a0 + 0x381
  3839: 33 08 01                 a1 = 0x1
  3842: 95 19 78 01              a2 = sp + 0x178
  3846: 33 0a 08                 a3 = 0x8
  3849: 0a 03                    ecalli 3 // 'write'
  3851: 95 17 38                 a0 = sp + 0x38
  3854: 33 08 03                 a1 = 0x3
  3857: 0a 0d                    ecalli 13 // 'query'
  3859: 46 15 01 02              u8 [s0 + 1] = 0x2
  3863: 7b 17 78 01              u64 [sp + 0x178] = a0
  3867: 95 17 ff 07              a0 = sp + 0x7ff
  3871: 95 77 81 03              a0 = a0 + 0x381
  3875: 33 08 01                 a1 = 0x1
  3878: 95 19 78 01              a2 = sp + 0x178
  3882: 33 0a 08                 a3 = 0x8
  3885: 0a 03                    ecalli 3 // 'write'
  3887: 95 17 58                 a0 = sp + 0x58
  3890: 33 08 03                 a1 = 0x3
  3893: 0a 0d                    ecalli 13 // 'query'
  3895: 46 15 01 05              u8 [s0 + 1] = 0x5
  3899: 7b 17 78 01              u64 [sp + 0x178] = a0
  3903: 95 17 ff 07              a0 = sp + 0x7ff
  3907: 95 77 81 03              a0 = a0 + 0x381
  3911: 33 08 01                 a1 = 0x1
  3914: 95 19 78 01              a2 = sp + 0x178
  3918: 33 0a 08                 a3 = 0x8
  3921: 0a 03                    ecalli 3 // 'write'
  3923: 28 eb 03                 jump @235
      :                          @224 [@dyn 20]
  3926: 95 17 38                 a0 = sp + 0x38
  3929: 33 08 03                 a1 = 0x3
  3932: 0a 0f                    ecalli 15 // 'forget'
  3934: 46 15 01 01              u8 [s0 + 1] = 0x1
  3938: 7b 17 78 01              u64 [sp + 0x178] = a0
  3942: 95 17 ff 07              a0 = sp + 0x7ff
  3946: 95 77 81 03              a0 = a0 + 0x381
  3950: 33 08 01                 a1 = 0x1
  3953: 95 19 78 01              a2 = sp + 0x178
  3957: 33 0a 08                 a3 = 0x8
  3960: 0a 03                    ecalli 3 // 'write'
  3962: 95 17 38                 a0 = sp + 0x38
  3965: 33 08 03                 a1 = 0x3
  3968: 0a 0d                    ecalli 13 // 'query'
  3970: 46 15 01 02              u8 [s0 + 1] = 0x2
  3974: 7b 17 78 01              u64 [sp + 0x178] = a0
  3978: 95 17 ff 07              a0 = sp + 0x7ff
  3982: 95 77 81 03              a0 = a0 + 0x381
  3986: 33 08 01                 a1 = 0x1
  3989: 95 19 78 01              a2 = sp + 0x178
  3993: 33 0a 08                 a3 = 0x8
  3996: 0a 03                    ecalli 3 // 'write'
  3998: 95 18 58                 a1 = sp + 0x58
  4001: 95 19 78                 a2 = sp + 0x78
  4004: 33 0b 03                 a4 = 0x3
  4007: 64 67                    a0 = s1
  4009: 33 0a                    a3 = 0
  4011: 0a 01                    ecalli 1 // 'lookup'
  4013: 46 15 01 05              u8 [s0 + 1] = 0x5
  4017: 7b 17 78 01              u64 [sp + 0x178] = a0
  4021: 95 17 ff 07              a0 = sp + 0x7ff
  4025: 95 77 81 03              a0 = a0 + 0x381
  4029: 33 08 01                 a1 = 0x1
  4032: 95 19 78 01              a2 = sp + 0x178
  4036: 33 0a 08                 a3 = 0x8
  4039: 0a 03                    ecalli 3 // 'write'
  4041: 33 07 e8 03              a0 = 0x3e8
  4045: 95 18 32                 a1 = sp + 0x32
  4048: 0a 06                    ecalli 6 // 'assign'
  4050: 46 15 01 06              u8 [s0 + 1] = 0x6
  4054: 7b 17 78 01              u64 [sp + 0x178] = a0
  4058: 95 17 ff 07              a0 = sp + 0x7ff
  4062: 95 77 81 03              a0 = a0 + 0x381
  4066: 33 08 01                 a1 = 0x1
  4069: 95 19 78 01              a2 = sp + 0x178
  4073: 33 0a 08                 a3 = 0x8
  4076: 0a 03                    ecalli 3 // 'write'
  4078: 28 50 03                 jump @235
      :                          @225 [@dyn 21]
  4081: 95 18 38                 a1 = sp + 0x38
  4084: 95 19 78                 a2 = sp + 0x78
  4087: 33 0b 03                 a4 = 0x3
  4090: 64 67                    a0 = s1
  4092: 33 0a                    a3 = 0
  4094: 0a 01                    ecalli 1 // 'lookup'
  4096: 46 15 01 01              u8 [s0 + 1] = 0x1
  4100: 7b 17 78 01              u64 [sp + 0x178] = a0
  4104: 95 17 ff 07              a0 = sp + 0x7ff
  4108: 95 77 81 03              a0 = a0 + 0x381
  4112: 33 08 01                 a1 = 0x1
  4115: 95 19 78 01              a2 = sp + 0x178
  4119: 33 0a 08                 a3 = 0x8
  4122: 0a 03                    ecalli 3 // 'write'
  4124: 95 17 38                 a0 = sp + 0x38
  4127: 33 08 03                 a1 = 0x3
  4130: 0a 0d                    ecalli 13 // 'query'
  4132: 46 15 01 02              u8 [s0 + 1] = 0x2
  4136: 7b 17 78 01              u64 [sp + 0x178] = a0
  4140: 95 17 ff 07              a0 = sp + 0x7ff
  4144: 95 77 81 03              a0 = a0 + 0x381
  4148: 33 08 01                 a1 = 0x1
  4151: 95 19 78 01              a2 = sp + 0x178
  4155: 33 0a 08                 a3 = 0x8
  4158: 0a 03                    ecalli 3 // 'write'
  4160: 95 18 38                 a1 = sp + 0x38
  4163: 64 67                    a0 = s1
  4165: 0a 0c                    ecalli 12 // 'eject'
  4167: 46 15 01 05              u8 [s0 + 1] = 0x5
  4171: 7b 17 78 01              u64 [sp + 0x178] = a0
  4175: 95 17 ff 07              a0 = sp + 0x7ff
  4179: 95 77 81 03              a0 = a0 + 0x381
  4183: 33 08 01                 a1 = 0x1
  4186: 95 19 78 01              a2 = sp + 0x178
  4190: 33 0a 08                 a3 = 0x8
  4193: 0a 03                    ecalli 3 // 'write'
  4195: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  4205: 95 1a 38                 a3 = sp + 0x38
  4208: 33 08                    a1 = 0
  4210: 33 09                    a2 = 0
  4212: 33 0b                    a4 = 0
  4214: 0a 05                    ecalli 5 // 'bless'
  4216: 46 15 01 06              u8 [s0 + 1] = 0x6
  4220: 7b 17 78 01              u64 [sp + 0x178] = a0
  4224: 95 17 ff 07              a0 = sp + 0x7ff
  4228: 95 77 81 03              a0 = a0 + 0x381
  4232: 33 08 01                 a1 = 0x1
  4235: 95 19 78 01              a2 = sp + 0x178
  4239: 33 0a 08                 a3 = 0x8
  4242: 0a 03                    ecalli 3 // 'write'
  4244: 28 aa 02                 jump @235
      :                          @226 [@dyn 22]
  4247: 7b 16 10                 u64 [sp + 0x10] = s1
  4250: 95 17 38                 a0 = sp + 0x38
  4253: 33 08 03                 a1 = 0x3
  4256: 0a 0e                    ecalli 14 // 'solicit'
  4258: 46 15 01 01              u8 [s0 + 1] = 0x1
  4262: 7b 17 78 01              u64 [sp + 0x178] = a0
  4266: 95 17 ff 07              a0 = sp + 0x7ff
  4270: 95 77 81 03              a0 = a0 + 0x381
  4274: 33 08 01                 a1 = 0x1
  4277: 95 19 78 01              a2 = sp + 0x178
  4281: 33 0a 08                 a3 = 0x8
  4284: 0a 03                    ecalli 3 // 'write'
  4286: 95 17 38                 a0 = sp + 0x38
  4289: 33 08 03                 a1 = 0x3
  4292: 0a 0d                    ecalli 13 // 'query'
  4294: 46 15 01 02              u8 [s0 + 1] = 0x2
  4298: 7b 17 78 01              u64 [sp + 0x178] = a0
  4302: 95 17 ff 07              a0 = sp + 0x7ff
  4306: 95 77 81 03              a0 = a0 + 0x381
  4310: 33 08 01                 a1 = 0x1
  4313: 95 19 78 01              a2 = sp + 0x178
  4317: 33 0a 08                 a3 = 0x8
  4320: 0a 03                    ecalli 3 // 'write'
  4322: 95 15 78 01              s0 = sp + 0x178
  4326: 33 09 00 0a              a2 = 0xa00
  4330: 95 17 78 01              a0 = sp + 0x178
  4334: 33 08                    a1 = 0
  4336: 50 10 2e d3 03           ra = 46, jump @267
      :                          @227 [@dyn 23]
  4341: 33 06 50                 s1 = 0x50
  4344: 01                       fallthrough
      :                          @228
  4345: 95 18 38                 a1 = sp + 0x38
  4348: 33 09 20                 a2 = 0x20
  4351: 64 57                    a0 = s0
  4353: 50 10 30 10 03           ra = 48, jump @249
      :                          @229 [@dyn 24]
  4358: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4361: 95 55 20                 s0 = s0 + 0x20
  4364: 52 06 ed                 jump @228 if s1 != 0
      :                          @230
  4367: 95 18 78 01              a1 = sp + 0x178
  4371: 33 07                    a0 = 0
  4373: 0a 06                    ecalli 6 // 'assign'
  4375: 95 15 ff 07              s0 = sp + 0x7ff
  4379: 95 55 80 03              s0 = s0 + 0x380
  4383: 46 05 05                 u8 [s0 + 0] = 0x5
  4386: 7b 57 01                 u64 [s0 + 0x1] = a0
  4389: 95 17 ff 07              a0 = sp + 0x7ff
  4393: 95 77 80 03              a0 = a0 + 0x380
  4397: 33 08 01                 a1 = 0x1
  4400: 95 19 ff 07              a2 = sp + 0x7ff
  4404: 95 99 81 03              a2 = a2 + 0x381
  4408: 33 0a 08                 a3 = 0x8
  4411: 0a 03                    ecalli 3 // 'write'
  4413: 82 16 10                 s1 = u64 [sp + 0x10]
  4416: 28 fe 01                 jump @235
      :                          @231 [@dyn 25]
  4419: 95 17 38                 a0 = sp + 0x38
  4422: 33 08 03                 a1 = 0x3
  4425: 0a 0f                    ecalli 15 // 'forget'
  4427: 46 15 01 01              u8 [s0 + 1] = 0x1
  4431: 7b 17 78 01              u64 [sp + 0x178] = a0
  4435: 95 17 ff 07              a0 = sp + 0x7ff
  4439: 95 77 81 03              a0 = a0 + 0x381
  4443: 33 08 01                 a1 = 0x1
  4446: 95 19 78 01              a2 = sp + 0x178
  4450: 33 0a 08                 a3 = 0x8
  4453: 0a 03                    ecalli 3 // 'write'
  4455: 95 17 38                 a0 = sp + 0x38
  4458: 33 08 03                 a1 = 0x3
  4461: 0a 0d                    ecalli 13 // 'query'
  4463: 46 15 01 02              u8 [s0 + 1] = 0x2
  4467: 7b 17 78 01              u64 [sp + 0x178] = a0
  4471: 95 17 ff 07              a0 = sp + 0x7ff
  4475: 95 77 81 03              a0 = a0 + 0x381
  4479: 33 08 01                 a1 = 0x1
  4482: 95 19 78 01              a2 = sp + 0x178
  4486: 33 0a 08                 a3 = 0x8
  4489: 0a 03                    ecalli 3 // 'write'
  4491: 28 b3 01                 jump @235
      :                          @232 [@dyn 26]
  4494: 95 18 38                 a1 = sp + 0x38
  4497: 95 19 78                 a2 = sp + 0x78
  4500: 33 0b 03                 a4 = 0x3
  4503: 64 67                    a0 = s1
  4505: 33 0a                    a3 = 0
  4507: 0a 01                    ecalli 1 // 'lookup'
  4509: 46 15 01 01              u8 [s0 + 1] = 0x1
  4513: 7b 17 78 01              u64 [sp + 0x178] = a0
  4517: 95 17 ff 07              a0 = sp + 0x7ff
  4521: 95 77 81 03              a0 = a0 + 0x381
  4525: 33 08 01                 a1 = 0x1
  4528: 95 19 78 01              a2 = sp + 0x178
  4532: 33 0a 08                 a3 = 0x8
  4535: 0a 03                    ecalli 3 // 'write'
  4537: 95 17 38                 a0 = sp + 0x38
  4540: 33 08 03                 a1 = 0x3
  4543: 0a 0d                    ecalli 13 // 'query'
  4545: 46 15 01 02              u8 [s0 + 1] = 0x2
  4549: 7b 17 78 01              u64 [sp + 0x178] = a0
  4553: 95 17 ff 07              a0 = sp + 0x7ff
  4557: 95 77 81 03              a0 = a0 + 0x381
  4561: 33 08 01                 a1 = 0x1
  4564: 95 19 78 01              a2 = sp + 0x178
  4568: 33 0a 08                 a3 = 0x8
  4571: 0a 03                    ecalli 3 // 'write'
  4573: 28 61 01                 jump @235
      :                          @233 [@dyn 27]
  4576: 95 18 32                 a1 = sp + 0x32
  4579: 33 09 03                 a2 = 0x3
  4582: 95 1a 78                 a3 = sp + 0x78
  4585: 33 0c 00 01              a5 = 0x100
  4589: 64 67                    a0 = s1
  4591: 33 0b                    a4 = 0
  4593: 0a 02                    ecalli 2 // 'read'
  4595: 46 15 01 01              u8 [s0 + 1] = 0x1
  4599: 7b 17 78 01              u64 [sp + 0x178] = a0
  4603: 95 17 ff 07              a0 = sp + 0x7ff
  4607: 95 77 81 03              a0 = a0 + 0x381
  4611: 33 08 01                 a1 = 0x1
  4614: 95 19 78 01              a2 = sp + 0x178
  4618: 33 0a 08                 a3 = 0x8
  4621: 0a 03                    ecalli 3 // 'write'
  4623: 95 17 32                 a0 = sp + 0x32
  4626: 33 08 03                 a1 = 0x3
  4629: 33 09                    a2 = 0
  4631: 33 0a                    a3 = 0
  4633: 0a 03                    ecalli 3 // 'write'
  4635: 46 15 01 02              u8 [s0 + 1] = 0x2
  4639: 7b 17 78 01              u64 [sp + 0x178] = a0
  4643: 95 17 ff 07              a0 = sp + 0x7ff
  4647: 95 77 81 03              a0 = a0 + 0x381
  4651: 33 08 01                 a1 = 0x1
  4654: 95 19 78 01              a2 = sp + 0x178
  4658: 33 0a 08                 a3 = 0x8
  4661: 0a 03                    ecalli 3 // 'write'
  4663: 95 18 32                 a1 = sp + 0x32
  4666: 33 09 03                 a2 = 0x3
  4669: 95 1a 78                 a3 = sp + 0x78
  4672: 33 0c 00 01              a5 = 0x100
  4676: 64 67                    a0 = s1
  4678: 33 0b                    a4 = 0
  4680: 0a 02                    ecalli 2 // 'read'
  4682: 46 15 01 05              u8 [s0 + 1] = 0x5
  4686: 7b 17 78 01              u64 [sp + 0x178] = a0
  4690: 95 17 ff 07              a0 = sp + 0x7ff
  4694: 95 77 81 03              a0 = a0 + 0x381
  4698: 33 08 01                 a1 = 0x1
  4701: 95 19 78 01              a2 = sp + 0x178
  4705: 33 0a 08                 a3 = 0x8
  4708: 0a 03                    ecalli 3 // 'write'
  4710: 95 17 38                 a0 = sp + 0x38
  4713: 33 08 03                 a1 = 0x3
  4716: 0a 0e                    ecalli 14 // 'solicit'
  4718: 46 15 01 06              u8 [s0 + 1] = 0x6
  4722: 7b 17 78 01              u64 [sp + 0x178] = a0
  4726: 95 17 ff 07              a0 = sp + 0x7ff
  4730: 95 77 81 03              a0 = a0 + 0x381
  4734: 33 08 01                 a1 = 0x1
  4737: 95 19 78 01              a2 = sp + 0x178
  4741: 33 0a 08                 a3 = 0x8
  4744: 0a 03                    ecalli 3 // 'write'
  4746: 28 b4 00                 jump @235
      :                          @234 [@dyn 28]
  4749: 64 65                    s0 = s1
  4751: 95 17 38                 a0 = sp + 0x38
  4754: 33 08 03                 a1 = 0x3
  4757: 33 09 8f 03              a2 = 0x38f
  4761: 33 0a 8f 03              a3 = 0x38f
  4765: 0a 09                    ecalli 9 // 'new'
  4767: 95 19 ff 07              a2 = sp + 0x7ff
  4771: 95 99 80 03              a2 = a2 + 0x380
  4775: 46 19 01 01              u8 [a2 + 1] = 0x1
  4779: 7b 17 78 01              u64 [sp + 0x178] = a0
  4783: 95 17 ff 07              a0 = sp + 0x7ff
  4787: 95 77 81 03              a0 = a0 + 0x381
  4791: 33 08 01                 a1 = 0x1
  4794: 95 19 78 01              a2 = sp + 0x178
  4798: 33 0a 08                 a3 = 0x8
  4801: 0a 03                    ecalli 3 // 'write'
  4803: 95 17 38                 a0 = sp + 0x38
  4806: 33 08 8f 03              a1 = 0x38f
  4810: 33 09 8f 03              a2 = 0x38f
  4814: 0a 0a                    ecalli 10 // 'upgrade'
  4816: 95 19 ff 07              a2 = sp + 0x7ff
  4820: 95 99 80 03              a2 = a2 + 0x380
  4824: 46 19 01 02              u8 [a2 + 1] = 0x2
  4828: 7b 17 78 01              u64 [sp + 0x178] = a0
  4832: 95 17 ff 07              a0 = sp + 0x7ff
  4836: 95 77 81 03              a0 = a0 + 0x381
  4840: 33 08 01                 a1 = 0x1
  4843: 95 19 78 01              a2 = sp + 0x178
  4847: 33 0a 08                 a3 = 0x8
  4850: 0a 03                    ecalli 3 // 'write'
  4852: 48 21 78 01 8f 03        u32 [sp + 376] = 0x38f
  4858: 48 21 80 01              u32 [sp + 384] = 0
  4862: 48 21 7c 01 8f 03        u32 [sp + 380] = 0x38f
  4868: 64 56                    s1 = s0
  4870: 95 15 ff 07              s0 = sp + 0x7ff
  4874: 95 55 80 03              s0 = s0 + 0x380
  4878: 33 08 01                 a1 = 0x1
  4881: 33 09 01                 a2 = 0x1
  4884: 95 1a 78 01              a3 = sp + 0x178
  4888: 33 0b 01                 a4 = 0x1
  4891: 33 07                    a0 = 0
  4893: 0a 05                    ecalli 5 // 'bless'
  4895: 46 05 05                 u8 [s0 + 0] = 0x5
  4898: 7b 57 01                 u64 [s0 + 0x1] = a0
  4901: 95 17 ff 07              a0 = sp + 0x7ff
  4905: 95 77 80 03              a0 = a0 + 0x380
  4909: 33 08 01                 a1 = 0x1
  4912: 95 19 ff 07              a2 = sp + 0x7ff
  4916: 95 99 81 03              a2 = a2 + 0x381
  4920: 33 0a 08                 a3 = 0x8
  4923: 0a 03                    ecalli 3 // 'write'
  4925: 01                       fallthrough
      :                          @235
  4926: 95 18 78                 a1 = sp + 0x78
  4929: 64 67                    a0 = s1
  4931: 0a 04                    ecalli 4 // 'info'
  4933: 46 15 01 08              u8 [s0 + 1] = 0x8
  4937: 7b 17 78 01              u64 [sp + 0x178] = a0
  4941: 95 17 ff 07              a0 = sp + 0x7ff
  4945: 95 77 81 03              a0 = a0 + 0x381
  4949: 33 08 01                 a1 = 0x1
  4952: 95 19 78 01              a2 = sp + 0x178
  4956: 33 0a 08                 a3 = 0x8
  4959: 0a 03                    ecalli 3 // 'write'
  4961: 0a                       ecalli 0 // 'gas'
  4962: 46 15 01 09              u8 [s0 + 1] = 0x9
  4966: 7b 17 78 01              u64 [sp + 0x178] = a0
  4970: 95 17 ff 07              a0 = sp + 0x7ff
  4974: 95 77 81 03              a0 = a0 + 0x381
  4978: 33 08 01                 a1 = 0x1
  4981: 95 19 78 01              a2 = sp + 0x178
  4985: 33 0a 08                 a3 = 0x8
  4988: 0a 03                    ecalli 3 // 'write'
  4990: 01                       fallthrough
      :                          @236
  4991: 49 21 90 01              u64 [sp + 400] = 0
  4995: 49 21 88 01              u64 [sp + 392] = 0
  4999: 49 21 80 01              u64 [sp + 384] = 0
  5003: 49 21 78 01              u64 [sp + 376] = 0
  5007: 82 19 20                 a2 = u64 [sp + 0x20]
  5010: 55 19 21 74              jump @246 if a2 >=u 33
      :                          @237
  5014: 82 16 28                 s1 = u64 [sp + 0x28]
  5017: 97 66 20                 s1 = s1 << 0x20
  5020: 98 66 20                 s1 = s1 >> 0x20
  5023: 95 17 78 01              a0 = sp + 0x178
  5027: 95 15 78 01              s0 = sp + 0x178
  5031: 82 18 18                 a1 = u64 [sp + 0x18]
  5034: 50 10 3a 67              ra = 58, jump @249
      :                          @238 [@dyn 29]
  5038: 3a 08 00 00 03           a1 = u64 [0x30000]
  5043: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
  5053: ca 76 07                 a0 = s1 * a0
  5056: ae 87 37                 jump @242 if a0 >=u a1
      :                          @239
  5059: 82 18 28                 a1 = u64 [sp + 0x28]
  5062: 51 18 09 07              jump @241 if a1 == 9
      :                          @240
  5066: 0a 08                    ecalli 8 // 'checkpoint'
  5068: 01                       fallthrough
      :                          @241
  5069: 95 67 2a                 a0 = s1 + 0x2a
  5072: 95 19 ff 07              a2 = sp + 0x7ff
  5076: 95 99 80 03              a2 = a2 + 0x380
  5080: 46 09 07                 u8 [a2 + 0] = 0x7
  5083: 7b 97 01                 u64 [a2 + 0x1] = a0
  5086: 95 17 ff 07              a0 = sp + 0x7ff
  5090: 95 77 80 03              a0 = a0 + 0x380
  5094: 33 08 01                 a1 = 0x1
  5097: 95 19 ff 07              a2 = sp + 0x7ff
  5101: 95 99 81 03              a2 = a2 + 0x381
  5105: 33 0a 08                 a3 = 0x8
  5108: 0a 03                    ecalli 3 // 'write'
  5110: 01                       fallthrough
      :                          @242
  5111: 95 17 78 01              a0 = sp + 0x178
  5115: 0a 10                    ecalli 16 // 'oyield'
  5117: 33 08 20                 a1 = 0x20
  5120: 28 e9 f7                 jump @202
      :                          @243
  5123: 00                       trap
      :                          @244
  5124: 00                       trap
      :                          @245
  5125: 00                       trap
      :                          @246
  5126: 00                       trap
      :                          @247
  5127: 00                       trap
      :                          @248 [export #2: 'on_transfer']
  5128: 33 07 00 00 01           a0 = 0x10000
  5133: 33 08                    a1 = 0
  5135: 32 00                    ret
      :                          @249
  5137: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5140: 7b 10 18                 u64 [sp + 0x18] = ra
  5143: 7b 15 10                 u64 [sp + 0x10] = s0
  5146: 7b 16 08                 u64 [sp + 0x8] = s1
  5149: 53 19 10 64              jump @258 if a2 <u 16
      :                          @250
  5153: 8d 7a                    i32 a3 = -a0
  5155: 84 a2 07                 t0 = a3 & 0x7
  5158: c8 27 0b                 a4 = a0 + t0
  5161: 51 02 15                 jump @253 if t0 == 0
      :                          @251
  5164: 64 8c                    a5 = a1
  5166: 64 75                    s0 = a0
  5168: 01                       fallthrough
      :                          @252
  5169: 7c ca                    a3 = u8 [a5]
  5171: 78 5a                    u8 [s0] = a3
  5173: 95 55 01                 s0 = s0 + 0x1
  5176: 95 cc 01                 a5 = a5 + 0x1
  5179: ac b5 f6                 jump @252 if s0 <u a4
      :                          @253
  5182: c8 28 03                 t1 = a1 + t0
  5185: c9 29 02                 t0 = a2 - t0
  5188: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5191: 84 38 07                 a1 = t1 & 0x7
  5194: c8 4b 0a                 a3 = a4 + t2
  5197: 51 08 3b                 jump @260 if a1 == 0
      :                          @254
  5200: 58 04 4b                 jump @263 if t2 <=s 0
      :                          @255
  5203: 97 38 03                 a1 = t1 << 0x3
  5206: 84 80 38                 ra = a1 & 0x38
  5209: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5212: 82 c5                    s0 = u64 [a5]
  5214: 8d 88                    i32 a1 = -a1
  5216: 84 88 38                 a1 = a1 & 0x38
  5219: 95 cc 08                 a5 = a5 + 0x8
  5222: 01                       fallthrough
      :                          @256
  5223: 82 c6                    s1 = u64 [a5]
  5225: d0 05 05                 s0 = s0 >> ra
  5228: cf 86 09                 a2 = s1 << a1
  5231: d4 59 09                 a2 = a2 | s0
  5234: 7b b9                    u64 [a4] = a2
  5236: 95 bb 08                 a4 = a4 + 0x8
  5239: 95 cc 08                 a5 = a5 + 0x8
  5242: 64 65                    s0 = s1
  5244: ac ab eb                 jump @256 if a4 <u a3
      :                          @257
  5247: 28 1c                    jump @263
      :                          @258
  5249: 64 7a                    a3 = a0
  5251: 52 09 21                 jump @264 if a2 != 0
      :                          @259
  5254: 28 2f                    jump @266
      :                          @260
  5256: 58 04 13                 jump @263 if t2 <=s 0
      :                          @261
  5259: 64 38                    a1 = t1
  5261: 01                       fallthrough
      :                          @262
  5262: 82 89                    a2 = u64 [a1]
  5264: 7b b9                    u64 [a4] = a2
  5266: 95 bb 08                 a4 = a4 + 0x8
  5269: 95 88 08                 a1 = a1 + 0x8
  5272: ac ab f6                 jump @262 if a4 <u a3
      :                          @263
  5275: c8 43 08                 a1 = t1 + t2
  5278: 84 29 07                 a2 = t0 & 0x7
  5281: 51 09 14                 jump @266 if a2 == 0
      :                          @264
  5284: c8 a9 09                 a2 = a2 + a3
  5287: 01                       fallthrough
      :                          @265
  5288: 7c 8b                    a4 = u8 [a1]
  5290: 78 ab                    u8 [a3] = a4
  5292: 95 aa 01                 a3 = a3 + 0x1
  5295: 95 88 01                 a1 = a1 + 0x1
  5298: ac 9a f6                 jump @265 if a3 <u a2
      :                          @266
  5301: 82 10 18                 ra = u64 [sp + 0x18]
  5304: 82 15 10                 s0 = u64 [sp + 0x10]
  5307: 82 16 08                 s1 = u64 [sp + 0x8]
  5310: 95 11 20                 sp = sp + 0x20
  5313: 32 00                    ret
      :                          @267
  5315: 53 19 10 48              jump @276 if a2 <u 16
      :                          @268
  5319: 8d 7a                    i32 a3 = -a0
  5321: 84 aa 07                 a3 = a3 & 0x7
  5324: c8 a7 0b                 a4 = a0 + a3
  5327: 51 0a 0e                 jump @271 if a3 == 0
      :                          @269
  5330: 64 7c                    a5 = a0
  5332: 01                       fallthrough
      :                          @270
  5333: 78 c8                    u8 [a5] = a1
  5335: 95 cc 01                 a5 = a5 + 0x1
  5338: ac bc fb                 jump @270 if a5 <u a4
      :                          @271
  5341: c9 a9 03                 t1 = a2 - a3
  5344: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5347: c8 cb 0a                 a3 = a4 + a5
  5350: 58 0c 1d                 jump @274 if a5 <=s 0
      :                          @272
  5353: 84 82 ff 00              t0 = a1 & 0xff
  5357: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  5367: ca 92 0c                 a5 = t0 * a2
  5370: 01                       fallthrough
      :                          @273
  5371: 7b bc                    u64 [a4] = a5
  5373: 95 bb 08                 a4 = a4 + 0x8
  5376: ac ab fb                 jump @273 if a4 <u a3
      :                          @274
  5379: 84 39 07                 a2 = t1 & 0x7
  5382: 52 09 0a                 jump @277 if a2 != 0
      :                          @275
  5385: 28 13                    jump @279
      :                          @276
  5387: 64 7a                    a3 = a0
  5389: 51 09 0f                 jump @279 if a2 == 0
      :                          @277
  5392: c8 a9 09                 a2 = a2 + a3
  5395: 01                       fallthrough
      :                          @278
  5396: 78 a8                    u8 [a3] = a1
  5398: 95 aa 01                 a3 = a3 + 0x1
  5401: ac 9a fb                 jump @278 if a3 <u a2
      :                          @279
  5404: 32 00                    ret
      :                          @280
  5406: 51 08 9b 00              jump @301 if a1 == 0
      :                          @281
  5410: 64 79                    a2 = a0
  5412: 7c 77                    a0 = u8 [a0]
  5414: 51 07 91 00              jump @300 if a0 == 0
      :                          @282
  5418: 51 27 ff 00 90 00        jump @302 if a0 == 255
      :                          @283
  5424: 6c 7a                    a3 = sext.b a0
  5426: 57 0a 09                 jump @285 if a3 <s 0
      :                          @284
  5429: 33 0a                    a3 = 0
  5431: 33 08                    a1 = 0
  5433: 28 73                    jump @299
      :                          @285
  5435: 55 27 c0 00 0d           jump @287 if a0 >=u 192
      :                          @286
  5440: 33 0a 01                 a3 = 0x1
  5443: 33 0b 80                 a4 = 0xffffffffffffff80
  5446: 28 4a                    jump @296
      :                          @287
  5448: 55 27 e0 00 0e           jump @289 if a0 >=u 224
      :                          @288
  5453: 33 0a 02                 a3 = 0x2
  5456: 33 0b 40 ff              a4 = 0xffffffffffffff40
  5460: 28 3c                    jump @296
      :                          @289
  5462: 55 27 f0 00 0e           jump @291 if a0 >=u 240
      :                          @290
  5467: 33 0a 03                 a3 = 0x3
  5470: 33 0b 20 ff              a4 = 0xffffffffffffff20
  5474: 28 2e                    jump @296
      :                          @291
  5476: 55 27 f8 00 0e           jump @293 if a0 >=u 248
      :                          @292
  5481: 33 0a 04                 a3 = 0x4
  5484: 33 0b 10 ff              a4 = 0xffffffffffffff10
  5488: 28 20                    jump @296
      :                          @293
  5490: 55 27 fc 00 0e           jump @295 if a0 >=u 252
      :                          @294
  5495: 33 0a 05                 a3 = 0x5
  5498: 33 0b 08 ff              a4 = 0xffffffffffffff08
  5502: 28 12                    jump @296
      :                          @295
  5504: 88 7a fe 00              a3 = a0 <u 0xfe
  5508: 33 0b 04 ff              a4 = 0xffffffffffffff04
  5512: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  5516: 85 aa 07                 a3 = a3 ^ 0x7
  5519: 01                       fallthrough
      :                          @296
  5520: ae 8a 2b                 jump @303 if a3 >=u a1
      :                          @297
  5523: 33 08                    a1 = 0
  5525: c8 b7 07                 a0 = a0 + a4
  5528: 64 ab                    a4 = a3
  5530: 01                       fallthrough
      :                          @298
  5531: c8 b9 0c                 a5 = a2 + a4
  5534: 7c cc                    a5 = u8 [a5]
  5536: 97 88 08                 a1 = a1 << 0x8
  5539: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  5542: d4 c8 08                 a1 = a1 | a5
  5545: 52 0b f2                 jump @298 if a4 != 0
      :                          @299
  5548: 8a a9 03                 i32 a2 = a3 << 0x3
  5551: cf 97 07                 a0 = a0 << a2
  5554: c8 87 07                 a0 = a0 + a1
  5557: 32 00                    ret
      :                          @300
  5559: 32 00                    ret
      :                          @301
  5561: 00                       trap
      :                          @302
  5562: 00                       trap
      :                          @303
  5563: 00                       trap
