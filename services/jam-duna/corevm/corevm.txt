// RO data = 1320/1320 bytes
// RW data = 24/4144 bytes
// Stack size = 40960 bytes
// Jump table entry point size = 2 bytes
// RO data = [36, 0, 255, 255, 46, 0, 255, 255, 54, 0, 255, 255, 62, 0, 255, 255, 72, 0, 255, 255, 82, 0, 255, 255, 94, 0, 255, 255, 100, 0, 255, 255, 106, 0, 255, 255, 114, 0, 255, 255, 49, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 44, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 50, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 44, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 53, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 58, 32, 51, 54, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 44, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 74, 65, 77, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 58, 32, 51, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 74, 65, 77, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 58, 32, 51, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 74, 65, 77, 44, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 58, 32, 105, 110, 115, 101, 114, 116, 32, 116, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 58, 32, 50, 43, 50, 94, 51, 50, 42, 120, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 44, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 58, 32, 51, 101, 106, 101, 99, 116, 44, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 98, 108, 101, 115, 115, 44, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 58, 32, 105, 110, 115, 101, 114, 116, 32, 116, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 58, 32, 51, 43, 50, 94, 51, 50, 42, 120, 97, 115, 115, 105, 103, 110, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 110, 101, 119, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 58, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 117, 112, 103, 114, 97, 100, 101, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 121, 105, 101, 108, 100, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 98, 108, 101, 115, 115, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 44, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 44, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 58, 32, 51, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 44, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 55, 56, 105, 110, 102, 111, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 57, 103, 97, 115, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 58, 32, 103, 97, 115, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 0, 0, 91, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 103, 101, 116, 95, 112, 97, 103, 101, 58, 32, 112, 101, 101, 107, 32, 102, 97, 105, 108, 101, 100, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 140, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 142, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 198, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 138, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 155, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3189
// Code size = 9771 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 b6 0a 00 00           jump @171
      :                          @2
    10: 28 a8 14                 jump @285
      :                          @3 [export #0: 'refine']
    13: 95 11 08 f8              sp = sp + 0xfffffffffffff808
    17: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
    21: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
    25: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
    29: 95 11 c8 b3              sp = sp + 0xffffffffffffb3c8
    33: 33 0a 00 00 01           a3 = 0x10000
    38: 53 18 04 8b 00           jump @16 if a1 <u 4
      :                          @4
    43: 95 85 fc                 s0 = a1 + 0xfffffffffffffffc
    46: 51 05 83 00              jump @16 if s0 == 0
      :                          @5
    50: 95 79 04                 a2 = a0 + 0x4
    53: 7d 98                    a1 = i8 [a2]
    55: 80 7a                    a3 = u32 [a0]
    57: 33 06 01                 s1 = 0x1
    60: 59 08 3b                 jump @13 if a1 >=s 0
      :                          @6
    63: 84 87 ff 00              a0 = a1 & 0xff
    67: 33 06 02                 s1 = 0x2
    70: 53 27 c0 00 2d           jump @12 if a0 <u 192
      :                          @7
    75: 33 06 03                 s1 = 0x3
    78: 53 27 e0 00 25           jump @12 if a0 <u 224
      :                          @8
    83: 33 06 04                 s1 = 0x4
    86: 53 27 f0 00 1d           jump @12 if a0 <u 240
      :                          @9
    91: 33 06 05                 s1 = 0x5
    94: 53 27 f8 00 15           jump @12 if a0 <u 248
      :                          @10
    99: 33 06 06                 s1 = 0x6
   102: 53 27 fc 00 0d           jump @12 if a0 <u 252
      :                          @11
   107: 88 77 fe 00              a0 = a0 <u 0xfe
   111: 9a 76 08                 s1 = 0x8 - a0
   114: 01                       fallthrough
      :                          @12
   115: ac 65 22 0a              jump @166 if s0 <u s1
      :                          @13
   119: 7b 1a 00 01              u64 [sp + 0x100] = a3
   123: 7b 19 e8 00              u64 [sp + 0xe8] = a2
   127: 64 97                    a0 = a2
   129: 64 68                    a1 = s1
   131: 50 10 02 1b 21           ra = 2, jump @559
      :                          @14 [@dyn 1]
   136: 64 68                    a1 = s1
   138: 64 76                    s1 = a0
   140: e4 85 07                 a0 = maxu(s0, a1)
   143: 7b 18 e0 00              u64 [sp + 0xe0] = a1
   147: c9 87 07                 a0 = a0 - a1
   150: d8 67 08                 a1 = a0 <u s1
   153: e4 67 07                 a0 = maxu(a0, s1)
   156: c9 67 07                 a0 = a0 - s1
   159: 88 77 20                 a0 = a0 <u 0x20
   162: d4 87 07                 a0 = a0 | a1
   165: 51 07 2a                 jump @18 if a0 == 0
      :                          @15
   168: 33 08                    a1 = 0
   170: 33 0a 00 00 01           a3 = 0x10000
   175: 28 05                    jump @17
      :                          @16
   177: 33 08                    a1 = 0
   179: 01                       fallthrough
      :                          @17
   180: 64 a7                    a0 = a3
   182: 33 09 38 4c              a2 = 0x4c38
   186: c8 91 01                 sp = sp + a2
   189: 82 10 f0 07              ra = u64 [sp + 0x7f0]
   193: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
   197: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
   201: 95 11 f8 07              sp = sp + 0x7f8
   205: 32 00                    ret
      :                          @18
   207: 48 21 28 01              u32 [sp + 296] = 0
   211: 49 21 20 01              u64 [sp + 288] = 0
   215: 49 21 18 01              u64 [sp + 280] = 0
   219: 49 21 10 01              u64 [sp + 272] = 0
   223: 49 21 08 01              u64 [sp + 264] = 0
   227: 95 17 08 01              a0 = sp + 0x108
   231: 33 09 24                 a2 = 0x24
   234: 33 0a 03                 a3 = 0x3
   237: 33 08                    a1 = 0
   239: 33 0b                    a4 = 0
   241: 33 0c                    a5 = 0
   243: 0a 12                    ecalli 18 // 'fetch'
   245: 01                       fallthrough
      :                          @19
   246: 95 1a 08 01              a3 = sp + 0x108
   250: 33 08 24                 a1 = 0x24
   253: 7b 16 d8 00              u64 [sp + 0xd8] = s1
   257: 53 16 08 b3              jump @17 if s1 <u 8
      :                          @20
   261: 95 17 30 01              a0 = sp + 0x130
   265: 33 09 00 02              a2 = 0x200
   269: 33 08                    a1 = 0
   271: 50 10 04 36 18           ra = 4, jump @389
      :                          @21 [@dyn 2]
   276: 95 18 08 01              a1 = sp + 0x108
   280: 95 19 30 01              a2 = sp + 0x130
   284: 33 0b 00 02              a4 = 0x200
   288: 82 17 00 01              a0 = u64 [sp + 0x100]
   292: 33 0a                    a3 = 0
   294: 0a 11                    ecalli 17 // 'historical_lookup'
   296: 01                       fallthrough
      :                          @22
   297: 51 17 ff 7f ff           jump @15 if a0 == 4294967295
      :                          @23
   302: 64 78                    a1 = a0
   304: 82 17 d8 00              a0 = u64 [sp + 0xd8]
   308: 98 77 03                 a0 = a0 >> 0x3
   311: 49 21 68 03              u64 [sp + 872] = 0
   315: 49 21 60 03              u64 [sp + 864] = 0
   319: 49 21 58 03              u64 [sp + 856] = 0
   323: 49 21 50 03              u64 [sp + 848] = 0
   327: 49 21 48 03              u64 [sp + 840] = 0
   331: 49 21 40 03              u64 [sp + 832] = 0
   335: 49 21 38 03              u64 [sp + 824] = 0
   339: 95 76 ff                 s1 = a0 + 0xffffffffffffffff
   342: 49 21 30 03              u64 [sp + 816] = 0
   346: 7b 16 88 00              u64 [sp + 0x88] = s1
   350: 51 06 4c                 jump @27 if s1 == 0
      :                          @24
   353: 95 17 30 01              a0 = sp + 0x130
   357: 7b 18 00 01              u64 [sp + 0x100] = a1
   361: 33 09                    a2 = 0
   363: 0a 14                    ecalli 20 // 'machine'
   365: 01                       fallthrough
      :                          @25
   366: 7b 17 80 00              u64 [sp + 0x80] = a0
   370: 7a 17 30 03              u32 [sp + 0x330] = a0
   374: 52 16 01 68              jump @28 if s1 != 1
      :                          @26
   378: 49 11 08                 u64 [sp + 8] = 0
   381: 49 11 10                 u64 [sp + 16] = 0
   384: 49 11 18                 u64 [sp + 24] = 0
   387: 49 11 20                 u64 [sp + 32] = 0
   390: 49 11 28                 u64 [sp + 40] = 0
   393: 49 11 30                 u64 [sp + 48] = 0
   396: 49 11 38                 u64 [sp + 56] = 0
   399: 49 11 48                 u64 [sp + 72] = 0
   402: 49 11 50                 u64 [sp + 80] = 0
   405: 49 11 58                 u64 [sp + 88] = 0
   408: 49 11 60                 u64 [sp + 96] = 0
   411: 49 11 68                 u64 [sp + 104] = 0
   414: 49 11 70                 u64 [sp + 112] = 0
   417: 49 11 40                 u64 [sp + 64] = 0
   420: 49 11 78                 u64 [sp + 120] = 0
   423: 28 25 03                 jump @71
      :                          @27
   426: 49 11 40                 u64 [sp + 64] = 0
   429: 49 11 08                 u64 [sp + 8] = 0
   432: 49 11 10                 u64 [sp + 16] = 0
   435: 49 11 18                 u64 [sp + 24] = 0
   438: 49 11 20                 u64 [sp + 32] = 0
   441: 49 11 28                 u64 [sp + 40] = 0
   444: 49 11 30                 u64 [sp + 48] = 0
   447: 49 11 38                 u64 [sp + 56] = 0
   450: 49 11 48                 u64 [sp + 72] = 0
   453: 49 11 50                 u64 [sp + 80] = 0
   456: 49 11 58                 u64 [sp + 88] = 0
   459: 49 11 60                 u64 [sp + 96] = 0
   462: 49 11 68                 u64 [sp + 104] = 0
   465: 49 11 70                 u64 [sp + 112] = 0
   468: 49 11 78                 u64 [sp + 120] = 0
   471: 49 21 80 00              u64 [sp + 128] = 0
   475: 28 f1 02                 jump @71
      :                          @28
   478: 95 17 30 01              a0 = sp + 0x130
   482: 82 18 00 01              a1 = u64 [sp + 0x100]
   486: 33 09                    a2 = 0
   488: 0a 14                    ecalli 20 // 'machine'
   490: 01                       fallthrough
      :                          @29
   491: 7b 17 78                 u64 [sp + 0x78] = a0
   494: 7a 17 34 03              u32 [sp + 0x334] = a0
   498: 52 16 02 31              jump @31 if s1 != 2
      :                          @30
   502: 49 11 08                 u64 [sp + 8] = 0
   505: 49 11 10                 u64 [sp + 16] = 0
   508: 49 11 18                 u64 [sp + 24] = 0
   511: 49 11 20                 u64 [sp + 32] = 0
   514: 49 11 28                 u64 [sp + 40] = 0
   517: 49 11 30                 u64 [sp + 48] = 0
   520: 49 11 38                 u64 [sp + 56] = 0
   523: 49 11 48                 u64 [sp + 72] = 0
   526: 49 11 50                 u64 [sp + 80] = 0
   529: 49 11 58                 u64 [sp + 88] = 0
   532: 49 11 60                 u64 [sp + 96] = 0
   535: 49 11 68                 u64 [sp + 104] = 0
   538: 49 11 40                 u64 [sp + 64] = 0
   541: 49 11 70                 u64 [sp + 112] = 0
   544: 28 ac 02                 jump @71
      :                          @31
   547: 95 17 30 01              a0 = sp + 0x130
   551: 82 18 00 01              a1 = u64 [sp + 0x100]
   555: 33 09                    a2 = 0
   557: 0a 14                    ecalli 20 // 'machine'
   559: 01                       fallthrough
      :                          @32
   560: 7b 17 70                 u64 [sp + 0x70] = a0
   563: 7a 17 38 03              u32 [sp + 0x338] = a0
   567: 52 16 03 2e              jump @34 if s1 != 3
      :                          @33
   571: 49 11 08                 u64 [sp + 8] = 0
   574: 49 11 10                 u64 [sp + 16] = 0
   577: 49 11 18                 u64 [sp + 24] = 0
   580: 49 11 20                 u64 [sp + 32] = 0
   583: 49 11 28                 u64 [sp + 40] = 0
   586: 49 11 30                 u64 [sp + 48] = 0
   589: 49 11 38                 u64 [sp + 56] = 0
   592: 49 11 48                 u64 [sp + 72] = 0
   595: 49 11 50                 u64 [sp + 80] = 0
   598: 49 11 58                 u64 [sp + 88] = 0
   601: 49 11 60                 u64 [sp + 96] = 0
   604: 49 11 40                 u64 [sp + 64] = 0
   607: 49 11 68                 u64 [sp + 104] = 0
   610: 28 6a 02                 jump @71
      :                          @34
   613: 95 17 30 01              a0 = sp + 0x130
   617: 82 18 00 01              a1 = u64 [sp + 0x100]
   621: 33 09                    a2 = 0
   623: 0a 14                    ecalli 20 // 'machine'
   625: 01                       fallthrough
      :                          @35
   626: 7b 17 68                 u64 [sp + 0x68] = a0
   629: 7a 17 3c 03              u32 [sp + 0x33c] = a0
   633: 52 16 04 2b              jump @37 if s1 != 4
      :                          @36
   637: 49 11 08                 u64 [sp + 8] = 0
   640: 49 11 10                 u64 [sp + 16] = 0
   643: 49 11 18                 u64 [sp + 24] = 0
   646: 49 11 20                 u64 [sp + 32] = 0
   649: 49 11 28                 u64 [sp + 40] = 0
   652: 49 11 30                 u64 [sp + 48] = 0
   655: 49 11 38                 u64 [sp + 56] = 0
   658: 49 11 48                 u64 [sp + 72] = 0
   661: 49 11 50                 u64 [sp + 80] = 0
   664: 49 11 58                 u64 [sp + 88] = 0
   667: 49 11 40                 u64 [sp + 64] = 0
   670: 49 11 60                 u64 [sp + 96] = 0
   673: 28 2b 02                 jump @71
      :                          @37
   676: 95 17 30 01              a0 = sp + 0x130
   680: 82 18 00 01              a1 = u64 [sp + 0x100]
   684: 33 09                    a2 = 0
   686: 0a 14                    ecalli 20 // 'machine'
   688: 01                       fallthrough
      :                          @38
   689: 7b 17 60                 u64 [sp + 0x60] = a0
   692: 7a 17 40 03              u32 [sp + 0x340] = a0
   696: 52 16 05 28              jump @40 if s1 != 5
      :                          @39
   700: 49 11 08                 u64 [sp + 8] = 0
   703: 49 11 10                 u64 [sp + 16] = 0
   706: 49 11 18                 u64 [sp + 24] = 0
   709: 49 11 20                 u64 [sp + 32] = 0
   712: 49 11 28                 u64 [sp + 40] = 0
   715: 49 11 30                 u64 [sp + 48] = 0
   718: 49 11 38                 u64 [sp + 56] = 0
   721: 49 11 48                 u64 [sp + 72] = 0
   724: 49 11 50                 u64 [sp + 80] = 0
   727: 49 11 40                 u64 [sp + 64] = 0
   730: 49 11 58                 u64 [sp + 88] = 0
   733: 28 ef 01                 jump @71
      :                          @40
   736: 95 17 30 01              a0 = sp + 0x130
   740: 82 18 00 01              a1 = u64 [sp + 0x100]
   744: 33 09                    a2 = 0
   746: 0a 14                    ecalli 20 // 'machine'
   748: 01                       fallthrough
      :                          @41
   749: 7b 17 58                 u64 [sp + 0x58] = a0
   752: 7a 17 44 03              u32 [sp + 0x344] = a0
   756: 52 16 06 25              jump @43 if s1 != 6
      :                          @42
   760: 49 11 08                 u64 [sp + 8] = 0
   763: 49 11 10                 u64 [sp + 16] = 0
   766: 49 11 18                 u64 [sp + 24] = 0
   769: 49 11 20                 u64 [sp + 32] = 0
   772: 49 11 28                 u64 [sp + 40] = 0
   775: 49 11 30                 u64 [sp + 48] = 0
   778: 49 11 38                 u64 [sp + 56] = 0
   781: 49 11 48                 u64 [sp + 72] = 0
   784: 49 11 40                 u64 [sp + 64] = 0
   787: 49 11 50                 u64 [sp + 80] = 0
   790: 28 b6 01                 jump @71
      :                          @43
   793: 95 17 30 01              a0 = sp + 0x130
   797: 82 18 00 01              a1 = u64 [sp + 0x100]
   801: 33 09                    a2 = 0
   803: 0a 14                    ecalli 20 // 'machine'
   805: 01                       fallthrough
      :                          @44
   806: 7b 17 50                 u64 [sp + 0x50] = a0
   809: 7a 17 48 03              u32 [sp + 0x348] = a0
   813: 52 16 07 22              jump @46 if s1 != 7
      :                          @45
   817: 49 11 08                 u64 [sp + 8] = 0
   820: 49 11 10                 u64 [sp + 16] = 0
   823: 49 11 18                 u64 [sp + 24] = 0
   826: 49 11 20                 u64 [sp + 32] = 0
   829: 49 11 28                 u64 [sp + 40] = 0
   832: 49 11 30                 u64 [sp + 48] = 0
   835: 49 11 38                 u64 [sp + 56] = 0
   838: 49 11 40                 u64 [sp + 64] = 0
   841: 49 11 48                 u64 [sp + 72] = 0
   844: 28 80 01                 jump @71
      :                          @46
   847: 95 17 30 01              a0 = sp + 0x130
   851: 82 18 00 01              a1 = u64 [sp + 0x100]
   855: 33 09                    a2 = 0
   857: 0a 14                    ecalli 20 // 'machine'
   859: 01                       fallthrough
      :                          @47
   860: 7b 17 48                 u64 [sp + 0x48] = a0
   863: 7a 17 4c 03              u32 [sp + 0x34c] = a0
   867: 52 16 08 1f              jump @49 if s1 != 8
      :                          @48
   871: 49 11 08                 u64 [sp + 8] = 0
   874: 49 11 10                 u64 [sp + 16] = 0
   877: 49 11 18                 u64 [sp + 24] = 0
   880: 49 11 20                 u64 [sp + 32] = 0
   883: 49 11 28                 u64 [sp + 40] = 0
   886: 49 11 30                 u64 [sp + 48] = 0
   889: 49 11 40                 u64 [sp + 64] = 0
   892: 49 11 38                 u64 [sp + 56] = 0
   895: 28 4d 01                 jump @71
      :                          @49
   898: 95 17 30 01              a0 = sp + 0x130
   902: 82 18 00 01              a1 = u64 [sp + 0x100]
   906: 33 09                    a2 = 0
   908: 0a 14                    ecalli 20 // 'machine'
   910: 01                       fallthrough
      :                          @50
   911: 7b 17 38                 u64 [sp + 0x38] = a0
   914: 7a 17 50 03              u32 [sp + 0x350] = a0
   918: 82 18 88 00              a1 = u64 [sp + 0x88]
   922: 52 18 09 1c              jump @52 if a1 != 9
      :                          @51
   926: 49 11 08                 u64 [sp + 8] = 0
   929: 49 11 10                 u64 [sp + 16] = 0
   932: 49 11 18                 u64 [sp + 24] = 0
   935: 49 11 20                 u64 [sp + 32] = 0
   938: 49 11 28                 u64 [sp + 40] = 0
   941: 49 11 40                 u64 [sp + 64] = 0
   944: 49 11 30                 u64 [sp + 48] = 0
   947: 28 19 01                 jump @71
      :                          @52
   950: 49 11 40                 u64 [sp + 64] = 0
   953: 95 17 30 01              a0 = sp + 0x130
   957: 82 18 00 01              a1 = u64 [sp + 0x100]
   961: 64 85                    s0 = a1
   963: 33 09                    a2 = 0
   965: 0a 14                    ecalli 20 // 'machine'
   967: 01                       fallthrough
      :                          @53
   968: 7b 17 30                 u64 [sp + 0x30] = a0
   971: 7a 17 54 03              u32 [sp + 0x354] = a0
   975: 82 18 88 00              a1 = u64 [sp + 0x88]
   979: 52 18 0a 19              jump @55 if a1 != 10
      :                          @54
   983: 82 17 40                 a0 = u64 [sp + 0x40]
   986: 7b 17 08                 u64 [sp + 0x8] = a0
   989: 7b 17 10                 u64 [sp + 0x10] = a0
   992: 7b 17 18                 u64 [sp + 0x18] = a0
   995: 7b 17 20                 u64 [sp + 0x20] = a0
   998: 7b 17 28                 u64 [sp + 0x28] = a0
  1001: 28 e3 00                 jump @71
      :                          @55
  1004: 49 11 40                 u64 [sp + 64] = 0
  1007: 95 17 30 01              a0 = sp + 0x130
  1011: 64 58                    a1 = s0
  1013: 33 09                    a2 = 0
  1015: 0a 14                    ecalli 20 // 'machine'
  1017: 01                       fallthrough
      :                          @56
  1018: 7b 17 28                 u64 [sp + 0x28] = a0
  1021: 7a 17 58 03              u32 [sp + 0x358] = a0
  1025: 82 18 88 00              a1 = u64 [sp + 0x88]
  1029: 52 18 0b 16              jump @58 if a1 != 11
      :                          @57
  1033: 82 17 40                 a0 = u64 [sp + 0x40]
  1036: 7b 17 08                 u64 [sp + 0x8] = a0
  1039: 7b 17 10                 u64 [sp + 0x10] = a0
  1042: 7b 17 18                 u64 [sp + 0x18] = a0
  1045: 7b 17 20                 u64 [sp + 0x20] = a0
  1048: 28 b4 00                 jump @71
      :                          @58
  1051: 49 11 40                 u64 [sp + 64] = 0
  1054: 95 17 30 01              a0 = sp + 0x130
  1058: 64 58                    a1 = s0
  1060: 33 09                    a2 = 0
  1062: 0a 14                    ecalli 20 // 'machine'
  1064: 01                       fallthrough
      :                          @59
  1065: 7b 17 20                 u64 [sp + 0x20] = a0
  1068: 7a 17 5c 03              u32 [sp + 0x35c] = a0
  1072: 82 18 88 00              a1 = u64 [sp + 0x88]
  1076: 52 18 0c 13              jump @61 if a1 != 12
      :                          @60
  1080: 82 17 40                 a0 = u64 [sp + 0x40]
  1083: 7b 17 08                 u64 [sp + 0x8] = a0
  1086: 7b 17 10                 u64 [sp + 0x10] = a0
  1089: 7b 17 18                 u64 [sp + 0x18] = a0
  1092: 28 88 00                 jump @71
      :                          @61
  1095: 49 11 40                 u64 [sp + 64] = 0
  1098: 95 17 30 01              a0 = sp + 0x130
  1102: 64 58                    a1 = s0
  1104: 33 09                    a2 = 0
  1106: 0a 14                    ecalli 20 // 'machine'
  1108: 01                       fallthrough
      :                          @62
  1109: 7b 17 18                 u64 [sp + 0x18] = a0
  1112: 7a 17 60 03              u32 [sp + 0x360] = a0
  1116: 82 18 88 00              a1 = u64 [sp + 0x88]
  1120: 52 18 0d 0f              jump @64 if a1 != 13
      :                          @63
  1124: 82 17 40                 a0 = u64 [sp + 0x40]
  1127: 7b 17 08                 u64 [sp + 0x8] = a0
  1130: 7b 17 10                 u64 [sp + 0x10] = a0
  1133: 28 5f                    jump @71
      :                          @64
  1135: 49 11 40                 u64 [sp + 64] = 0
  1138: 95 17 30 01              a0 = sp + 0x130
  1142: 64 58                    a1 = s0
  1144: 33 09                    a2 = 0
  1146: 0a 14                    ecalli 20 // 'machine'
  1148: 01                       fallthrough
      :                          @65
  1149: 7b 17 10                 u64 [sp + 0x10] = a0
  1152: 7a 17 64 03              u32 [sp + 0x364] = a0
  1156: 82 18 88 00              a1 = u64 [sp + 0x88]
  1160: 52 18 0e 0c              jump @67 if a1 != 14
      :                          @66
  1164: 82 17 40                 a0 = u64 [sp + 0x40]
  1167: 7b 17 08                 u64 [sp + 0x8] = a0
  1170: 28 3a                    jump @71
      :                          @67
  1172: 49 11 40                 u64 [sp + 64] = 0
  1175: 95 17 30 01              a0 = sp + 0x130
  1179: 64 58                    a1 = s0
  1181: 33 09                    a2 = 0
  1183: 0a 14                    ecalli 20 // 'machine'
  1185: 01                       fallthrough
      :                          @68
  1186: 7b 17 08                 u64 [sp + 0x8] = a0
  1189: 7a 17 68 03              u32 [sp + 0x368] = a0
  1193: 82 18 88 00              a1 = u64 [sp + 0x88]
  1197: 51 18 0f 1f              jump @71 if a1 == 15
      :                          @69
  1201: 95 17 30 01              a0 = sp + 0x130
  1205: 64 58                    a1 = s0
  1207: 33 09                    a2 = 0
  1209: 0a 14                    ecalli 20 // 'machine'
  1211: 01                       fallthrough
      :                          @70
  1212: 7b 17 40                 u64 [sp + 0x40] = a0
  1215: 7a 17 6c 03              u32 [sp + 0x36c] = a0
  1219: 82 18 88 00              a1 = u64 [sp + 0x88]
  1223: 52 18 10 e8 05           jump @169 if a1 != 16
      :                          @71
  1228: 33 05 08 10              s0 = 0x1008
  1232: 95 17 70 03              a0 = sp + 0x370
  1236: 33 08                    a1 = 0
  1238: 33 09 08 10              a2 = 0x1008
  1242: 50 10 06 6b 14           ra = 6, jump @389
      :                          @72 [@dyn 3]
  1247: 95 17 70 03              a0 = sp + 0x370
  1251: 33 0a 06                 a3 = 0x6
  1254: 33 06 ff                 s1 = 0xffffffffffffffff
  1257: 33 08                    a1 = 0
  1259: 7b 15 f8 00              u64 [sp + 0xf8] = s0
  1263: 64 59                    a2 = s0
  1265: 33 0b                    a4 = 0
  1267: 33 0c                    a5 = 0
  1269: 0a 12                    ecalli 18 // 'fetch'
  1271: 01                       fallthrough
      :                          @73
  1272: 51 17 ff 84 00           jump @83 if a0 == 4294967295
      :                          @74
  1277: 33 06 01                 s1 = 0x1
  1280: 33 07 47 04 01           a0 = 0x10447
  1285: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  1289: 33 07 5e 04 01           a0 = 0x1045e
  1294: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  1298: 28 2d                    jump @78
      :                          @75
  1300: 33 0b 17                 a4 = 0x17
  1303: 33 07                    a0 = 0
  1305: 33 08                    a1 = 0
  1307: 33 09                    a2 = 0
  1309: 82 1a f0 00              a3 = u64 [sp + 0xf0]
  1313: 0a 64                    ecalli 100 // 'log'
  1315: 01                       fallthrough
      :                          @76
  1316: 95 17 70 03              a0 = sp + 0x370
  1320: 33 0a 06                 a3 = 0x6
  1323: 33 08                    a1 = 0
  1325: 82 19 f8 00              a2 = u64 [sp + 0xf8]
  1329: 64 6b                    a4 = s1
  1331: 33 0c                    a5 = 0
  1333: 0a 12                    ecalli 18 // 'fetch'
  1335: 01                       fallthrough
      :                          @77
  1336: 95 66 01                 s1 = s1 + 0x1
  1339: 51 17 ff 41              jump @83 if a0 == 4294967295
      :                          @78
  1343: 80 17 70 03              a0 = u32 [sp + 0x370]
  1347: 80 15 74 03              s0 = u32 [sp + 0x374]
  1351: 33 09 01                 a2 = 0x1
  1354: 7b 17 00 01              u64 [sp + 0x100] = a0
  1358: 64 58                    a1 = s0
  1360: 0a 17                    ecalli 23 // 'zero'
  1362: 01                       fallthrough
      :                          @79
  1363: 52 07 c1                 jump @75 if a0 != 0
      :                          @80
  1366: 97 59 0c                 a2 = s0 << 0xc
  1369: 33 0a 00 10              a3 = 0x1000
  1373: 82 17 00 01              a0 = u64 [sp + 0x100]
  1377: 95 18 78 03              a1 = sp + 0x378
  1381: 0a 16                    ecalli 22 // 'poke'
  1383: 01                       fallthrough
      :                          @81
  1384: 51 07 bc                 jump @76 if a0 == 0
      :                          @82
  1387: 33 0b 17                 a4 = 0x17
  1390: 33 07                    a0 = 0
  1392: 33 08                    a1 = 0
  1394: 33 09                    a2 = 0
  1396: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  1400: 0a 64                    ecalli 100 // 'log'
  1402: 28 aa                    jump @76
      :                          @83
  1404: 82 18 88 00              a1 = u64 [sp + 0x88]
  1408: 51 08 0a 05              jump @164 if a1 == 0
      :                          @84
  1412: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  1416: 82 19 e0 00              a2 = u64 [sp + 0xe0]
  1420: c8 97 07                 a0 = a0 + a2
  1423: 51 07 07 05              jump @167 if a0 == 0
      :                          @85
  1427: 95 75 04                 s0 = a0 + 0x4
  1430: 33 06 08 10              s1 = 0x1008
  1434: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  1444: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1448: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  1458: 7b 17 98 00              u64 [sp + 0x98] = a0
  1462: 33 07 47 04 01           a0 = 0x10447
  1467: 7b 17 90 00              u64 [sp + 0x90] = a0
  1471: 33 07 5e 04 01           a0 = 0x1045e
  1476: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1480: 95 17 30 03              a0 = sp + 0x330
  1484: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  1488: 33 07 08                 a0 = 0x8
  1491: 7b 16 e0 00              u64 [sp + 0xe0] = s1
  1495: 28 43                    jump @89
      :                          @86
  1497: 33 0b 17                 a4 = 0x17
  1500: 33 07                    a0 = 0
  1502: 33 08                    a1 = 0
  1504: 33 09                    a2 = 0
  1506: 82 1a c8 00              a3 = u64 [sp + 0xc8]
  1510: 0a 64                    ecalli 100 // 'log'
  1512: 82 15 d0 00              s0 = u64 [sp + 0xd0]
  1516: 01                       fallthrough
      :                          @87
  1517: 95 17 88 33              a0 = sp + 0x3388
  1521: 82 16 e0 00              s1 = u64 [sp + 0xe0]
  1525: 64 68                    a1 = s1
  1527: 0a 13                    ecalli 19 // 'export'
  1529: 01                       fallthrough
      :                          @88
  1530: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  1534: 95 77 04                 a0 = a0 + 0x4
  1537: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  1541: 95 55 08                 s0 = s0 + 0x8
  1544: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  1548: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  1551: 82 17 00 01              a0 = u64 [sp + 0x100]
  1555: 95 77 08                 a0 = a0 + 0x8
  1558: 51 08 50 03              jump @132 if a1 == 0
      :                          @89
  1562: 7b 18 f0 00              u64 [sp + 0xf0] = a1
  1566: 7b 17 00 01              u64 [sp + 0x100] = a0
  1570: 95 17 78 13              a0 = sp + 0x1378
  1574: 33 08                    a1 = 0
  1576: 64 69                    a2 = s1
  1578: 50 10 08 1b 13           ra = 8, jump @389
      :                          @90 [@dyn 4]
  1583: 95 17 80 23              a0 = sp + 0x2380
  1587: 33 08                    a1 = 0
  1589: 64 69                    a2 = s1
  1591: 50 10 0a 0e 13           ra = 10, jump @389
      :                          @91 [@dyn 5]
  1596: 95 17 88 33              a0 = sp + 0x3388
  1600: 33 08                    a1 = 0
  1602: 64 69                    a2 = s1
  1604: 50 10 0c 01 13           ra = 12, jump @389
      :                          @92 [@dyn 6]
  1609: 82 17 00 01              a0 = u64 [sp + 0x100]
  1613: 95 18 90 43              a1 = sp + 0x4390
  1617: 49 08                    u64 [a1 + 0] = 0
  1619: 49 18 08                 u64 [a1 + 8] = 0
  1622: 51 27 88 00 64 04        jump @170 if a0 == 136
      :                          @93
  1628: 82 18 d8 00              a1 = u64 [sp + 0xd8]
  1632: ac 78 34 04              jump @165 if a1 <u a0
      :                          @94
  1636: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1639: 7c 58                    a1 = u8 [s0]
  1641: 7c 59 02                 a2 = u8 [s0 + 0x2]
  1644: 7d 5a 03                 a3 = i8 [s0 + 0x3]
  1647: 97 77 08                 a0 = a0 << 0x8
  1650: d4 87 07                 a0 = a0 | a1
  1653: 97 99 10                 a2 = a2 << 0x10
  1656: 97 aa 18                 a3 = a3 << 0x18
  1659: d4 a9 09                 a2 = a2 | a3
  1662: d4 97 07                 a0 = a0 | a2
  1665: 52 17 01 6c ff           jump @87 if a0 != 1
      :                          @95
  1670: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  1674: 80 79                    a2 = u32 [a0]
  1676: 83 92                    i32 t0 = a2 + 0
  1678: 7c 5b fc                 a4 = u8 [s0 + 0xfffffffffffffffc]
  1681: 7c 58 fd                 a1 = u8 [s0 + 0xfffffffffffffffd]
  1684: 7c 56 fe                 s1 = u8 [s0 + 0xfffffffffffffffe]
  1687: 7c 5c ff                 a5 = u8 [s0 + 0xffffffffffffffff]
  1690: 95 1a 90 43              a3 = sp + 0x4390
  1694: 49 1a 10 00 00 01        u64 [a3 + 16] = 0x10000
  1700: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  1704: 7b a7 18                 u64 [a3 + 0x18] = a0
  1707: 82 17 98 00              a0 = u64 [sp + 0x98]
  1711: 7b a7 20                 u64 [a3 + 0x20] = a0
  1714: 95 17 b8 43              a0 = sp + 0x43b8
  1718: 49 17 20                 u64 [a0 + 32] = 0
  1721: 49 17 18                 u64 [a0 + 24] = 0
  1724: 49 17 10                 u64 [a0 + 16] = 0
  1727: 49 17 08                 u64 [a0 + 8] = 0
  1730: 49 07                    u64 [a0 + 0] = 0
  1732: 49 1a 50 02              u64 [a3 + 80] = 0x2
  1736: 95 17 e8 43              a0 = sp + 0x43e8
  1740: 49 17 20                 u64 [a0 + 32] = 0
  1743: 49 17 18                 u64 [a0 + 24] = 0
  1746: 49 17 10                 u64 [a0 + 16] = 0
  1749: 49 17 08                 u64 [a0 + 8] = 0
  1752: 49 07                    u64 [a0 + 0] = 0
  1754: 7b 19 e8 00              u64 [sp + 0xe8] = a2
  1758: 64 97                    a0 = a2
  1760: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  1764: 51 02 4b 01              jump @115 if t0 == 0
      :                          @96
  1768: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  1772: 7b 1c b0 00              u64 [sp + 0xb0] = a5
  1776: 7b 16 b8 00              u64 [sp + 0xb8] = s1
  1780: 7b 1b c0 00              u64 [sp + 0xc0] = a4
  1784: 52 12 01 63              jump @103 if t0 != 1
      :                          @97
  1788: 33 09 00 10              a2 = 0x1000
  1792: 95 16 18 44              s1 = sp + 0x4418
  1796: 64 67                    a0 = s1
  1798: 33 08                    a1 = 0
  1800: 50 10 0e 3d 12           ra = 14, jump @389
      :                          @98 [@dyn 7]
  1805: 95 18 90 43              a1 = sp + 0x4390
  1809: 48 28 80 00              u32 [a1 + 128] = 0
  1813: 48 28 84 00 10           u32 [a1 + 132] = 0x10
  1818: 33 09 00 00 01           a2 = 0x10000
  1823: 33 0a 00 10              a3 = 0x1000
  1827: 33 07                    a0 = 0
  1829: 64 68                    a1 = s1
  1831: 0a 15                    ecalli 21 // 'peek'
  1833: 01                       fallthrough
      :                          @99
  1834: 51 07 14                 jump @101 if a0 == 0
      :                          @100
  1837: 33 0a 75 04 01           a3 = 0x10475
  1842: 33 0b 15                 a4 = 0x15
  1845: 33 07                    a0 = 0
  1847: 33 08                    a1 = 0
  1849: 33 09                    a2 = 0
  1851: 0a 64                    ecalli 100 // 'log'
  1853: 01                       fallthrough
      :                          @101
  1854: 95 17 78 13              a0 = sp + 0x1378
  1858: 95 18 10 44              a1 = sp + 0x4410
  1862: 82 19 e0 00              a2 = u64 [sp + 0xe0]
  1866: 50 10 10 49 11           ra = 16, jump @371
      :                          @102 [@dyn 8]
  1871: 33 07 01                 a0 = 0x1
  1874: 95 18 88 23              a1 = sp + 0x2388
  1878: 7a 87                    u32 [a1] = a0
  1880: 28 c6 00                 jump @114
      :                          @103
  1883: 95 15 90 43              s0 = sp + 0x4390
  1887: 82 16 e8 00              s1 = u64 [sp + 0xe8]
  1891: 83 66 fe                 i32 s1 = s1 + 0xfffffffffffffffe
  1894: 33 09 00 10              a2 = 0x1000
  1898: 95 17 18 44              a0 = sp + 0x4418
  1902: 33 08                    a1 = 0
  1904: 50 10 12 d5 11           ra = 18, jump @389
      :                          @104 [@dyn 9]
  1909: 7a 56 80 00              u32 [s0 + 0x80] = s1
  1913: 48 25 84 00 10           u32 [s0 + 132] = 0x10
  1918: 97 67 20                 a0 = s1 << 0x20
  1921: 98 77 20                 a0 = a0 >> 0x20
  1924: 33 09 00 00 01           a2 = 0x10000
  1929: 33 0a 00 10              a3 = 0x1000
  1933: 95 18 18 44              a1 = sp + 0x4418
  1937: 0a 15                    ecalli 21 // 'peek'
  1939: 01                       fallthrough
      :                          @105
  1940: 51 07 14                 jump @107 if a0 == 0
      :                          @106
  1943: 33 0a 75 04 01           a3 = 0x10475
  1948: 33 0b 15                 a4 = 0x15
  1951: 33 07                    a0 = 0
  1953: 33 08                    a1 = 0
  1955: 33 09                    a2 = 0
  1957: 0a 64                    ecalli 100 // 'log'
  1959: 01                       fallthrough
      :                          @107
  1960: 95 17 78 13              a0 = sp + 0x1378
  1964: 95 18 10 44              a1 = sp + 0x4410
  1968: 82 19 e0 00              a2 = u64 [sp + 0xe0]
  1972: 50 10 14 df 10           ra = 20, jump @371
      :                          @108 [@dyn 10]
  1977: 82 16 e8 00              s1 = u64 [sp + 0xe8]
  1981: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
  1984: 33 09 00 10              a2 = 0x1000
  1988: 95 15 18 44              s0 = sp + 0x4418
  1992: 64 57                    a0 = s0
  1994: 33 08                    a1 = 0
  1996: 50 10 16 79 11           ra = 22, jump @389
      :                          @109 [@dyn 11]
  2001: 95 17 90 43              a0 = sp + 0x4390
  2005: 7a 76 80 00              u32 [a0 + 0x80] = s1
  2009: 48 27 84 00 10           u32 [a0 + 132] = 0x10
  2014: 97 67 20                 a0 = s1 << 0x20
  2017: 98 77 20                 a0 = a0 >> 0x20
  2020: 33 09 00 00 01           a2 = 0x10000
  2025: 33 0a 00 10              a3 = 0x1000
  2029: 64 58                    a1 = s0
  2031: 0a 15                    ecalli 21 // 'peek'
  2033: 01                       fallthrough
      :                          @110
  2034: 51 07 14                 jump @112 if a0 == 0
      :                          @111
  2037: 33 0a 75 04 01           a3 = 0x10475
  2042: 33 0b 15                 a4 = 0x15
  2045: 33 07                    a0 = 0
  2047: 33 08                    a1 = 0
  2049: 33 09                    a2 = 0
  2051: 0a 64                    ecalli 100 // 'log'
  2053: 01                       fallthrough
      :                          @112
  2054: 95 17 80 23              a0 = sp + 0x2380
  2058: 95 18 10 44              a1 = sp + 0x4410
  2062: 82 19 e0 00              a2 = u64 [sp + 0xe0]
  2066: 50 10 18 81 10           ra = 24, jump @371
      :                          @113 [@dyn 12]
  2071: 95 17 88 23              a0 = sp + 0x2388
  2075: 81 77                    a0 = i32 [a0]
  2077: 01                       fallthrough
      :                          @114
  2078: 82 1b c0 00              a4 = u64 [sp + 0xc0]
  2082: 82 16 b8 00              s1 = u64 [sp + 0xb8]
  2086: 82 1c b0 00              a5 = u64 [sp + 0xb0]
  2090: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  2094: 01                       fallthrough
      :                          @115
  2095: 97 85 08                 s0 = a1 << 0x8
  2098: d4 b5 08                 a1 = s0 | a4
  2101: 97 66 10                 s1 = s1 << 0x10
  2104: 97 c9 18                 a2 = a5 << 0x18
  2107: d4 69 09                 a2 = a2 | s1
  2110: 95 1a 90 43              a3 = sp + 0x4390
  2114: d4 98 08                 a1 = a1 | a2
  2117: 95 1b 78 13              a4 = sp + 0x1378
  2121: 82 15 e8 00              s0 = u64 [sp + 0xe8]
  2125: 7a b5                    u32 [a4] = s0
  2127: 81 b9 08                 a2 = i32 [a4 + 0x8]
  2130: 48 1b 04 10              u32 [a4 + 4] = 0x10
  2134: 95 1b 88 23              a4 = sp + 0x2388
  2138: 7a b5 f8                 u32 [a4 + 0xfffffffffffffff8] = s0
  2141: 48 1b fc 11              u32 [a4 + 4294967292] = 0x11
  2145: 7a a9 0c                 u32 [a3 + 0xc] = a2
  2148: 7a a7 08                 u32 [a3 + 0x8] = a0
  2151: 7a a8                    u32 [a3] = a1
  2153: 33 08 10                 a1 = 0x10
  2156: 33 09 01                 a2 = 0x1
  2159: 64 57                    a0 = s0
  2161: 0a 17                    ecalli 23 // 'zero'
  2163: 01                       fallthrough
      :                          @116
  2164: 51 07 14                 jump @118 if a0 == 0
      :                          @117
  2167: 33 0b 17                 a4 = 0x17
  2170: 33 07                    a0 = 0
  2172: 33 08                    a1 = 0
  2174: 33 09                    a2 = 0
  2176: 82 1a c8 00              a3 = u64 [sp + 0xc8]
  2180: 0a 64                    ecalli 100 // 'log'
  2182: 28 27                    jump @121
      :                          @118
  2184: 33 09 00 00 01           a2 = 0x10000
  2189: 33 0a 00 10              a3 = 0x1000
  2193: 64 57                    a0 = s0
  2195: 95 18 80 13              a1 = sp + 0x1380
  2199: 0a 16                    ecalli 22 // 'poke'
  2201: 01                       fallthrough
      :                          @119
  2202: 51 07 13                 jump @121 if a0 == 0
      :                          @120
  2205: 33 0b 17                 a4 = 0x17
  2208: 33 07                    a0 = 0
  2210: 33 08                    a1 = 0
  2212: 33 09                    a2 = 0
  2214: 82 1a 90 00              a3 = u64 [sp + 0x90]
  2218: 0a 64                    ecalli 100 // 'log'
  2220: 01                       fallthrough
      :                          @121
  2221: 95 17 88 23              a0 = sp + 0x2388
  2225: 80 76 f8                 s1 = u32 [a0 + 0xfffffffffffffff8]
  2228: 80 75 fc                 s0 = u32 [a0 + 0xfffffffffffffffc]
  2231: 33 09 01                 a2 = 0x1
  2234: 64 67                    a0 = s1
  2236: 64 58                    a1 = s0
  2238: 0a 17                    ecalli 23 // 'zero'
  2240: 01                       fallthrough
      :                          @122
  2241: 51 07 14                 jump @124 if a0 == 0
      :                          @123
  2244: 33 0b 17                 a4 = 0x17
  2247: 33 07                    a0 = 0
  2249: 33 08                    a1 = 0
  2251: 33 09                    a2 = 0
  2253: 82 1a c8 00              a3 = u64 [sp + 0xc8]
  2257: 0a 64                    ecalli 100 // 'log'
  2259: 28 25                    jump @127
      :                          @124
  2261: 97 59 0c                 a2 = s0 << 0xc
  2264: 33 0a 00 10              a3 = 0x1000
  2268: 64 67                    a0 = s1
  2270: 95 18 88 23              a1 = sp + 0x2388
  2274: 0a 16                    ecalli 22 // 'poke'
  2276: 01                       fallthrough
      :                          @125
  2277: 51 07 13                 jump @127 if a0 == 0
      :                          @126
  2280: 33 0b 17                 a4 = 0x17
  2283: 33 07                    a0 = 0
  2285: 33 08                    a1 = 0
  2287: 33 09                    a2 = 0
  2289: 82 1a 90 00              a3 = u64 [sp + 0x90]
  2293: 0a 64                    ecalli 100 // 'log'
  2295: 01                       fallthrough
      :                          @127
  2296: 95 18 a0 43              a1 = sp + 0x43a0
  2300: 82 16 e8 00              s1 = u64 [sp + 0xe8]
  2304: 64 67                    a0 = s1
  2306: 0a 19                    ecalli 25 // 'invoke'
  2308: 95 17 90 43              a0 = sp + 0x4390
  2312: 82 79 50                 a2 = u64 [a0 + 0x50]
  2315: 33 0a 00 10              a3 = 0x1000
  2319: 64 67                    a0 = s1
  2321: 95 15 90 33              s0 = sp + 0x3390
  2325: 64 58                    a1 = s0
  2327: 0a 15                    ecalli 21 // 'peek'
  2329: 95 18 88 33              a1 = sp + 0x3388
  2333: 81 87 08                 a0 = i32 [a1 + 0x8]
  2336: 7a 86                    u32 [a1] = s1
  2338: 48 18 04 10              u32 [a1 + 4] = 0x10
  2342: 95 18 90 43              a1 = sp + 0x4390
  2346: 7a 87 04                 u32 [a1 + 0x4] = a0
  2349: 33 08 10                 a1 = 0x10
  2352: 33 09 01                 a2 = 0x1
  2355: 64 67                    a0 = s1
  2357: 0a 17                    ecalli 23 // 'zero'
  2359: 01                       fallthrough
      :                          @128
  2360: 52 07 a1 fc              jump @86 if a0 != 0
      :                          @129
  2364: 33 09 00 00 01           a2 = 0x10000
  2369: 33 0a 00 10              a3 = 0x1000
  2373: 64 67                    a0 = s1
  2375: 64 58                    a1 = s0
  2377: 0a 16                    ecalli 22 // 'poke'
  2379: 01                       fallthrough
      :                          @130
  2380: 82 15 d0 00              s0 = u64 [sp + 0xd0]
  2384: 51 07 9d fc              jump @87 if a0 == 0
      :                          @131
  2388: 33 0b 17                 a4 = 0x17
  2391: 33 07                    a0 = 0
  2393: 33 08                    a1 = 0
  2395: 33 09                    a2 = 0
  2397: 82 1a 90 00              a3 = u64 [sp + 0x90]
  2401: 0a 64                    ecalli 100 // 'log'
  2403: 28 8a fc                 jump @87
      :                          @132
  2406: 82 17 80 00              a0 = u64 [sp + 0x80]
  2410: 97 77 20                 a0 = a0 << 0x20
  2413: 98 77 20                 a0 = a0 >> 0x20
  2416: 0a 1a                    ecalli 26 // 'expunge'
  2418: 01                       fallthrough
      :                          @133
  2419: 82 18 88 00              a1 = u64 [sp + 0x88]
  2423: 51 18 01 13 01           jump @164 if a1 == 1
      :                          @134
  2428: 14 05 ff ff ff ff 00 00 00 00 s0 = 0xffffffff
  2438: 82 17 78                 a0 = u64 [sp + 0x78]
  2441: d2 57 07                 a0 = a0 & s0
  2444: 0a 1a                    ecalli 26 // 'expunge'
  2446: 01                       fallthrough
      :                          @135
  2447: 82 18 88 00              a1 = u64 [sp + 0x88]
  2451: 51 18 02 f7 00           jump @164 if a1 == 2
      :                          @136
  2456: 82 17 70                 a0 = u64 [sp + 0x70]
  2459: d2 57 07                 a0 = a0 & s0
  2462: 0a 1a                    ecalli 26 // 'expunge'
  2464: 01                       fallthrough
      :                          @137
  2465: 82 18 88 00              a1 = u64 [sp + 0x88]
  2469: 51 18 03 e5 00           jump @164 if a1 == 3
      :                          @138
  2474: 82 17 68                 a0 = u64 [sp + 0x68]
  2477: d2 57 07                 a0 = a0 & s0
  2480: 0a 1a                    ecalli 26 // 'expunge'
  2482: 01                       fallthrough
      :                          @139
  2483: 82 18 88 00              a1 = u64 [sp + 0x88]
  2487: 51 18 04 d3 00           jump @164 if a1 == 4
      :                          @140
  2492: 82 17 60                 a0 = u64 [sp + 0x60]
  2495: d2 57 07                 a0 = a0 & s0
  2498: 0a 1a                    ecalli 26 // 'expunge'
  2500: 01                       fallthrough
      :                          @141
  2501: 82 18 88 00              a1 = u64 [sp + 0x88]
  2505: 51 18 05 c1 00           jump @164 if a1 == 5
      :                          @142
  2510: 82 17 58                 a0 = u64 [sp + 0x58]
  2513: d2 57 07                 a0 = a0 & s0
  2516: 0a 1a                    ecalli 26 // 'expunge'
  2518: 01                       fallthrough
      :                          @143
  2519: 82 18 88 00              a1 = u64 [sp + 0x88]
  2523: 51 18 06 af 00           jump @164 if a1 == 6
      :                          @144
  2528: 82 17 50                 a0 = u64 [sp + 0x50]
  2531: d2 57 07                 a0 = a0 & s0
  2534: 0a 1a                    ecalli 26 // 'expunge'
  2536: 01                       fallthrough
      :                          @145
  2537: 82 18 88 00              a1 = u64 [sp + 0x88]
  2541: 51 18 07 9d 00           jump @164 if a1 == 7
      :                          @146
  2546: 82 17 48                 a0 = u64 [sp + 0x48]
  2549: d2 57 07                 a0 = a0 & s0
  2552: 0a 1a                    ecalli 26 // 'expunge'
  2554: 01                       fallthrough
      :                          @147
  2555: 82 18 88 00              a1 = u64 [sp + 0x88]
  2559: 51 18 08 8b 00           jump @164 if a1 == 8
      :                          @148
  2564: 82 17 38                 a0 = u64 [sp + 0x38]
  2567: d2 57 07                 a0 = a0 & s0
  2570: 0a 1a                    ecalli 26 // 'expunge'
  2572: 01                       fallthrough
      :                          @149
  2573: 82 18 88 00              a1 = u64 [sp + 0x88]
  2577: 51 18 09 79              jump @164 if a1 == 9
      :                          @150
  2581: 82 17 30                 a0 = u64 [sp + 0x30]
  2584: d2 57 07                 a0 = a0 & s0
  2587: 0a 1a                    ecalli 26 // 'expunge'
  2589: 01                       fallthrough
      :                          @151
  2590: 82 18 88 00              a1 = u64 [sp + 0x88]
  2594: 51 18 0a 68              jump @164 if a1 == 10
      :                          @152
  2598: 82 17 28                 a0 = u64 [sp + 0x28]
  2601: d2 57 07                 a0 = a0 & s0
  2604: 0a 1a                    ecalli 26 // 'expunge'
  2606: 01                       fallthrough
      :                          @153
  2607: 82 18 88 00              a1 = u64 [sp + 0x88]
  2611: 51 18 0b 57              jump @164 if a1 == 11
      :                          @154
  2615: 82 17 20                 a0 = u64 [sp + 0x20]
  2618: d2 57 07                 a0 = a0 & s0
  2621: 0a 1a                    ecalli 26 // 'expunge'
  2623: 01                       fallthrough
      :                          @155
  2624: 82 18 88 00              a1 = u64 [sp + 0x88]
  2628: 51 18 0c 46              jump @164 if a1 == 12
      :                          @156
  2632: 82 17 18                 a0 = u64 [sp + 0x18]
  2635: d2 57 07                 a0 = a0 & s0
  2638: 0a 1a                    ecalli 26 // 'expunge'
  2640: 01                       fallthrough
      :                          @157
  2641: 82 18 88 00              a1 = u64 [sp + 0x88]
  2645: 51 18 0d 35              jump @164 if a1 == 13
      :                          @158
  2649: 82 17 10                 a0 = u64 [sp + 0x10]
  2652: d2 57 07                 a0 = a0 & s0
  2655: 0a 1a                    ecalli 26 // 'expunge'
  2657: 01                       fallthrough
      :                          @159
  2658: 82 18 88 00              a1 = u64 [sp + 0x88]
  2662: 51 18 0e 24              jump @164 if a1 == 14
      :                          @160
  2666: 82 17 08                 a0 = u64 [sp + 0x8]
  2669: d2 57 07                 a0 = a0 & s0
  2672: 0a 1a                    ecalli 26 // 'expunge'
  2674: 01                       fallthrough
      :                          @161
  2675: 82 18 88 00              a1 = u64 [sp + 0x88]
  2679: 51 18 0f 13              jump @164 if a1 == 15
      :                          @162
  2683: 82 17 40                 a0 = u64 [sp + 0x40]
  2686: d2 57 07                 a0 = a0 & s0
  2689: 64 85                    s0 = a1
  2691: 0a 1a                    ecalli 26 // 'expunge'
  2693: 01                       fallthrough
      :                          @163
  2694: 52 15 10 34              jump @170 if s0 != 16
      :                          @164
  2698: 95 1a 90 43              a3 = sp + 0x4390
  2702: 33 08 10                 a1 = 0x10
  2705: 28 23 f6                 jump @17
      :                          @165
  2708: 00                       trap
      :                          @166
  2709: 00                       trap
      :                          @167
  2710: 33 09 08 10              a2 = 0x1008
  2714: 95 17 88 33              a0 = sp + 0x3388
  2718: 33 08                    a1 = 0
  2720: 50 10 1a a5 0e           ra = 26, jump @389
      :                          @168 [@dyn 13]
  2725: 95 17 90 43              a0 = sp + 0x4390
  2729: 49 07                    u64 [a0 + 0] = 0
  2731: 49 17 08                 u64 [a0 + 8] = 0
  2734: 00                       trap
      :                          @169
  2735: 95 17 30 01              a0 = sp + 0x130
  2739: 64 58                    a1 = s0
  2741: 33 09                    a2 = 0
  2743: 0a 14                    ecalli 20 // 'machine'
  2745: 00                       trap
      :                          @170
  2746: 00                       trap
      :                          @171 [export #1: 'accumulate']
  2747: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  2751: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  2755: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  2759: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  2763: 95 11 68 fc              sp = sp + 0xfffffffffffffc68
  2767: 33 09 08                 a2 = 0x8
  2770: ac 98 02 01              jump @201 if a1 <u a2
      :                          @172
  2774: 51 07 d7 09              jump @280 if a0 == 0
      :                          @173
  2778: 95 79 04                 a2 = a0 + 0x4
  2781: 51 09 d1 09              jump @281 if a2 == 0
      :                          @174
  2785: 7c 79 04                 a2 = u8 [a0 + 0x4]
  2788: 7b 19 20                 u64 [sp + 0x20] = a2
  2791: 7c 79 05                 a2 = u8 [a0 + 0x5]
  2794: 7b 19 08                 u64 [sp + 0x8] = a2
  2797: 7c 79 06                 a2 = u8 [a0 + 0x6]
  2800: 7b 19 18                 u64 [sp + 0x18] = a2
  2803: 7c 79 07                 a2 = u8 [a0 + 0x7]
  2806: 7b 19 10                 u64 [sp + 0x10] = a2
  2809: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  2812: 95 75 08                 s0 = a0 + 0x8
  2815: 51 0a 45                 jump @184 if a3 == 0
      :                          @175
  2818: 7d 58                    a1 = i8 [s0]
  2820: 33 06 01                 s1 = 0x1
  2823: 59 08 40                 jump @185 if a1 >=s 0
      :                          @176
  2826: 84 89 ff 00              a2 = a1 & 0xff
  2830: 33 06 02                 s1 = 0x2
  2833: 53 29 c0 00 2d           jump @182 if a2 <u 192
      :                          @177
  2838: 33 06 03                 s1 = 0x3
  2841: 53 29 e0 00 25           jump @182 if a2 <u 224
      :                          @178
  2846: 33 06 04                 s1 = 0x4
  2849: 53 29 f0 00 1d           jump @182 if a2 <u 240
      :                          @179
  2854: 33 06 05                 s1 = 0x5
  2857: 53 29 f8 00 15           jump @182 if a2 <u 248
      :                          @180
  2862: 33 06 06                 s1 = 0x6
  2865: 53 29 fc 00 0d           jump @182 if a2 <u 252
      :                          @181
  2870: 88 98 fe 00              a1 = a2 <u 0xfe
  2874: 9a 86 08                 s1 = 0x8 - a1
  2877: 01                       fallthrough
      :                          @182
  2878: ae 6a 09                 jump @185 if a3 >=u s1
      :                          @183
  2881: 28 93 00                 jump @201
      :                          @184
  2884: 33 06                    s1 = 0
  2886: 01                       fallthrough
      :                          @185
  2887: 7b 16 28                 u64 [sp + 0x28] = s1
  2890: 64 57                    a0 = s0
  2892: 64 68                    a1 = s1
  2894: 64 a6                    s1 = a3
  2896: 50 10 1c 4e 16           ra = 28, jump @559
      :                          @186 [@dyn 14]
  2901: 82 1a 28                 a3 = u64 [sp + 0x28]
  2904: 51 07 7c                 jump @201 if a0 == 0
      :                          @187
  2907: e4 a6 07                 a0 = maxu(s1, a3)
  2910: c9 a7 07                 a0 = a0 - a3
  2913: 53 17 60 73              jump @201 if a0 <u 96
      :                          @188
  2917: c8 5a 08                 a1 = a3 + s0
  2920: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  2923: 95 87 60                 a0 = a1 + 0x60
  2926: 7b 17 28                 u64 [sp + 0x28] = a0
  2929: 51 06 4c                 jump @199 if s1 == 0
      :                          @189
  2932: 7d 78                    a1 = i8 [a0]
  2934: 33 05 01                 s0 = 0x1
  2937: 59 08 37                 jump @196 if a1 >=s 0
      :                          @190
  2940: 84 89 ff 00              a2 = a1 & 0xff
  2944: 33 05 02                 s0 = 0x2
  2947: 53 29 c0 00 2d           jump @196 if a2 <u 192
      :                          @191
  2952: 33 05 03                 s0 = 0x3
  2955: 53 29 e0 00 25           jump @196 if a2 <u 224
      :                          @192
  2960: 33 05 04                 s0 = 0x4
  2963: 53 29 f0 00 1d           jump @196 if a2 <u 240
      :                          @193
  2968: 33 05 05                 s0 = 0x5
  2971: 53 29 f8 00 15           jump @196 if a2 <u 248
      :                          @194
  2976: 33 05 06                 s0 = 0x6
  2979: 53 29 fc 00 0d           jump @196 if a2 <u 252
      :                          @195
  2984: 88 98 fe 00              a1 = a2 <u 0xfe
  2988: 9a 85 08                 s0 = 0x8 - a1
  2991: 01                       fallthrough
      :                          @196
  2992: ac 56 ff 08              jump @282 if s1 <u s0
      :                          @197
  2996: 64 58                    a1 = s0
  2998: 50 10 1e e8 15           ra = 30, jump @559
      :                          @198 [@dyn 15]
  3003: 28 07                    jump @200
      :                          @199
  3005: 33 05                    s0 = 0
  3007: 33 07                    a0 = 0
  3009: 01                       fallthrough
      :                          @200
  3010: e4 56 08                 a1 = maxu(s1, s0)
  3013: c9 58 08                 a1 = a1 - s0
  3016: e4 78 08                 a1 = maxu(a1, a0)
  3019: c9 78 08                 a1 = a1 - a0
  3022: 33 09 21                 a2 = 0x21
  3025: ae 98 23                 jump @203 if a1 >=u a2
      :                          @201
  3028: 33 08                    a1 = 0
  3030: 33 05 00 00 01           s0 = 0x10000
  3035: 01                       fallthrough
      :                          @202
  3036: 64 57                    a0 = s0
  3038: 95 11 98 03              sp = sp + 0x398
  3042: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3046: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3050: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  3054: 95 11 f8 07              sp = sp + 0x7f8
  3058: 32 00                    ret
      :                          @203
  3060: 82 19 28                 a2 = u64 [sp + 0x28]
  3063: c8 95 05                 s0 = s0 + a2
  3066: c8 57 07                 a0 = a0 + s0
  3069: 7c 79 20                 a2 = u8 [a0 + 0x20]
  3072: 51 09 0a                 jump @205 if a2 == 0
      :                          @204
  3075: 33 06                    s1 = 0
  3077: 33 0a                    a3 = 0
  3079: 28 83 00                 jump @219
      :                          @205
  3082: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  3085: 95 75 21                 s0 = a0 + 0x21
  3088: 51 0a 54                 jump @216 if a3 == 0
      :                          @206
  3091: 7d 57                    a0 = i8 [s0]
  3093: 33 06 01                 s1 = 0x1
  3096: 59 07 37                 jump @213 if a0 >=s 0
      :                          @207
  3099: 84 77 ff 00              a0 = a0 & 0xff
  3103: 33 06 02                 s1 = 0x2
  3106: 53 27 c0 00 2d           jump @213 if a0 <u 192
      :                          @208
  3111: 33 06 03                 s1 = 0x3
  3114: 53 27 e0 00 25           jump @213 if a0 <u 224
      :                          @209
  3119: 33 06 04                 s1 = 0x4
  3122: 53 27 f0 00 1d           jump @213 if a0 <u 240
      :                          @210
  3127: 33 06 05                 s1 = 0x5
  3130: 53 27 f8 00 15           jump @213 if a0 <u 248
      :                          @211
  3135: 33 06 06                 s1 = 0x6
  3138: 53 27 fc 00 0d           jump @213 if a0 <u 252
      :                          @212
  3143: 88 77 fe 00              a0 = a0 <u 0xfe
  3147: 9a 76 08                 s1 = 0x8 - a0
  3150: 01                       fallthrough
      :                          @213
  3151: 7b 1a 28                 u64 [sp + 0x28] = a3
  3154: ac 6a 5f 08              jump @284 if a3 <u s1
      :                          @214
  3158: 64 57                    a0 = s0
  3160: 64 68                    a1 = s1
  3162: 50 10 20 44 15           ra = 32, jump @559
      :                          @215 [@dyn 16]
  3167: 82 1a 28                 a3 = u64 [sp + 0x28]
  3170: 28 07                    jump @217
      :                          @216
  3172: 33 06                    s1 = 0
  3174: 33 07                    a0 = 0
  3176: 01                       fallthrough
      :                          @217
  3177: e4 6a 08                 a1 = maxu(a3, s1)
  3180: c9 68 08                 a1 = a1 - s1
  3183: e6 78 0a                 a3 = minu(a1, a0)
  3186: c8 56 06                 s1 = s1 + s0
  3189: 52 1a 24 15              jump @219 if a3 != 36
      :                          @218
  3193: 80 68 20                 a1 = u32 [s1 + 0x20]
  3196: 64 67                    a0 = s1
  3198: 0a 0e                    ecalli 14 // 'solicit'
  3200: 33 08                    a1 = 0
  3202: 33 05 00 00 01           s0 = 0x10000
  3207: 28 55 ff                 jump @202
      :                          @219
  3210: 82 17 08                 a0 = u64 [sp + 0x8]
  3213: 97 77 08                 a0 = a0 << 0x8
  3216: 82 18 20                 a1 = u64 [sp + 0x20]
  3219: d4 87 07                 a0 = a0 | a1
  3222: 82 18 18                 a1 = u64 [sp + 0x18]
  3225: 97 88 10                 a1 = a1 << 0x10
  3228: 82 19 10                 a2 = u64 [sp + 0x10]
  3231: 97 99 18                 a2 = a2 << 0x18
  3234: d4 98 08                 a1 = a1 | a2
  3237: d4 87 07                 a0 = a0 | a1
  3240: 7b 17 28                 u64 [sp + 0x28] = a0
  3243: 46 11 31                 u8 [sp + 49] = 0
  3246: 81 65                    s0 = i32 [s1]
  3248: 95 17 31                 a0 = sp + 0x31
  3251: 33 08 01                 a1 = 0x1
  3254: 7b 16 18                 u64 [sp + 0x18] = s1
  3257: 64 69                    a2 = s1
  3259: 7b 1a 20                 u64 [sp + 0x20] = a3
  3262: 0a 03                    ecalli 3 // 'write'
  3264: 46 11 32 6a              u8 [sp + 50] = 0x6a
  3268: 46 11 33 61              u8 [sp + 51] = 0x61
  3272: 46 11 34 6d              u8 [sp + 52] = 0x6d
  3276: 46 11 35 44              u8 [sp + 53] = 0x44
  3280: 46 11 36 4f              u8 [sp + 54] = 0x4f
  3284: 46 11 37 54              u8 [sp + 55] = 0x54
  3288: 46 11 38 6a              u8 [sp + 56] = 0x6a
  3292: 46 11 39 0d              u8 [sp + 57] = 0xd
  3296: 46 11 3a 4a              u8 [sp + 58] = 0x4a
  3300: 46 11 3b 19              u8 [sp + 59] = 0x19
  3304: 46 11 3c d1 00           u8 [sp + 60] = 0xd1
  3309: 46 11 3d 99 00           u8 [sp + 61] = 0x99
  3314: 46 11 3e 50              u8 [sp + 62] = 0x50
  3318: 46 11 3f 57              u8 [sp + 63] = 0x57
  3322: 46 11 40 13              u8 [sp + 64] = 0x13
  3326: 46 11 41 fc 00           u8 [sp + 65] = 0xfc
  3331: 46 11 42 65              u8 [sp + 66] = 0x65
  3335: 46 11 43 f5 00           u8 [sp + 67] = 0xf5
  3340: 46 11 44 31              u8 [sp + 68] = 0x31
  3344: 46 11 45 03              u8 [sp + 69] = 0x3
  3348: 46 11 46 8e 00           u8 [sp + 70] = 0x8e
  3353: 46 11 47 73              u8 [sp + 71] = 0x73
  3357: 33 0b f1 00              a4 = 0xf1
  3361: 78 1b 48                 u8 [sp + 0x48] = a4
  3364: 46 11 49 d8 00           u8 [sp + 73] = 0xd8
  3369: 46 11 4a 85 00           u8 [sp + 74] = 0x85
  3374: 46 11 4b 64              u8 [sp + 75] = 0x64
  3378: 46 11 4c 56              u8 [sp + 76] = 0x56
  3382: 46 11 4d 32              u8 [sp + 77] = 0x32
  3386: 46 11 4e c8 00           u8 [sp + 78] = 0xc8
  3391: 46 11 4f ae 00           u8 [sp + 79] = 0xae
  3396: 82 16 28                 s1 = u64 [sp + 0x28]
  3399: 46 11 50 50              u8 [sp + 80] = 0x50
  3403: 33 0c 3c                 a5 = 0x3c
  3406: 78 1c 51                 u8 [sp + 0x51] = a5
  3409: 46 11 52 4f              u8 [sp + 82] = 0x4f
  3413: 46 11 53 0c              u8 [sp + 83] = 0xc
  3417: 46 11 54 4d              u8 [sp + 84] = 0x4d
  3421: 46 11 55 5e              u8 [sp + 85] = 0x5e
  3425: 46 11 56 19              u8 [sp + 86] = 0x19
  3429: 46 11 57 a7 00           u8 [sp + 87] = 0xa7
  3434: 46 11 58 bf 00           u8 [sp + 88] = 0xbf
  3439: 46 11 59 a9 00           u8 [sp + 89] = 0xa9
  3444: 46 11 5a bb 00           u8 [sp + 90] = 0xbb
  3449: 46 11 5b 0f              u8 [sp + 91] = 0xf
  3453: 46 11 5c a4 00           u8 [sp + 92] = 0xa4
  3458: 46 11 5d 96 00           u8 [sp + 93] = 0x96
  3463: 46 11 5e 87 00           u8 [sp + 94] = 0x87
  3468: 46 11 5f 47              u8 [sp + 95] = 0x47
  3472: 46 11 60 e6 00           u8 [sp + 96] = 0xe6
  3477: 46 11 61 3d              u8 [sp + 97] = 0x3d
  3481: 78 1c 62                 u8 [sp + 0x62] = a5
  3484: 78 1b 63                 u8 [sp + 0x63] = a4
  3487: 46 11 64 e7 00           u8 [sp + 100] = 0xe7
  3492: 46 11 65 4a              u8 [sp + 101] = 0x4a
  3496: 46 11 66 49              u8 [sp + 102] = 0x49
  3500: 46 11 67 dd 00           u8 [sp + 103] = 0xdd
  3505: 46 11 68 c4 00           u8 [sp + 104] = 0xc4
  3510: 46 11 69 a6 00           u8 [sp + 105] = 0xa6
  3515: 46 11 6a ec 00           u8 [sp + 106] = 0xec
  3520: 46 11 6b a8 00           u8 [sp + 107] = 0xa8
  3525: 46 11 6c 9a 00           u8 [sp + 108] = 0x9a
  3530: 46 11 6d 6a              u8 [sp + 109] = 0x6a
  3534: 46 11 6e 6f              u8 [sp + 110] = 0x6f
  3538: 46 11 6f 33              u8 [sp + 111] = 0x33
  3542: 46 11 70 9d 00           u8 [sp + 112] = 0x9d
  3547: 46 11 71 a3 00           u8 [sp + 113] = 0xa3
  3552: 46 11 72 33              u8 [sp + 114] = 0x33
  3556: 46 11 73 7f              u8 [sp + 115] = 0x7f
  3560: 46 11 74 d2 00           u8 [sp + 116] = 0xd2
  3565: 46 11 75 eb 00           u8 [sp + 117] = 0xeb
  3570: 46 11 76 55              u8 [sp + 118] = 0x55
  3574: 46 11 77 07              u8 [sp + 119] = 0x7
  3578: 95 17 78                 a0 = sp + 0x78
  3581: 33 09 00 01              a2 = 0x100
  3585: 33 08                    a1 = 0
  3587: 50 10 22 42 0b           ra = 34, jump @389
      :                          @220 [@dyn 17]
  3592: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  3595: 7b 15 10                 u64 [sp + 0x10] = s0
  3598: 56 17 09 d2 05           jump @269 if a0 >u 9
      :                          @221
  3603: 97 77 02                 a0 = a0 << 0x2
  3606: 33 08 00 00 01           a1 = 0x10000
  3611: c8 87 07                 a0 = a0 + a1
  3614: 81 77                    a0 = i32 [a0]
  3616: c8 87 07                 a0 = a0 + a1
  3619: 32 07                    jump [a0]
      :                          @222 [@dyn 18]
  3621: 95 18 32                 a1 = sp + 0x32
  3624: 33 09 03                 a2 = 0x3
  3627: 95 1a 78                 a3 = sp + 0x78
  3630: 33 0c 00 01              a5 = 0x100
  3634: 64 67                    a0 = s1
  3636: 33 0b                    a4 = 0
  3638: 0a 02                    ecalli 2 // 'read'
  3640: 33 08 01                 a1 = 0x1
  3643: 50 10 26 01 14           ra = 38, jump @583
      :                          @223 [@dyn 19]
  3648: 33 08 28 00 01           a1 = 0x10028
  3653: 33 0a 29 00 01           a3 = 0x10029
  3658: 33 07 02                 a0 = 0x2
  3661: 33 09 01                 a2 = 0x1
  3664: 33 0b 1a                 a4 = 0x1a
  3667: 0a 64                    ecalli 100 // 'log'
  3669: 95 17 32                 a0 = sp + 0x32
  3672: 33 08 03                 a1 = 0x3
  3675: 95 19 35                 a2 = sp + 0x35
  3678: 33 0a 03                 a3 = 0x3
  3681: 0a 03                    ecalli 3 // 'write'
  3683: 33 08 02                 a1 = 0x2
  3686: 50 10 28 d6 13           ra = 40, jump @583
      :                          @224 [@dyn 20]
  3691: 33 08 43 00 01           a1 = 0x10043
  3696: 33 0a 44 00 01           a3 = 0x10044
  3701: 33 07 02                 a0 = 0x2
  3704: 33 09 01                 a2 = 0x1
  3707: 33 0b 19                 a4 = 0x19
  3710: 0a 64                    ecalli 100 // 'log'
  3712: 95 18 32                 a1 = sp + 0x32
  3715: 33 09 03                 a2 = 0x3
  3718: 95 1a 78                 a3 = sp + 0x78
  3721: 33 0c 00 01              a5 = 0x100
  3725: 64 67                    a0 = s1
  3727: 33 0b                    a4 = 0
  3729: 0a 02                    ecalli 2 // 'read'
  3731: 33 08 05                 a1 = 0x5
  3734: 50 10 2a a6 13           ra = 42, jump @583
      :                          @225 [@dyn 21]
  3739: 33 08 5d 00 01           a1 = 0x1005d
  3744: 33 0a 5e 00 01           a3 = 0x1005e
  3749: 33 07 02                 a0 = 0x2
  3752: 33 09 01                 a2 = 0x1
  3755: 33 0b 1b                 a4 = 0x1b
  3758: 0a 64                    ecalli 100 // 'log'
  3760: 95 17 32                 a0 = sp + 0x32
  3763: 33 08                    a1 = 0
  3765: 0a 0f                    ecalli 15 // 'forget'
  3767: 33 08 06                 a1 = 0x6
  3770: 50 10 2c 82 13           ra = 44, jump @583
      :                          @226 [@dyn 22]
  3775: 33 08 79 00 01           a1 = 0x10079
  3780: 33 0a 7a 00 01           a3 = 0x1007a
  3785: 33 07 02                 a0 = 0x2
  3788: 33 09 01                 a2 = 0x1
  3791: 33 0b 16                 a4 = 0x16
  3794: 0a 64                    ecalli 100 // 'log'
  3796: 28 0c 05                 jump @269
      :                          @227 [@dyn 23]
  3799: 95 18 32                 a1 = sp + 0x32
  3802: 33 09 03                 a2 = 0x3
  3805: 95 1a 78                 a3 = sp + 0x78
  3808: 33 0c 00 01              a5 = 0x100
  3812: 64 67                    a0 = s1
  3814: 33 0b                    a4 = 0
  3816: 0a 02                    ecalli 2 // 'read'
  3818: 33 08 01                 a1 = 0x1
  3821: 50 10 30 4f 13           ra = 48, jump @583
      :                          @228 [@dyn 24]
  3826: 33 08 28 00 01           a1 = 0x10028
  3831: 33 0a 90 00 01           a3 = 0x10090
  3836: 33 07 02                 a0 = 0x2
  3839: 33 09 01                 a2 = 0x1
  3842: 33 0b 1b                 a4 = 0x1b
  3845: 0a 64                    ecalli 100 // 'log'
  3847: 95 17 32                 a0 = sp + 0x32
  3850: 33 08 03                 a1 = 0x3
  3853: 33 09                    a2 = 0
  3855: 33 0a                    a3 = 0
  3857: 0a 03                    ecalli 3 // 'write'
  3859: 33 08 02                 a1 = 0x2
  3862: 50 10 32 26 13           ra = 50, jump @583
      :                          @229 [@dyn 25]
  3867: 33 08 43 00 01           a1 = 0x10043
  3872: 33 0a ab 00 01           a3 = 0x100ab
  3877: 33 07 02                 a0 = 0x2
  3880: 33 09 01                 a2 = 0x1
  3883: 33 0b 1f                 a4 = 0x1f
  3886: 0a 64                    ecalli 100 // 'log'
  3888: 95 18 32                 a1 = sp + 0x32
  3891: 33 09 03                 a2 = 0x3
  3894: 95 1a 78                 a3 = sp + 0x78
  3897: 33 0c 00 01              a5 = 0x100
  3901: 64 67                    a0 = s1
  3903: 33 0b                    a4 = 0
  3905: 0a 02                    ecalli 2 // 'read'
  3907: 33 08 05                 a1 = 0x5
  3910: 50 10 34 f6 12           ra = 52, jump @583
      :                          @230 [@dyn 26]
  3915: 33 08 5d 00 01           a1 = 0x1005d
  3920: 33 0a ca 00 01           a3 = 0x100ca
  3925: 33 07 02                 a0 = 0x2
  3928: 33 09 01                 a2 = 0x1
  3931: 33 0b 1a                 a4 = 0x1a
  3934: 0a 64                    ecalli 100 // 'log'
  3936: 28 80 04                 jump @269
      :                          @231 [@dyn 27]
  3939: 95 17 38                 a0 = sp + 0x38
  3942: 33 08 03                 a1 = 0x3
  3945: 0a 0e                    ecalli 14 // 'solicit'
  3947: 33 08 01                 a1 = 0x1
  3950: 50 10 38 ce 12           ra = 56, jump @583
      :                          @232 [@dyn 28]
  3955: 33 08 28 00 01           a1 = 0x10028
  3960: 33 0a e4 00 01           a3 = 0x100e4
  3965: 33 07 02                 a0 = 0x2
  3968: 33 09 01                 a2 = 0x1
  3971: 33 0b 1c                 a4 = 0x1c
  3974: 0a 64                    ecalli 100 // 'log'
  3976: 95 17 38                 a0 = sp + 0x38
  3979: 33 08 03                 a1 = 0x3
  3982: 0a 0d                    ecalli 13 // 'query'
  3984: 33 08 02                 a1 = 0x2
  3987: 50 10 3a a9 12           ra = 58, jump @583
      :                          @233 [@dyn 29]
  3992: 33 08 43 00 01           a1 = 0x10043
  3997: 33 0a 00 01 01           a3 = 0x10100
  4002: 33 07 02                 a0 = 0x2
  4005: 33 09 01                 a2 = 0x1
  4008: 33 0b 1a                 a4 = 0x1a
  4011: 0a 64                    ecalli 100 // 'log'
  4013: 95 17 58                 a0 = sp + 0x58
  4016: 33 08 03                 a1 = 0x3
  4019: 0a 0d                    ecalli 13 // 'query'
  4021: 33 08 05                 a1 = 0x5
  4024: 50 10 3c 84 12           ra = 60, jump @583
      :                          @234 [@dyn 30]
  4029: 33 08 5d 00 01           a1 = 0x1005d
  4034: 33 0a 1a 01 01           a3 = 0x1011a
  4039: 33 07 02                 a0 = 0x2
  4042: 33 09 01                 a2 = 0x1
  4045: 33 0b 1c                 a4 = 0x1c
  4048: 0a 64                    ecalli 100 // 'log'
  4050: 28 0e 04                 jump @269
      :                          @235 [@dyn 31]
  4053: 95 17 38                 a0 = sp + 0x38
  4056: 33 08 03                 a1 = 0x3
  4059: 0a 0f                    ecalli 15 // 'forget'
  4061: 33 08 01                 a1 = 0x1
  4064: 50 10 40 5c 12           ra = 64, jump @583
      :                          @236 [@dyn 32]
  4069: 33 08 28 00 01           a1 = 0x10028
  4074: 33 0a 36 01 01           a3 = 0x10136
  4079: 33 07 02                 a0 = 0x2
  4082: 33 09 01                 a2 = 0x1
  4085: 33 0b 25                 a4 = 0x25
  4088: 0a 64                    ecalli 100 // 'log'
  4090: 95 17 38                 a0 = sp + 0x38
  4093: 33 08 03                 a1 = 0x3
  4096: 0a 0d                    ecalli 13 // 'query'
  4098: 33 08 02                 a1 = 0x2
  4101: 50 10 42 37 12           ra = 66, jump @583
      :                          @237 [@dyn 33]
  4106: 33 08 43 00 01           a1 = 0x10043
  4111: 33 0a 5b 01 01           a3 = 0x1015b
  4116: 33 07 02                 a0 = 0x2
  4119: 33 09 01                 a2 = 0x1
  4122: 33 0b 24                 a4 = 0x24
  4125: 0a 64                    ecalli 100 // 'log'
  4127: 95 18 58                 a1 = sp + 0x58
  4130: 95 19 78                 a2 = sp + 0x78
  4133: 33 0b 03                 a4 = 0x3
  4136: 64 67                    a0 = s1
  4138: 33 0a                    a3 = 0
  4140: 0a 01                    ecalli 1 // 'lookup'
  4142: 33 08 05                 a1 = 0x5
  4145: 50 10 44 0b 12           ra = 68, jump @583
      :                          @238 [@dyn 34]
  4150: 33 08 5d 00 01           a1 = 0x1005d
  4155: 33 0a 7f 01 01           a3 = 0x1017f
  4160: 33 07 02                 a0 = 0x2
  4163: 33 09 01                 a2 = 0x1
  4166: 33 0b 1d                 a4 = 0x1d
  4169: 0a 64                    ecalli 100 // 'log'
  4171: 33 07 e8 03              a0 = 0x3e8
  4175: 95 18 32                 a1 = sp + 0x32
  4178: 0a 06                    ecalli 6 // 'assign'
  4180: 33 08 06                 a1 = 0x6
  4183: 50 10 46 e5 11           ra = 70, jump @583
      :                          @239 [@dyn 35]
  4188: 33 08 79 00 01           a1 = 0x10079
  4193: 33 0a 9c 01 01           a3 = 0x1019c
  4198: 33 07 02                 a0 = 0x2
  4201: 33 09 01                 a2 = 0x1
  4204: 33 0b 17                 a4 = 0x17
  4207: 0a 64                    ecalli 100 // 'log'
  4209: 28 6f 03                 jump @269
      :                          @240 [@dyn 36]
  4212: 95 18 38                 a1 = sp + 0x38
  4215: 95 19 78                 a2 = sp + 0x78
  4218: 33 0b 03                 a4 = 0x3
  4221: 64 67                    a0 = s1
  4223: 33 0a                    a3 = 0
  4225: 0a 01                    ecalli 1 // 'lookup'
  4227: 33 08 01                 a1 = 0x1
  4230: 50 10 4a b6 11           ra = 74, jump @583
      :                          @241 [@dyn 37]
  4235: 33 08 28 00 01           a1 = 0x10028
  4240: 33 0a b3 01 01           a3 = 0x101b3
  4245: 33 07 02                 a0 = 0x2
  4248: 33 09 01                 a2 = 0x1
  4251: 33 0b 1e                 a4 = 0x1e
  4254: 0a 64                    ecalli 100 // 'log'
  4256: 95 17 38                 a0 = sp + 0x38
  4259: 33 08 03                 a1 = 0x3
  4262: 0a 0d                    ecalli 13 // 'query'
  4264: 33 08 02                 a1 = 0x2
  4267: 50 10 4c 91 11           ra = 76, jump @583
      :                          @242 [@dyn 38]
  4272: 33 08 43 00 01           a1 = 0x10043
  4277: 33 0a 5b 01 01           a3 = 0x1015b
  4282: 33 07 02                 a0 = 0x2
  4285: 33 09 01                 a2 = 0x1
  4288: 33 0b 24                 a4 = 0x24
  4291: 0a 64                    ecalli 100 // 'log'
  4293: 95 18 38                 a1 = sp + 0x38
  4296: 64 67                    a0 = s1
  4298: 0a 0c                    ecalli 12 // 'eject'
  4300: 33 08 05                 a1 = 0x5
  4303: 50 10 4e 6d 11           ra = 78, jump @583
      :                          @243 [@dyn 39]
  4308: 33 08 5d 00 01           a1 = 0x1005d
  4313: 33 0a d1 01 01           a3 = 0x101d1
  4318: 33 07 02                 a0 = 0x2
  4321: 33 09 01                 a2 = 0x1
  4324: 33 0b 11                 a4 = 0x11
  4327: 0a 64                    ecalli 100 // 'log'
  4329: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  4339: 95 1a 38                 a3 = sp + 0x38
  4342: 33 08                    a1 = 0
  4344: 33 09                    a2 = 0
  4346: 33 0b                    a4 = 0
  4348: 0a 05                    ecalli 5 // 'bless'
  4350: 33 08 06                 a1 = 0x6
  4353: 50 10 50 3b 11           ra = 80, jump @583
      :                          @244 [@dyn 40]
  4358: 33 08 79 00 01           a1 = 0x10079
  4363: 33 0a e2 01 01           a3 = 0x101e2
  4368: 33 07 02                 a0 = 0x2
  4371: 33 09 01                 a2 = 0x1
  4374: 33 0b 11                 a4 = 0x11
  4377: 0a 64                    ecalli 100 // 'log'
  4379: 28 c5 02                 jump @269
      :                          @245 [@dyn 41]
  4382: 95 17 38                 a0 = sp + 0x38
  4385: 33 08 03                 a1 = 0x3
  4388: 0a 0e                    ecalli 14 // 'solicit'
  4390: 33 08 01                 a1 = 0x1
  4393: 50 10 54 13 11           ra = 84, jump @583
      :                          @246 [@dyn 42]
  4398: 33 08 28 00 01           a1 = 0x10028
  4403: 33 0a f3 01 01           a3 = 0x101f3
  4408: 33 07 02                 a0 = 0x2
  4411: 33 09 01                 a2 = 0x1
  4414: 33 0b 26                 a4 = 0x26
  4417: 0a 64                    ecalli 100 // 'log'
  4419: 95 17 38                 a0 = sp + 0x38
  4422: 33 08 03                 a1 = 0x3
  4425: 0a 0d                    ecalli 13 // 'query'
  4427: 33 08 02                 a1 = 0x2
  4430: 50 10 56 ee 10           ra = 86, jump @583
      :                          @247 [@dyn 43]
  4435: 33 08 43 00 01           a1 = 0x10043
  4440: 33 0a 19 02 01           a3 = 0x10219
  4445: 33 07 02                 a0 = 0x2
  4448: 33 09 01                 a2 = 0x1
  4451: 33 0b 24                 a4 = 0x24
  4454: 0a 64                    ecalli 100 // 'log'
  4456: 33 09 00 0a              a2 = 0xa00
  4460: 95 17 78 01              a0 = sp + 0x178
  4464: 95 15 78 01              s0 = sp + 0x178
  4468: 33 08                    a1 = 0
  4470: 50 10 58 cf 07           ra = 88, jump @389
      :                          @248 [@dyn 44]
  4475: 33 06 50                 s1 = 0x50
  4478: 01                       fallthrough
      :                          @249
  4479: 95 18 38                 a1 = sp + 0x38
  4482: 33 09 20                 a2 = 0x20
  4485: 64 57                    a0 = s0
  4487: 50 10 5a 0c 07           ra = 90, jump @371
      :                          @250 [@dyn 45]
  4492: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4495: 95 55 20                 s0 = s0 + 0x20
  4498: 52 06 ed                 jump @249 if s1 != 0
      :                          @251
  4501: 95 18 78 01              a1 = sp + 0x178
  4505: 33 07                    a0 = 0
  4507: 0a 06                    ecalli 6 // 'assign'
  4509: 33 08 05                 a1 = 0x5
  4512: 50 10 5c 9c 10           ra = 92, jump @583
      :                          @252 [@dyn 46]
  4517: 33 08 5d 00 01           a1 = 0x1005d
  4522: 33 0a 3d 02 01           a3 = 0x1023d
  4527: 33 07 02                 a0 = 0x2
  4530: 33 09 01                 a2 = 0x1
  4533: 33 0b 11                 a4 = 0x11
  4536: 0a 64                    ecalli 100 // 'log'
  4538: 82 15 10                 s0 = u64 [sp + 0x10]
  4541: 82 16 28                 s1 = u64 [sp + 0x28]
  4544: 28 20 02                 jump @269
      :                          @253 [@dyn 47]
  4547: 95 17 38                 a0 = sp + 0x38
  4550: 33 08 03                 a1 = 0x3
  4553: 0a 0f                    ecalli 15 // 'forget'
  4555: 33 08 01                 a1 = 0x1
  4558: 50 10 60 6e 10           ra = 96, jump @583
      :                          @254 [@dyn 48]
  4563: 33 08 28 00 01           a1 = 0x10028
  4568: 33 0a 4e 02 01           a3 = 0x1024e
  4573: 33 07 02                 a0 = 0x2
  4576: 33 09 01                 a2 = 0x1
  4579: 33 0b 1b                 a4 = 0x1b
  4582: 0a 64                    ecalli 100 // 'log'
  4584: 95 17 38                 a0 = sp + 0x38
  4587: 33 08 03                 a1 = 0x3
  4590: 0a 0d                    ecalli 13 // 'query'
  4592: 33 08 02                 a1 = 0x2
  4595: 50 10 62 49 10           ra = 98, jump @583
      :                          @255 [@dyn 49]
  4600: 33 08 43 00 01           a1 = 0x10043
  4605: 33 0a 5b 01 01           a3 = 0x1015b
  4610: 33 07 02                 a0 = 0x2
  4613: 33 09 01                 a2 = 0x1
  4616: 33 0b 24                 a4 = 0x24
  4619: 0a 64                    ecalli 100 // 'log'
  4621: 28 d3 01                 jump @269
      :                          @256 [@dyn 50]
  4624: 95 18 38                 a1 = sp + 0x38
  4627: 95 19 78                 a2 = sp + 0x78
  4630: 33 0b 03                 a4 = 0x3
  4633: 64 67                    a0 = s1
  4635: 33 0a                    a3 = 0
  4637: 0a 01                    ecalli 1 // 'lookup'
  4639: 33 08 01                 a1 = 0x1
  4642: 50 10 66 1a 10           ra = 102, jump @583
      :                          @257 [@dyn 51]
  4647: 33 08 28 00 01           a1 = 0x10028
  4652: 33 0a b3 01 01           a3 = 0x101b3
  4657: 33 07 02                 a0 = 0x2
  4660: 33 09 01                 a2 = 0x1
  4663: 33 0b 1e                 a4 = 0x1e
  4666: 0a 64                    ecalli 100 // 'log'
  4668: 95 17 38                 a0 = sp + 0x38
  4671: 33 08 03                 a1 = 0x3
  4674: 0a 0d                    ecalli 13 // 'query'
  4676: 33 08 02                 a1 = 0x2
  4679: 50 10 68 f5 0f           ra = 104, jump @583
      :                          @258 [@dyn 52]
  4684: 33 08 43 00 01           a1 = 0x10043
  4689: 33 0a 5b 01 01           a3 = 0x1015b
  4694: 33 07 02                 a0 = 0x2
  4697: 33 09 01                 a2 = 0x1
  4700: 33 0b 24                 a4 = 0x24
  4703: 0a 64                    ecalli 100 // 'log'
  4705: 28 7f 01                 jump @269
      :                          @259 [@dyn 53]
  4708: 64 57                    a0 = s0
  4710: 64 65                    s0 = s1
  4712: 64 76                    s1 = a0
  4714: 95 17 38                 a0 = sp + 0x38
  4717: 33 08 03                 a1 = 0x3
  4720: 33 09 8f 03              a2 = 0x38f
  4724: 33 0a 8f 03              a3 = 0x38f
  4728: 0a 09                    ecalli 9 // 'new'
  4730: 33 08 01                 a1 = 0x1
  4733: 50 10 6c bf 0f           ra = 108, jump @583
      :                          @260 [@dyn 54]
  4738: 33 08 28 00 01           a1 = 0x10028
  4743: 33 0a 69 02 01           a3 = 0x10269
  4748: 33 07 02                 a0 = 0x2
  4751: 33 09 01                 a2 = 0x1
  4754: 33 0b 1d                 a4 = 0x1d
  4757: 0a 64                    ecalli 100 // 'log'
  4759: 95 17 38                 a0 = sp + 0x38
  4762: 33 08 8f 03              a1 = 0x38f
  4766: 33 09 8f 03              a2 = 0x38f
  4770: 0a 0a                    ecalli 10 // 'upgrade'
  4772: 33 08 02                 a1 = 0x2
  4775: 50 10 6e 95 0f           ra = 110, jump @583
      :                          @261 [@dyn 55]
  4780: 33 08 43 00 01           a1 = 0x10043
  4785: 33 0a 86 02 01           a3 = 0x10286
  4790: 33 07 02                 a0 = 0x2
  4793: 33 09 01                 a2 = 0x1
  4796: 33 0b 12                 a4 = 0x12
  4799: 0a 64                    ecalli 100 // 'log'
  4801: 48 21 78 01 8f 03        u32 [sp + 376] = 0x38f
  4807: 48 21 80 01              u32 [sp + 384] = 0
  4811: 48 21 7c 01 8f 03        u32 [sp + 380] = 0x38f
  4817: 64 67                    a0 = s1
  4819: 64 56                    s1 = s0
  4821: 64 75                    s0 = a0
  4823: 33 08 01                 a1 = 0x1
  4826: 33 09 01                 a2 = 0x1
  4829: 95 1a 78 01              a3 = sp + 0x178
  4833: 33 0b 01                 a4 = 0x1
  4836: 33 07                    a0 = 0
  4838: 0a 05                    ecalli 5 // 'bless'
  4840: 33 08 05                 a1 = 0x5
  4843: 50 10 70 51 0f           ra = 112, jump @583
      :                          @262 [@dyn 56]
  4848: 33 08 5d 00 01           a1 = 0x1005d
  4853: 33 0a a8 02 01           a3 = 0x102a8
  4858: 33 07 02                 a0 = 0x2
  4861: 33 09 01                 a2 = 0x1
  4864: 33 0b 10                 a4 = 0x10
  4867: 0a 64                    ecalli 100 // 'log'
  4869: 28 db 00                 jump @269
      :                          @263 [@dyn 57]
  4872: 95 17 35                 a0 = sp + 0x35
  4875: 33 08 03                 a1 = 0x3
  4878: 33 09                    a2 = 0
  4880: 33 0a                    a3 = 0
  4882: 0a 03                    ecalli 3 // 'write'
  4884: 33 08 01                 a1 = 0x1
  4887: 50 10 74 25 0f           ra = 116, jump @583
      :                          @264 [@dyn 58]
  4892: 33 08 28 00 01           a1 = 0x10028
  4897: 33 0a b8 02 01           a3 = 0x102b8
  4902: 7b 1a 08                 u64 [sp + 0x8] = a3
  4905: 33 07 02                 a0 = 0x2
  4908: 33 09 01                 a2 = 0x1
  4911: 33 0b 1e                 a4 = 0x1e
  4914: 0a 64                    ecalli 100 // 'log'
  4916: 95 17 35                 a0 = sp + 0x35
  4919: 33 08 03                 a1 = 0x3
  4922: 95 19 32                 a2 = sp + 0x32
  4925: 33 0a 03                 a3 = 0x3
  4928: 0a 03                    ecalli 3 // 'write'
  4930: 33 08 02                 a1 = 0x2
  4933: 50 10 76 f7 0e           ra = 118, jump @583
      :                          @265 [@dyn 59]
  4938: 33 08 43 00 01           a1 = 0x10043
  4943: 33 0a d6 02 01           a3 = 0x102d6
  4948: 33 07 02                 a0 = 0x2
  4951: 33 09 01                 a2 = 0x1
  4954: 33 0b 19                 a4 = 0x19
  4957: 0a 64                    ecalli 100 // 'log'
  4959: 95 17 35                 a0 = sp + 0x35
  4962: 33 08 03                 a1 = 0x3
  4965: 33 09                    a2 = 0
  4967: 33 0a                    a3 = 0
  4969: 0a 03                    ecalli 3 // 'write'
  4971: 33 08 05                 a1 = 0x5
  4974: 50 10 78 ce 0e           ra = 120, jump @583
      :                          @266 [@dyn 60]
  4979: 33 08 5d 00 01           a1 = 0x1005d
  4984: 33 0a ef 02 01           a3 = 0x102ef
  4989: 33 07 02                 a0 = 0x2
  4992: 33 09 01                 a2 = 0x1
  4995: 33 0b 1f                 a4 = 0x1f
  4998: 0a 64                    ecalli 100 // 'log'
  5000: 95 18 35                 a1 = sp + 0x35
  5003: 33 09 03                 a2 = 0x3
  5006: 95 1a 78                 a3 = sp + 0x78
  5009: 33 0c 00 01              a5 = 0x100
  5013: 64 67                    a0 = s1
  5015: 33 0b                    a4 = 0
  5017: 0a 02                    ecalli 2 // 'read'
  5019: 33 08 06                 a1 = 0x6
  5022: 50 10 7a 9e 0e           ra = 122, jump @583
      :                          @267 [@dyn 61]
  5027: 33 08 79 00 01           a1 = 0x10079
  5032: 33 0a 0e 03 01           a3 = 0x1030e
  5037: 33 07 02                 a0 = 0x2
  5040: 33 09 01                 a2 = 0x1
  5043: 33 0b 1a                 a4 = 0x1a
  5046: 0a 64                    ecalli 100 // 'log'
  5048: 95 17 35                 a0 = sp + 0x35
  5051: 33 08 03                 a1 = 0x3
  5054: 33 09                    a2 = 0
  5056: 33 0a                    a3 = 0
  5058: 0a 03                    ecalli 3 // 'write'
  5060: 33 08 07                 a1 = 0x7
  5063: 50 10 7c 75 0e           ra = 124, jump @583
      :                          @268 [@dyn 62]
  5068: 33 08 28 03 01           a1 = 0x10328
  5073: 33 07 02                 a0 = 0x2
  5076: 33 09 01                 a2 = 0x1
  5079: 33 0b 1e                 a4 = 0x1e
  5082: 82 1a 08                 a3 = u64 [sp + 0x8]
  5085: 0a 64                    ecalli 100 // 'log'
  5087: 01                       fallthrough
      :                          @269
  5088: 95 18 78                 a1 = sp + 0x78
  5091: 64 67                    a0 = s1
  5093: 0a 04                    ecalli 4 // 'info'
  5095: 33 08 08                 a1 = 0x8
  5098: 50 10 7e 52 0e           ra = 126, jump @583
      :                          @270 [@dyn 63]
  5103: 33 08 29 03 01           a1 = 0x10329
  5108: 33 0a 2a 03 01           a3 = 0x1032a
  5113: 33 07 02                 a0 = 0x2
  5116: 33 09 01                 a2 = 0x1
  5119: 33 0b 0f                 a4 = 0xf
  5122: 0a 64                    ecalli 100 // 'log'
  5124: 0a                       ecalli 0 // 'gas'
  5125: 33 08 09                 a1 = 0x9
  5128: 50 20 80 00 34 0e        ra = 128, jump @583
      :                          @271 [@dyn 64]
  5134: 33 08 39 03 01           a1 = 0x10339
  5139: 33 0a 3a 03 01           a3 = 0x1033a
  5144: 33 07 02                 a0 = 0x2
  5147: 33 09 01                 a2 = 0x1
  5150: 33 0b 13                 a4 = 0x13
  5153: 0a 64                    ecalli 100 // 'log'
  5155: 01                       fallthrough
      :                          @272
  5156: 49 21 90 01              u64 [sp + 400] = 0
  5160: 49 21 88 01              u64 [sp + 392] = 0
  5164: 49 21 80 01              u64 [sp + 384] = 0
  5168: 49 21 78 01              u64 [sp + 376] = 0
  5172: 82 19 20                 a2 = u64 [sp + 0x20]
  5175: 55 19 21 79              jump @283 if a2 >=u 33
      :                          @273
  5179: 97 56 20                 s1 = s0 << 0x20
  5182: 98 66 20                 s1 = s1 >> 0x20
  5185: 95 17 78 01              a0 = sp + 0x178
  5189: 95 15 78 01              s0 = sp + 0x178
  5193: 82 18 18                 a1 = u64 [sp + 0x18]
  5196: 50 20 82 00 47 04        ra = 130, jump @371
      :                          @274 [@dyn 65]
  5202: 3a 08 00 00 03           a1 = u64 [0x30000]
  5207: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
  5217: ca 76 07                 a0 = s1 * a0
  5220: ae 87 2c                 jump @279 if a0 >=u a1
      :                          @275
  5223: 82 18 10                 a1 = u64 [sp + 0x10]
  5226: 51 18 09 18              jump @277 if a1 == 9
      :                          @276
  5230: 0a 08                    ecalli 8 // 'checkpoint'
  5232: 33 0a 4d 03 01           a3 = 0x1034d
  5237: 33 07 02                 a0 = 0x2
  5240: 33 0b 11                 a4 = 0x11
  5243: 33 08                    a1 = 0
  5245: 33 09                    a2 = 0
  5247: 0a 64                    ecalli 100 // 'log'
  5249: 01                       fallthrough
      :                          @277
  5250: 95 67 2a                 a0 = s1 + 0x2a
  5253: 33 08 07                 a1 = 0x7
  5256: 50 20 84 00 b4 0d        ra = 132, jump @583
      :                          @278 [@dyn 66]
  5262: 32 07                    jump [a0]
      :                          @279
  5264: 95 17 78 01              a0 = sp + 0x178
  5268: 0a 10                    ecalli 16 // 'oyield'
  5270: 33 0a 98 02 01           a3 = 0x10298
  5275: 33 07 02                 a0 = 0x2
  5278: 33 0b 10                 a4 = 0x10
  5281: 33 08                    a1 = 0
  5283: 33 09                    a2 = 0
  5285: 0a 64                    ecalli 100 // 'log'
  5287: 33 08 20                 a1 = 0x20
  5290: 28 32 f7                 jump @202
      :                          @280
  5293: 00                       trap
      :                          @281
  5294: 00                       trap
      :                          @282
  5295: 00                       trap
      :                          @283
  5296: 00                       trap
      :                          @284
  5297: 00                       trap
      :                          @285 [export #2: 'on_transfer']
  5298: 33 07 00 00 01           a0 = 0x10000
  5303: 33 08                    a1 = 0
  5305: 32 00                    ret
      :                          @286
  5307: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5310: 7b 10 40                 u64 [sp + 0x40] = ra
  5313: 7b 15 38                 u64 [sp + 0x38] = s0
  5316: 7b 16 30                 u64 [sp + 0x30] = s1
  5319: c8 89 09                 a2 = a2 + a1
  5322: ac 89 53                 jump @294 if a2 <u a1
      :                          @287
  5325: 64 75                    s0 = a0
  5327: 82 77                    a0 = u64 [a0]
  5329: 97 78 01                 a1 = a0 << 0x1
  5332: 33 0a 08                 a3 = 0x8
  5335: e4 a9 09                 a2 = maxu(a2, a3)
  5338: e4 98 06                 s1 = maxu(a1, a2)
  5341: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5344: 98 88 3f                 a1 = a1 >> 0x3f
  5347: 51 07 12                 jump @289 if a0 == 0
      :                          @288
  5350: 82 59 08                 a2 = u64 [s0 + 0x8]
  5353: 7b 19 18                 u64 [sp + 0x18] = a2
  5356: 49 11 20 01              u64 [sp + 32] = 0x1
  5360: 7b 17 28                 u64 [sp + 0x28] = a0
  5363: 28 06                    jump @290
      :                          @289
  5365: 49 11 20                 u64 [sp + 32] = 0
  5368: 01                       fallthrough
      :                          @290
  5369: 64 17                    a0 = sp
  5371: 95 1a 18                 a3 = sp + 0x18
  5374: 64 69                    a2 = s1
  5376: 50 20 86 00 33           ra = 134, jump @298
      :                          @291 [@dyn 67]
  5381: 82 18                    a1 = u64 [sp]
  5383: 82 17 08                 a0 = u64 [sp + 0x8]
  5386: 51 08 14                 jump @295 if a1 == 0
      :                          @292
  5389: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5399: aa 87 0d                 jump @296 if a0 == a1
      :                          @293
  5402: 52 07 18                 jump @297 if a0 != 0
      :                          @294
  5405: 00                       trap
      :                          @295
  5406: 7b 57 08                 u64 [s0 + 0x8] = a0
  5409: 7b 56                    u64 [s0] = s1
  5411: 01                       fallthrough
      :                          @296
  5412: 82 10 40                 ra = u64 [sp + 0x40]
  5415: 82 15 38                 s0 = u64 [sp + 0x38]
  5418: 82 16 30                 s1 = u64 [sp + 0x30]
  5421: 95 11 48                 sp = sp + 0x48
  5424: 32 00                    ret
      :                          @297
  5426: 00                       trap
      :                          @298
  5427: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5430: 7b 10 30                 u64 [sp + 0x30] = ra
  5433: 7b 15 28                 u64 [sp + 0x28] = s0
  5436: 7b 16 20                 u64 [sp + 0x20] = s1
  5439: 64 96                    s1 = a2
  5441: 64 73                    t1 = a0
  5443: 51 08 6f                 jump @308 if a1 == 0
      :                          @299
  5446: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5449: 51 07 72                 jump @309 if a0 == 0
      :                          @300
  5452: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5455: 51 09 9f 00              jump @316 if a2 == 0
      :                          @301
  5459: 82 a8                    a1 = u64 [a3]
  5461: 33 02 00 10              t0 = 0x1000
  5465: 33 04 20 00 03           t2 = 0x30020
  5470: c8 24 07                 a0 = t2 + t0
  5473: 01                       fallthrough
      :                          @302
  5474: 82 7a                    a3 = u64 [a0]
  5476: c8 6a 05                 s0 = a3 + s1
  5479: ac a5 c3 00              jump @322 if s0 <u a3
      :                          @303
  5483: 95 5b 01                 a4 = s0 + 0x1
  5486: 88 bc 01                 a5 = a4 <u 0x1
  5489: d8 b2 0b                 a4 = t0 <u a4
  5492: d4 cb 0b                 a4 = a4 | a5
  5495: 52 0b b3 00              jump @322 if a4 != 0
      :                          @304
  5499: 82 7b                    a4 = u64 [a0]
  5501: ab ab e5                 jump @302 if a4 != a3
      :                          @305
  5504: 7b 75                    u64 [a0] = s0
  5506: 33 0c                    a5 = 0
  5508: 7b 13 18                 u64 [sp + 0x18] = t1
  5511: c9 54 07                 a0 = t2 - s0
  5514: 95 77 00 10              a0 = a0 + 0x1000
  5518: 7b 17 10                 u64 [sp + 0x10] = a0
  5521: 7b 18 08                 u64 [sp + 0x8] = a1
  5524: 64 95                    s0 = a2
  5526: 7b 14                    u64 [sp] = t2
  5528: 50 20 88 00 fb 02        ra = 136, jump @371
      :                          @306 [@dyn 68]
  5534: 54 25 00 10 94 00        jump @323 if s0 <=u 4096
      :                          @307
  5540: 82 13 18                 t1 = u64 [sp + 0x18]
  5543: 82 18 10                 a1 = u64 [sp + 0x10]
  5546: 33 07                    a0 = 0
  5548: 7b 38 08                 u64 [t1 + 0x8] = a1
  5551: 28 b1 00                 jump @329
      :                          @308
  5554: 49 13 08                 u64 [t1 + 8] = 0
  5557: 33 07 01                 a0 = 0x1
  5560: 28 a8 00                 jump @329
      :                          @309
  5563: 33 07 00 10              a0 = 0x1000
  5567: 33 02 20 00 03           t0 = 0x30020
  5572: c8 72 09                 a2 = t0 + a0
  5575: 01                       fallthrough
      :                          @310
  5576: 82 9b                    a4 = u64 [a2]
  5578: c8 6b 0a                 a3 = a4 + s1
  5581: ac ba 5d                 jump @322 if a3 <u a4
      :                          @311
  5584: 95 ac 01                 a5 = a3 + 0x1
  5587: 88 c8 01                 a1 = a5 <u 0x1
  5590: d8 c7 0c                 a5 = a0 <u a5
  5593: d4 c8 08                 a1 = a1 | a5
  5596: 52 08 4e                 jump @322 if a1 != 0
      :                          @312
  5599: 82 98                    a1 = u64 [a2]
  5601: ab b8 e7                 jump @310 if a1 != a4
      :                          @313
  5604: 7b 9a                    u64 [a2] = a3
  5606: 33 0c                    a5 = 0
  5608: 01                       fallthrough
      :                          @314
  5609: ab b8 df                 jump @310 if a1 != a4
      :                          @315
  5612: 28 30                    jump @321
      :                          @316
  5614: 33 07 00 10              a0 = 0x1000
  5618: 33 02 20 00 03           t0 = 0x30020
  5623: c8 72 09                 a2 = t0 + a0
  5626: 01                       fallthrough
      :                          @317
  5627: 82 9b                    a4 = u64 [a2]
  5629: c8 6b 0a                 a3 = a4 + s1
  5632: ac ba 2a                 jump @322 if a3 <u a4
      :                          @318
  5635: 95 ac 01                 a5 = a3 + 0x1
  5638: 88 c8 01                 a1 = a5 <u 0x1
  5641: d8 c7 0c                 a5 = a0 <u a5
  5644: d4 c8 08                 a1 = a1 | a5
  5647: 52 08 1b                 jump @322 if a1 != 0
      :                          @319
  5650: 82 98                    a1 = u64 [a2]
  5652: ab b8 e7                 jump @317 if a1 != a4
      :                          @320
  5655: 7b 9a                    u64 [a2] = a3
  5657: 33 0c                    a5 = 0
  5659: 01                       fallthrough
      :                          @321
  5660: c9 a2 07                 a0 = t0 - a3
  5663: 95 78 00 10              a1 = a0 + 0x1000
  5667: 33 07                    a0 = 0
  5669: 7b 38 08                 u64 [t1 + 0x8] = a1
  5672: 28 38                    jump @329
      :                          @322
  5674: 33 07 01                 a0 = 0x1
  5677: 7b 37 08                 u64 [t1 + 0x8] = a0
  5680: 28 30                    jump @329
      :                          @323
  5682: 64 5c                    a5 = s0
  5684: 82 18                    a1 = u64 [sp]
  5686: 95 87 00 10              a0 = a1 + 0x1000
  5690: 82 13 18                 t1 = u64 [sp + 0x18]
  5693: 82 15 08                 s0 = u64 [sp + 0x8]
  5696: 01                       fallthrough
      :                          @324
  5697: 82 78                    a1 = u64 [a0]
  5699: c9 87 09                 a2 = a0 - a1
  5702: ab 59 11                 jump @328 if a2 != s0
      :                          @325
  5705: c9 c8 09                 a2 = a1 - a5
  5708: 01                       fallthrough
      :                          @326
  5709: 82 7a                    a3 = u64 [a0]
  5711: ab 8a f2                 jump @324 if a3 != a1
      :                          @327
  5714: 7b 79                    u64 [a0] = a2
  5716: 33 0b                    a4 = 0
  5718: 01                       fallthrough
      :                          @328
  5719: 82 18 10                 a1 = u64 [sp + 0x10]
  5722: 33 07                    a0 = 0
  5724: 7b 38 08                 u64 [t1 + 0x8] = a1
  5727: 01                       fallthrough
      :                          @329
  5728: 7b 36 10                 u64 [t1 + 0x10] = s1
  5731: 7b 37                    u64 [t1] = a0
  5733: 82 10 30                 ra = u64 [sp + 0x30]
  5736: 82 15 28                 s0 = u64 [sp + 0x28]
  5739: 82 16 20                 s1 = u64 [sp + 0x20]
  5742: 95 11 38                 sp = sp + 0x38
  5745: 32 00                    ret
      :                          @330
  5747: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5750: 7b 10 40                 u64 [sp + 0x40] = ra
  5753: 7b 15 38                 u64 [sp + 0x38] = s0
  5756: 7b 16 30                 u64 [sp + 0x30] = s1
  5759: 95 88 01                 a1 = a1 + 0x1
  5762: 51 08 54                 jump @338 if a1 == 0
      :                          @331
  5765: 64 75                    s0 = a0
  5767: 82 77                    a0 = u64 [a0]
  5769: 97 79 01                 a2 = a0 << 0x1
  5772: 33 0a 08                 a3 = 0x8
  5775: e4 a8 08                 a1 = maxu(a1, a3)
  5778: e4 89 06                 s1 = maxu(a2, a1)
  5781: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5784: 98 88 3f                 a1 = a1 >> 0x3f
  5787: 51 07 12                 jump @333 if a0 == 0
      :                          @332
  5790: 82 59 08                 a2 = u64 [s0 + 0x8]
  5793: 7b 19 18                 u64 [sp + 0x18] = a2
  5796: 49 11 20 01              u64 [sp + 32] = 0x1
  5800: 7b 17 28                 u64 [sp + 0x28] = a0
  5803: 28 06                    jump @334
      :                          @333
  5805: 49 11 20                 u64 [sp + 32] = 0
  5808: 01                       fallthrough
      :                          @334
  5809: 64 17                    a0 = sp
  5811: 95 1a 18                 a3 = sp + 0x18
  5814: 64 69                    a2 = s1
  5816: 50 20 8a 00 7b fe        ra = 138, jump @298
      :                          @335 [@dyn 69]
  5822: 82 18                    a1 = u64 [sp]
  5824: 82 17 08                 a0 = u64 [sp + 0x8]
  5827: 51 08 14                 jump @339 if a1 == 0
      :                          @336
  5830: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5840: aa 87 0d                 jump @340 if a0 == a1
      :                          @337
  5843: 52 07 18                 jump @341 if a0 != 0
      :                          @338
  5846: 00                       trap
      :                          @339
  5847: 7b 57 08                 u64 [s0 + 0x8] = a0
  5850: 7b 56                    u64 [s0] = s1
  5852: 01                       fallthrough
      :                          @340
  5853: 82 10 40                 ra = u64 [sp + 0x40]
  5856: 82 15 38                 s0 = u64 [sp + 0x38]
  5859: 82 16 30                 s1 = u64 [sp + 0x30]
  5862: 95 11 48                 sp = sp + 0x48
  5865: 32 00                    ret
      :                          @341
  5867: 00                       trap
      :                          @342 [@dyn 70]
  5868: 82 72                    t0 = u64 [a0]
  5870: 33 09 00 f0              a2 = 0xfffffffffffff000
  5874: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  5878: ac 9a 27                 jump @348 if a3 <u a2
      :                          @343
  5881: 82 77 08                 a0 = u64 [a0 + 0x8]
  5884: 33 09 20 00 03           a2 = 0x30020
  5889: 95 99 00 10              a2 = a2 + 0x1000
  5893: 01                       fallthrough
      :                          @344
  5894: 82 9a                    a3 = u64 [a2]
  5896: c9 a9 0b                 a4 = a2 - a3
  5899: ab 7b 12                 jump @348 if a4 != a0
      :                          @345
  5902: c9 2a 0b                 a4 = a3 - t0
  5905: 01                       fallthrough
      :                          @346
  5906: 82 9c                    a5 = u64 [a2]
  5908: ab ac f2                 jump @344 if a5 != a3
      :                          @347
  5911: 7b 9b                    u64 [a2] = a4
  5913: 33 08                    a1 = 0
  5915: 32 00                    ret
      :                          @348
  5917: 32 00                    ret
      :                          @349 [@dyn 71]
  5919: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5922: 7b 10 18                 u64 [sp + 0x18] = ra
  5925: 7b 15 10                 u64 [sp + 0x10] = s0
  5928: 7b 16 08                 u64 [sp + 0x8] = s1
  5931: 64 75                    s0 = a0
  5933: 82 7a 10                 a3 = u64 [a0 + 0x10]
  5936: 82 77                    a0 = u64 [a0]
  5938: c9 a7 07                 a0 = a0 - a3
  5941: 64 96                    s1 = a2
  5943: ac 97 2b                 jump @352 if a0 <u a2
      :                          @350
  5946: 7b 1a                    u64 [sp] = a3
  5948: 82 57 08                 a0 = u64 [s0 + 0x8]
  5951: c8 a7 07                 a0 = a0 + a3
  5954: 64 69                    a2 = s1
  5956: 50 20 90 00 4f 01        ra = 144, jump @371
      :                          @351 [@dyn 72]
  5962: 82 17                    a0 = u64 [sp]
  5964: c8 76 06                 s1 = s1 + a0
  5967: 7b 56 10                 u64 [s0 + 0x10] = s1
  5970: 33 07                    a0 = 0
  5972: 82 10 18                 ra = u64 [sp + 0x18]
  5975: 82 15 10                 s0 = u64 [sp + 0x10]
  5978: 82 16 08                 s1 = u64 [sp + 0x8]
  5981: 95 11 20                 sp = sp + 0x20
  5984: 32 00                    ret
      :                          @352
  5986: 64 57                    a0 = s0
  5988: 7b 18                    u64 [sp] = a1
  5990: 64 a8                    a1 = a3
  5992: 64 69                    a2 = s1
  5994: 50 20 92 00 51 fd        ra = 146, jump @286
      :                          @353 [@dyn 73]
  6000: 82 18                    a1 = u64 [sp]
  6002: 82 5a 10                 a3 = u64 [s0 + 0x10]
  6005: 28 c5                    jump @350
      :                          @354 [@dyn 74]
  6007: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6010: 7b 10 20                 u64 [sp + 0x20] = ra
  6013: 7b 15 18                 u64 [sp + 0x18] = s0
  6016: 7b 16 10                 u64 [sp + 0x10] = s1
  6019: 64 86                    s1 = a1
  6021: 83 88                    i32 a1 = a1 + 0
  6023: 33 09 80 00              a2 = 0x80
  6027: 64 7a                    a3 = a0
  6029: ae 98 2c                 jump @359 if a1 >=u a2
      :                          @355
  6032: 82 a8 10                 a1 = u64 [a3 + 0x10]
  6035: 82 a7                    a0 = u64 [a3]
  6037: ab 78 13                 jump @358 if a1 != a0
      :                          @356
  6040: 64 a7                    a0 = a3
  6042: 64 a5                    s0 = a3
  6044: 50 20 96 00 d7 fe        ra = 150, jump @330
      :                          @357 [@dyn 75]
  6050: 64 5a                    a3 = s0
  6052: 82 58 10                 a1 = u64 [s0 + 0x10]
  6055: 01                       fallthrough
      :                          @358
  6056: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6059: c8 87 07                 a0 = a0 + a1
  6062: 78 76                    u8 [a0] = s1
  6064: 95 88 01                 a1 = a1 + 0x1
  6067: 7b a8 10                 u64 [a3 + 0x10] = a1
  6070: 28 ac 00                 jump @367
      :                          @359
  6073: 8b 67 0b                 i32 a0 = s1 >> 0xb
  6076: 48 11 0c                 u32 [sp + 12] = 0
  6079: 52 07 1c                 jump @361 if a0 != 0
      :                          @360
  6082: 98 67 06                 a0 = s1 >> 0x6
  6085: 86 77 c0 00              a0 = a0 | 0xc0
  6089: 78 17 0c                 u8 [sp + 0xc] = a0
  6092: 84 67 3f                 a0 = s1 & 0x3f
  6095: 86 77 80 00              a0 = a0 | 0x80
  6099: 78 17 0d                 u8 [sp + 0xd] = a0
  6102: 33 06 02                 s1 = 0x2
  6105: 28 63                    jump @364
      :                          @361
  6107: 8b 67 10                 i32 a0 = s1 >> 0x10
  6110: 52 07 29                 jump @363 if a0 != 0
      :                          @362
  6113: 98 67 0c                 a0 = s1 >> 0xc
  6116: 86 77 e0 00              a0 = a0 | 0xe0
  6120: 78 17 0c                 u8 [sp + 0xc] = a0
  6123: 97 67 34                 a0 = s1 << 0x34
  6126: 98 77 3a                 a0 = a0 >> 0x3a
  6129: 95 77 80 00              a0 = a0 + 0x80
  6133: 78 17 0d                 u8 [sp + 0xd] = a0
  6136: 84 67 3f                 a0 = s1 & 0x3f
  6139: 86 77 80 00              a0 = a0 | 0x80
  6143: 78 17 0e                 u8 [sp + 0xe] = a0
  6146: 33 06 03                 s1 = 0x3
  6149: 28 37                    jump @364
      :                          @363
  6151: 97 67 2b                 a0 = s1 << 0x2b
  6154: 98 77 3d                 a0 = a0 >> 0x3d
  6157: 95 77 f0 00              a0 = a0 + 0xf0
  6161: 78 17 0c                 u8 [sp + 0xc] = a0
  6164: 97 67 2e                 a0 = s1 << 0x2e
  6167: 98 77 3a                 a0 = a0 >> 0x3a
  6170: 95 77 80 00              a0 = a0 + 0x80
  6174: 78 17 0d                 u8 [sp + 0xd] = a0
  6177: 97 67 34                 a0 = s1 << 0x34
  6180: 98 77 3a                 a0 = a0 >> 0x3a
  6183: 95 77 80 00              a0 = a0 + 0x80
  6187: 78 17 0e                 u8 [sp + 0xe] = a0
  6190: 84 67 3f                 a0 = s1 & 0x3f
  6193: 86 77 80 00              a0 = a0 | 0x80
  6197: 78 17 0f                 u8 [sp + 0xf] = a0
  6200: 33 06 04                 s1 = 0x4
  6203: 01                       fallthrough
      :                          @364
  6204: 82 a5 10                 s0 = u64 [a3 + 0x10]
  6207: 82 a7                    a0 = u64 [a3]
  6209: c9 57 07                 a0 = a0 - s0
  6212: ac 67 2e                 jump @368 if a0 <u s1
      :                          @365
  6215: 7b 1a                    u64 [sp] = a3
  6217: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6220: c8 57 07                 a0 = a0 + s0
  6223: 95 18 0c                 a1 = sp + 0xc
  6226: 64 69                    a2 = s1
  6228: 50 20 98 00 3f           ra = 152, jump @371
      :                          @366 [@dyn 76]
  6233: c8 56 06                 s1 = s1 + s0
  6236: 82 17                    a0 = u64 [sp]
  6238: 7b 76 10                 u64 [a0 + 0x10] = s1
  6241: 01                       fallthrough
      :                          @367
  6242: 33 07                    a0 = 0
  6244: 82 10 20                 ra = u64 [sp + 0x20]
  6247: 82 15 18                 s0 = u64 [sp + 0x18]
  6250: 82 16 10                 s1 = u64 [sp + 0x10]
  6253: 95 11 28                 sp = sp + 0x28
  6256: 32 00                    ret
      :                          @368
  6258: 64 a7                    a0 = a3
  6260: 64 58                    a1 = s0
  6262: 64 69                    a2 = s1
  6264: 64 a5                    s0 = a3
  6266: 50 20 9a 00 41 fc        ra = 154, jump @286
      :                          @369 [@dyn 77]
  6272: 64 5a                    a3 = s0
  6274: 82 55 10                 s0 = u64 [s0 + 0x10]
  6277: 28 c2                    jump @365
      :                          @370 [@dyn 78]
  6279: 64 8a                    a3 = a1
  6281: 33 08 a8 04 01           a1 = 0x104a8
  6286: 64 a9                    a2 = a3
  6288: 28 aa 04                 jump @466
      :                          @371
  6291: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6294: 7b 10 18                 u64 [sp + 0x18] = ra
  6297: 7b 15 10                 u64 [sp + 0x10] = s0
  6300: 7b 16 08                 u64 [sp + 0x8] = s1
  6303: 53 19 10 64              jump @380 if a2 <u 16
      :                          @372
  6307: 8d 7a                    i32 a3 = -a0
  6309: 84 a2 07                 t0 = a3 & 0x7
  6312: c8 27 0b                 a4 = a0 + t0
  6315: 51 02 15                 jump @375 if t0 == 0
      :                          @373
  6318: 64 8c                    a5 = a1
  6320: 64 75                    s0 = a0
  6322: 01                       fallthrough
      :                          @374
  6323: 7c ca                    a3 = u8 [a5]
  6325: 78 5a                    u8 [s0] = a3
  6327: 95 55 01                 s0 = s0 + 0x1
  6330: 95 cc 01                 a5 = a5 + 0x1
  6333: ac b5 f6                 jump @374 if s0 <u a4
      :                          @375
  6336: c8 28 03                 t1 = a1 + t0
  6339: c9 29 02                 t0 = a2 - t0
  6342: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  6345: 84 38 07                 a1 = t1 & 0x7
  6348: c8 4b 0a                 a3 = a4 + t2
  6351: 51 08 3b                 jump @382 if a1 == 0
      :                          @376
  6354: 58 04 4b                 jump @385 if t2 <=s 0
      :                          @377
  6357: 97 38 03                 a1 = t1 << 0x3
  6360: 84 80 38                 ra = a1 & 0x38
  6363: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6366: 82 c5                    s0 = u64 [a5]
  6368: 8d 88                    i32 a1 = -a1
  6370: 84 88 38                 a1 = a1 & 0x38
  6373: 95 cc 08                 a5 = a5 + 0x8
  6376: 01                       fallthrough
      :                          @378
  6377: 82 c6                    s1 = u64 [a5]
  6379: d0 05 05                 s0 = s0 >> ra
  6382: cf 86 09                 a2 = s1 << a1
  6385: d4 59 09                 a2 = a2 | s0
  6388: 7b b9                    u64 [a4] = a2
  6390: 95 bb 08                 a4 = a4 + 0x8
  6393: 95 cc 08                 a5 = a5 + 0x8
  6396: 64 65                    s0 = s1
  6398: ac ab eb                 jump @378 if a4 <u a3
      :                          @379
  6401: 28 1c                    jump @385
      :                          @380
  6403: 64 7a                    a3 = a0
  6405: 52 09 21                 jump @386 if a2 != 0
      :                          @381
  6408: 28 2f                    jump @388
      :                          @382
  6410: 58 04 13                 jump @385 if t2 <=s 0
      :                          @383
  6413: 64 38                    a1 = t1
  6415: 01                       fallthrough
      :                          @384
  6416: 82 89                    a2 = u64 [a1]
  6418: 7b b9                    u64 [a4] = a2
  6420: 95 bb 08                 a4 = a4 + 0x8
  6423: 95 88 08                 a1 = a1 + 0x8
  6426: ac ab f6                 jump @384 if a4 <u a3
      :                          @385
  6429: c8 43 08                 a1 = t1 + t2
  6432: 84 29 07                 a2 = t0 & 0x7
  6435: 51 09 14                 jump @388 if a2 == 0
      :                          @386
  6438: c8 a9 09                 a2 = a2 + a3
  6441: 01                       fallthrough
      :                          @387
  6442: 7c 8b                    a4 = u8 [a1]
  6444: 78 ab                    u8 [a3] = a4
  6446: 95 aa 01                 a3 = a3 + 0x1
  6449: 95 88 01                 a1 = a1 + 0x1
  6452: ac 9a f6                 jump @387 if a3 <u a2
      :                          @388
  6455: 82 10 18                 ra = u64 [sp + 0x18]
  6458: 82 15 10                 s0 = u64 [sp + 0x10]
  6461: 82 16 08                 s1 = u64 [sp + 0x8]
  6464: 95 11 20                 sp = sp + 0x20
  6467: 32 00                    ret
      :                          @389
  6469: 53 19 10 48              jump @398 if a2 <u 16
      :                          @390
  6473: 8d 7a                    i32 a3 = -a0
  6475: 84 aa 07                 a3 = a3 & 0x7
  6478: c8 a7 0b                 a4 = a0 + a3
  6481: 51 0a 0e                 jump @393 if a3 == 0
      :                          @391
  6484: 64 7c                    a5 = a0
  6486: 01                       fallthrough
      :                          @392
  6487: 78 c8                    u8 [a5] = a1
  6489: 95 cc 01                 a5 = a5 + 0x1
  6492: ac bc fb                 jump @392 if a5 <u a4
      :                          @393
  6495: c9 a9 03                 t1 = a2 - a3
  6498: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6501: c8 cb 0a                 a3 = a4 + a5
  6504: 58 0c 1d                 jump @396 if a5 <=s 0
      :                          @394
  6507: 84 82 ff 00              t0 = a1 & 0xff
  6511: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6521: ca 92 0c                 a5 = t0 * a2
  6524: 01                       fallthrough
      :                          @395
  6525: 7b bc                    u64 [a4] = a5
  6527: 95 bb 08                 a4 = a4 + 0x8
  6530: ac ab fb                 jump @395 if a4 <u a3
      :                          @396
  6533: 84 39 07                 a2 = t1 & 0x7
  6536: 52 09 0a                 jump @399 if a2 != 0
      :                          @397
  6539: 28 13                    jump @401
      :                          @398
  6541: 64 7a                    a3 = a0
  6543: 51 09 0f                 jump @401 if a2 == 0
      :                          @399
  6546: c8 a9 09                 a2 = a2 + a3
  6549: 01                       fallthrough
      :                          @400
  6550: 78 a8                    u8 [a3] = a1
  6552: 95 aa 01                 a3 = a3 + 0x1
  6555: ac 9a fb                 jump @400 if a3 <u a2
      :                          @401
  6558: 32 00                    ret
      :                          @402 [@dyn 79]
  6560: 82 77                    a0 = u64 [a0]
  6562: 01                       fallthrough
      :                          @403
  6563: 28                       jump @403
      :                          @404
  6564: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6567: 7b 10 50                 u64 [sp + 0x50] = ra
  6570: 7b 15 48                 u64 [sp + 0x48] = s0
  6573: 7b 16 40                 u64 [sp + 0x40] = s1
  6576: 7b 18                    u64 [sp] = a1
  6578: 98 79 04                 a2 = a0 >> 0x4
  6581: 33 08 27                 a1 = 0x27
  6584: 33 0a 7f 03 01           a3 = 0x1037f
  6589: 53 29 71 02 7b           jump @407 if a2 <u 625
      :                          @405
  6594: 33 08 27                 a1 = 0x27
  6597: 95 1b 3e                 a4 = sp + 0x3e
  6600: 3a 09 08 00 03           a2 = u64 [0x30008]
  6605: 7b 19 10                 u64 [sp + 0x10] = a2
  6608: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  6614: 33 03 7b 14              t1 = 0x147b
  6618: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  6624: 01                       fallthrough
      :                          @406
  6625: 64 72                    t0 = a0
  6627: 82 17 10                 a0 = u64 [sp + 0x10]
  6630: d6 72 07                 a0 = t0 mulhu a0
  6633: 98 77 0b                 a0 = a0 >> 0xb
  6636: 82 19 08                 a2 = u64 [sp + 0x8]
  6639: c0 97 09                 i32 a2 = a0 * a2
  6642: c8 29 06                 s1 = a2 + t0
  6645: 97 69 30                 a2 = s1 << 0x30
  6648: 98 99 32                 a2 = a2 >> 0x32
  6651: ca 39 09                 a2 = a2 * t1
  6654: 98 94 11                 t2 = a2 >> 0x11
  6657: 98 99 10                 a2 = a2 >> 0x10
  6660: 84 99 fe 07              a2 = a2 & 0x7fe
  6664: 96 4c 9c                 a5 = t2 * 0xffffffffffffff9c
  6667: c8 6c 0c                 a5 = a5 + s1
  6670: 97 cc 31                 a5 = a5 << 0x31
  6673: 98 cc 30                 a5 = a5 >> 0x30
  6676: c8 a9 09                 a2 = a2 + a3
  6679: 7c 96                    s1 = u8 [a2]
  6681: 7c 99 01                 a2 = u8 [a2 + 0x1]
  6684: c8 ac 0c                 a5 = a5 + a3
  6687: 7c c5 01                 s0 = u8 [a5 + 0x1]
  6690: 7c cc                    a5 = u8 [a5]
  6692: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
  6695: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
  6698: 78 b5 01                 u8 [a4 + 0x1] = s0
  6701: 78 bc                    u8 [a4] = a5
  6703: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  6706: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  6709: ac 20 ac                 jump @406 if ra <u t0
      :                          @407
  6712: 54 17 63 36              jump @409 if a0 <=u 99
      :                          @408
  6716: 97 79 30                 a2 = a0 << 0x30
  6719: 98 99 32                 a2 = a2 >> 0x32
  6722: 96 99 7b 14              a2 = a2 * 0x147b
  6726: 98 99 11                 a2 = a2 >> 0x11
  6729: 96 9b 9c                 a4 = a2 * 0xffffffffffffff9c
  6732: c8 b7 07                 a0 = a0 + a4
  6735: 97 77 31                 a0 = a0 << 0x31
  6738: 98 77 30                 a0 = a0 >> 0x30
  6741: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6744: c8 a7 07                 a0 = a0 + a3
  6747: 7c 7b 01                 a4 = u8 [a0 + 0x1]
  6750: 7c 77                    a0 = u8 [a0]
  6752: 95 1c 19                 a5 = sp + 0x19
  6755: c8 8c 0c                 a5 = a5 + a1
  6758: 78 cb 01                 u8 [a5 + 0x1] = a4
  6761: 78 c7                    u8 [a5] = a0
  6763: 64 97                    a0 = a2
  6765: 01                       fallthrough
      :                          @409
  6766: 55 17 0a 14              jump @411 if a0 >=u 10
      :                          @410
  6770: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6773: 95 19 19                 a2 = sp + 0x19
  6776: c8 89 09                 a2 = a2 + a1
  6779: 83 77 30                 i32 a0 = a0 + 0x30
  6782: 78 97                    u8 [a2] = a0
  6784: 28 1c                    jump @412
      :                          @411
  6786: 97 77 01                 a0 = a0 << 0x1
  6789: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6792: c8 a7 07                 a0 = a0 + a3
  6795: 7c 79 01                 a2 = u8 [a0 + 0x1]
  6798: 7c 77                    a0 = u8 [a0]
  6800: 95 1a 19                 a3 = sp + 0x19
  6803: c8 8a 0a                 a3 = a3 + a1
  6806: 78 a9 01                 u8 [a3 + 0x1] = a2
  6809: 78 a7                    u8 [a3] = a0
  6811: 01                       fallthrough
      :                          @412
  6812: 95 1a 19                 a3 = sp + 0x19
  6815: c8 8a 0a                 a3 = a3 + a1
  6818: 9a 8b 27                 a4 = 0x27 - a1
  6821: 33 08 60 03 01           a1 = 0x10360
  6826: 82 17                    a0 = u64 [sp]
  6828: 33 09                    a2 = 0
  6830: 50 20 a0 00 13           ra = 160, jump @414
      :                          @413 [@dyn 80]
  6835: 82 10 50                 ra = u64 [sp + 0x50]
  6838: 82 15 48                 s0 = u64 [sp + 0x48]
  6841: 82 16 40                 s1 = u64 [sp + 0x40]
  6844: 95 11 58                 sp = sp + 0x58
  6847: 32 00                    ret
      :                          @414
  6849: 95 11 98                 sp = sp + 0xffffffffffffff98
  6852: 7b 10 60                 u64 [sp + 0x60] = ra
  6855: 7b 15 58                 u64 [sp + 0x58] = s0
  6858: 7b 16 50                 u64 [sp + 0x50] = s1
  6861: 80 73 34                 t1 = u32 [a0 + 0x34]
  6864: 7b 1a 20                 u64 [sp + 0x20] = a3
  6867: 64 9c                    a5 = a2
  6869: 84 36 01                 s1 = t1 & 0x1
  6872: 33 02 2b                 t0 = 0x2b
  6875: 33 09 00 00 11           a2 = 0x110000
  6880: 84 3a 04                 a3 = t1 & 0x4
  6883: 7b 1b 28                 u64 [sp + 0x28] = a4
  6886: c8 b6 04                 t2 = s1 + a4
  6889: 7b 1c 30                 u64 [sp + 0x30] = a5
  6892: 52 0a 10                 jump @417 if a3 != 0
      :                          @415
  6895: 49 11 38                 u64 [sp + 56] = 0
  6898: 82 78                    a1 = u64 [a0]
  6900: 94 69 2b                 a2 = 0x2b if s1 != 0
  6903: 52 08 35                 jump @421 if a1 != 0
      :                          @416
  6906: 28 56                    jump @426
      :                          @417
  6908: 7b 18 38                 u64 [sp + 0x38] = a1
  6911: 33 09                    a2 = 0
  6913: 51 0c 1b                 jump @420 if a5 == 0
      :                          @418
  6916: 82 1b 38                 a4 = u64 [sp + 0x38]
  6919: 01                       fallthrough
      :                          @419
  6920: 7d b5                    s0 = i8 [a4]
  6922: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  6925: 85 5a 01                 a3 = s0 ^ 0x1
  6928: c8 a9 09                 a2 = a2 + a3
  6931: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  6934: 95 bb 01                 a4 = a4 + 0x1
  6937: 52 0c ef                 jump @419 if a5 != 0
      :                          @420
  6940: c8 94 04                 t2 = t2 + a2
  6943: 33 09 00 00 11           a2 = 0x110000
  6948: 82 78                    a1 = u64 [a0]
  6950: db 62 09                 a2 = t0 if s1 != 0
  6953: 51 08 27                 jump @426 if a1 == 0
      :                          @421
  6956: 82 7a 08                 a3 = u64 [a0 + 0x8]
  6959: ae a4 21                 jump @426 if t2 >=u a3
      :                          @422
  6962: 84 38 08                 a1 = t1 & 0x8
  6965: 52 08 51                 jump @429 if a1 != 0
      :                          @423
  6968: 7c 76 38                 s1 = u8 [a0 + 0x38]
  6971: c9 4a 0a                 a3 = a3 - t2
  6974: 7b 19 18                 u64 [sp + 0x18] = a2
  6977: 5a 16 01 a0 00           jump @436 if s1 >s 1
      :                          @424
  6982: 52 06 ad 00              jump @438 if s1 != 0
      :                          @425
  6986: 7b 1a 10                 u64 [sp + 0x10] = a3
  6989: 28 ac 00                 jump @439
      :                          @426
  6992: 82 75 20                 s0 = u64 [a0 + 0x20]
  6995: 82 76 28                 s1 = u64 [a0 + 0x28]
  6998: 64 57                    a0 = s0
  7000: 64 68                    a1 = s1
  7002: 82 1a 38                 a3 = u64 [sp + 0x38]
  7005: 82 1b 30                 a4 = u64 [sp + 0x30]
  7008: 50 20 a2 00 75 01        ra = 162, jump @459
      :                          @427 [@dyn 81]
  7014: 33 08 01                 a1 = 0x1
  7017: 52 07 be 00              jump @444 if a0 != 0
      :                          @428
  7021: 82 6c 18                 a5 = u64 [s1 + 0x18]
  7024: 64 57                    a0 = s0
  7026: 82 18 20                 a1 = u64 [sp + 0x20]
  7029: 82 19 28                 a2 = u64 [sp + 0x28]
  7032: 82 10 60                 ra = u64 [sp + 0x60]
  7035: 82 15 58                 s0 = u64 [sp + 0x58]
  7038: 82 16 50                 s1 = u64 [sp + 0x50]
  7041: 95 11 68                 sp = sp + 0x68
  7044: 32 0c                    jump [a5]
      :                          @429
  7046: 7b 1a 40                 u64 [sp + 0x40] = a3
  7049: 64 45                    s0 = t2
  7051: 81 78 30                 a1 = i32 [a0 + 0x30]
  7054: 7b 18 10                 u64 [sp + 0x10] = a1
  7057: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  7060: 7b 1a 08                 u64 [sp + 0x8] = a3
  7063: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7066: 82 78 28                 a1 = u64 [a0 + 0x28]
  7069: 48 17 30 30              u32 [a0 + 48] = 0x30
  7073: 7b 17                    u64 [sp] = a0
  7075: 46 17 38 01              u8 [a0 + 56] = 0x1
  7079: 7b 1a 48                 u64 [sp + 0x48] = a3
  7082: 64 a7                    a0 = a3
  7084: 64 86                    s1 = a1
  7086: 82 1a 38                 a3 = u64 [sp + 0x38]
  7089: 82 1b 30                 a4 = u64 [sp + 0x30]
  7092: 50 20 a4 00 21 01        ra = 164, jump @459
      :                          @430 [@dyn 82]
  7098: 52 07 69                 jump @443 if a0 != 0
      :                          @431
  7101: 82 17 40                 a0 = u64 [sp + 0x40]
  7104: c9 57 05                 s0 = a0 - s0
  7107: 95 55 01                 s0 = s0 + 0x1
  7110: 01                       fallthrough
      :                          @432
  7111: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7114: 51 05 cb 00              jump @454 if s0 == 0
      :                          @433
  7118: 82 69 20                 a2 = u64 [s1 + 0x20]
  7121: 33 08 30                 a1 = 0x30
  7124: 82 17 48                 a0 = u64 [sp + 0x48]
  7127: b4 90 02 a6 00           ra = 166, jump [a2]
      :                          @434 [@dyn 83]
  7132: 51 07 eb                 jump @432 if a0 == 0
      :                          @435
  7135: 28 44                    jump @443
      :                          @436
  7137: 52 16 02 12              jump @438 if s1 != 2
      :                          @437
  7141: 98 a6 01                 s1 = a3 >> 0x1
  7144: 95 a8 01                 a1 = a3 + 0x1
  7147: 98 88 01                 a1 = a1 >> 0x1
  7150: 7b 18 10                 u64 [sp + 0x10] = a1
  7153: 28 08                    jump @439
      :                          @438
  7155: 64 a6                    s1 = a3
  7157: 49 11 10                 u64 [sp + 16] = 0
  7160: 01                       fallthrough
      :                          @439
  7161: 82 78 20                 a1 = u64 [a0 + 0x20]
  7164: 7b 18 48                 u64 [sp + 0x48] = a1
  7167: 82 75 28                 s0 = u64 [a0 + 0x28]
  7170: 81 77 30                 a0 = i32 [a0 + 0x30]
  7173: 7b 17 40                 u64 [sp + 0x40] = a0
  7176: 95 66 01                 s1 = s1 + 0x1
  7179: 01                       fallthrough
      :                          @440
  7180: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7183: 51 06 28                 jump @445 if s1 == 0
      :                          @441
  7186: 82 59 20                 a2 = u64 [s0 + 0x20]
  7189: 82 17 48                 a0 = u64 [sp + 0x48]
  7192: 82 18 40                 a1 = u64 [sp + 0x40]
  7195: b4 90 02 a8 00           ra = 168, jump [a2]
      :                          @442 [@dyn 84]
  7200: 51 07 ec                 jump @440 if a0 == 0
      :                          @443
  7203: 33 08 01                 a1 = 0x1
  7206: 01                       fallthrough
      :                          @444
  7207: 64 87                    a0 = a1
  7209: 82 10 60                 ra = u64 [sp + 0x60]
  7212: 82 15 58                 s0 = u64 [sp + 0x58]
  7215: 82 16 50                 s1 = u64 [sp + 0x50]
  7218: 95 11 68                 sp = sp + 0x68
  7221: 32 00                    ret
      :                          @445
  7223: 82 16 48                 s1 = u64 [sp + 0x48]
  7226: 64 67                    a0 = s1
  7228: 64 58                    a1 = s0
  7230: 82 19 18                 a2 = u64 [sp + 0x18]
  7233: 82 1a 38                 a3 = u64 [sp + 0x38]
  7236: 82 1b 30                 a4 = u64 [sp + 0x30]
  7239: 50 20 aa 00 8e 00        ra = 170, jump @459
      :                          @446 [@dyn 85]
  7245: 33 08 01                 a1 = 0x1
  7248: 52 07 d7                 jump @444 if a0 != 0
      :                          @447
  7251: 82 5a 18                 a3 = u64 [s0 + 0x18]
  7254: 64 67                    a0 = s1
  7256: 82 18 20                 a1 = u64 [sp + 0x20]
  7259: 82 19 28                 a2 = u64 [sp + 0x28]
  7262: b4 a0 02 ac 00           ra = 172, jump [a3]
      :                          @448 [@dyn 86]
  7267: 33 08 01                 a1 = 0x1
  7270: 52 07 c1                 jump @444 if a0 != 0
      :                          @449
  7273: 82 17 10                 a0 = u64 [sp + 0x10]
  7276: 9a 77                    a0 = -a0
  7278: 7b 17 38                 u64 [sp + 0x38] = a0
  7281: 33 06 ff                 s1 = 0xffffffffffffffff
  7284: 01                       fallthrough
      :                          @450
  7285: 82 17 38                 a0 = u64 [sp + 0x38]
  7288: c8 67 07                 a0 = a0 + s1
  7291: 51 17 ff 45              jump @457 if a0 == 4294967295
      :                          @451
  7295: 82 59 20                 a2 = u64 [s0 + 0x20]
  7298: 82 17 48                 a0 = u64 [sp + 0x48]
  7301: 82 18 40                 a1 = u64 [sp + 0x40]
  7304: b4 90 02 ae 00           ra = 174, jump [a2]
      :                          @452 [@dyn 87]
  7309: 95 66 01                 s1 = s1 + 0x1
  7312: 51 07 e5                 jump @450 if a0 == 0
      :                          @453
  7315: 28 39                    jump @458
      :                          @454
  7317: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7320: 82 17 48                 a0 = u64 [sp + 0x48]
  7323: 82 18 20                 a1 = u64 [sp + 0x20]
  7326: 82 19 28                 a2 = u64 [sp + 0x28]
  7329: b4 a0 02 b0 00           ra = 176, jump [a3]
      :                          @455 [@dyn 88]
  7334: 33 08 01                 a1 = 0x1
  7337: 52 07 7e ff              jump @444 if a0 != 0
      :                          @456
  7341: 33 08                    a1 = 0
  7343: 82 16                    s1 = u64 [sp]
  7345: 82 17 10                 a0 = u64 [sp + 0x10]
  7348: 7a 67 30                 u32 [s1 + 0x30] = a0
  7351: 82 17 08                 a0 = u64 [sp + 0x8]
  7354: 78 67 38                 u8 [s1 + 0x38] = a0
  7357: 28 6a ff                 jump @444
      :                          @457
  7360: 82 16 10                 s1 = u64 [sp + 0x10]
  7363: 82 17 10                 a0 = u64 [sp + 0x10]
  7366: d8 76 08                 a1 = s1 <u a0
  7369: 28 5e ff                 jump @444
      :                          @458
  7372: 82 17 10                 a0 = u64 [sp + 0x10]
  7375: d8 76 08                 a1 = s1 <u a0
  7378: 28 55 ff                 jump @444
      :                          @459
  7381: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7384: 7b 10 20                 u64 [sp + 0x20] = ra
  7387: 7b 15 18                 u64 [sp + 0x18] = s0
  7390: 7b 16 10                 u64 [sp + 0x10] = s1
  7393: 83 9c                    i32 a5 = a2 + 0
  7395: 33 02 00 00 11           t0 = 0x110000
  7400: 64 a6                    s1 = a3
  7402: 64 85                    s0 = a1
  7404: 64 7a                    a3 = a0
  7406: aa 2c 21                 jump @462 if a5 == t0
      :                          @460
  7409: 82 5c 20                 a5 = u64 [s0 + 0x20]
  7412: 64 a7                    a0 = a3
  7414: 64 98                    a1 = a2
  7416: 7b 1b 08                 u64 [sp + 0x8] = a4
  7419: 7b 1a                    u64 [sp] = a3
  7421: b4 c0 02 b2 00           ra = 178, jump [a5]
      :                          @461 [@dyn 89]
  7426: 82 1a                    a3 = u64 [sp]
  7428: 82 1b 08                 a4 = u64 [sp + 0x8]
  7431: 64 78                    a1 = a0
  7433: 33 07 01                 a0 = 0x1
  7436: 52 08 20                 jump @465 if a1 != 0
      :                          @462
  7439: 51 06 1a                 jump @464 if s1 == 0
      :                          @463
  7442: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7445: 64 a7                    a0 = a3
  7447: 64 68                    a1 = s1
  7449: 64 b9                    a2 = a4
  7451: 82 10 20                 ra = u64 [sp + 0x20]
  7454: 82 15 18                 s0 = u64 [sp + 0x18]
  7457: 82 16 10                 s1 = u64 [sp + 0x10]
  7460: 95 11 28                 sp = sp + 0x28
  7463: 32 0c                    jump [a5]
      :                          @464
  7465: 33 07                    a0 = 0
  7467: 01                       fallthrough
      :                          @465
  7468: 82 10 20                 ra = u64 [sp + 0x20]
  7471: 82 15 18                 s0 = u64 [sp + 0x18]
  7474: 82 16 10                 s1 = u64 [sp + 0x10]
  7477: 95 11 28                 sp = sp + 0x28
  7480: 32 00                    ret
      :                          @466
  7482: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7486: 7b 10 80 00              u64 [sp + 0x80] = ra
  7490: 7b 15 78                 u64 [sp + 0x78] = s0
  7493: 7b 16 70                 u64 [sp + 0x70] = s1
  7496: 49 11 60 20              u64 [sp + 96] = 0x20
  7500: 33 0a 03                 a3 = 0x3
  7503: 78 1a 68                 u8 [sp + 0x68] = a3
  7506: 82 96 20                 s1 = u64 [a2 + 0x20]
  7509: 49 11 30                 u64 [sp + 48] = 0
  7512: 49 11 40                 u64 [sp + 64] = 0
  7515: 7b 17 50                 u64 [sp + 0x50] = a0
  7518: 7b 18 58                 u64 [sp + 0x58] = a1
  7521: 51 06 0a 01              jump @488 if s1 == 0
      :                          @467
  7525: 82 97 28                 a0 = u64 [a2 + 0x28]
  7528: 51 07 79 01              jump @498 if a0 == 0
      :                          @468
  7532: 49 11 28                 u64 [sp + 40] = 0
  7535: 82 95                    s0 = u64 [a2]
  7537: 7b 19 08                 u64 [sp + 0x8] = a2
  7540: 82 98 10                 a1 = u64 [a2 + 0x10]
  7543: 7b 18 18                 u64 [sp + 0x18] = a1
  7546: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7549: 97 88 03                 a1 = a1 << 0x3
  7552: 98 88 03                 a1 = a1 >> 0x3
  7555: 95 88 01                 a1 = a1 + 0x1
  7558: 7b 18                    u64 [sp] = a1
  7560: 95 55 08                 s0 = s0 + 0x8
  7563: 96 78 38                 a1 = a0 * 0x38
  7566: 95 66 18                 s1 = s1 + 0x18
  7569: 33 07 9e 00              a0 = 0x9e
  7573: 7b 17 10                 u64 [sp + 0x10] = a0
  7576: 01                       fallthrough
      :                          @469
  7577: 7b 18 20                 u64 [sp + 0x20] = a1
  7580: 82 59                    a2 = u64 [s0]
  7582: 51 09 18                 jump @472 if a2 == 0
      :                          @470
  7585: 82 1a 58                 a3 = u64 [sp + 0x58]
  7588: 82 17 50                 a0 = u64 [sp + 0x50]
  7591: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  7594: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7597: b4 a0 02 b4 00           ra = 180, jump [a3]
      :                          @471 [@dyn 90]
  7602: 52 07 55 01              jump @501 if a0 != 0
      :                          @472
  7606: 81 67 10                 a0 = i32 [s1 + 0x10]
  7609: 7a 17 60                 u32 [sp + 0x60] = a0
  7612: 7c 67 18                 a0 = u8 [s1 + 0x18]
  7615: 78 17 68                 u8 [sp + 0x68] = a0
  7618: 81 67 14                 a0 = i32 [s1 + 0x14]
  7621: 7a 17 64                 u32 [sp + 0x64] = a0
  7624: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7627: 82 67                    a0 = u64 [s1]
  7629: 51 08 26                 jump @477 if a1 == 0
      :                          @473
  7632: 52 18 01 16              jump @475 if a1 != 1
      :                          @474
  7636: 97 77 04                 a0 = a0 << 0x4
  7639: 82 18 18                 a1 = u64 [sp + 0x18]
  7642: c8 87 07                 a0 = a0 + a1
  7645: 82 78 08                 a1 = u64 [a0 + 0x8]
  7648: 82 19 10                 a2 = u64 [sp + 0x10]
  7651: aa 98 07                 jump @476 if a1 == a2
      :                          @475
  7654: 33 08                    a1 = 0
  7656: 28 0f                    jump @478
      :                          @476
  7658: 82 77                    a0 = u64 [a0]
  7660: 82 77                    a0 = u64 [a0]
  7662: 33 08 01                 a1 = 0x1
  7665: 28 06                    jump @478
      :                          @477
  7667: 33 08 01                 a1 = 0x1
  7670: 01                       fallthrough
      :                          @478
  7671: 7b 18 30                 u64 [sp + 0x30] = a1
  7674: 7b 17 38                 u64 [sp + 0x38] = a0
  7677: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  7680: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  7683: 51 08 26                 jump @483 if a1 == 0
      :                          @479
  7686: 52 18 01 16              jump @481 if a1 != 1
      :                          @480
  7690: 97 77 04                 a0 = a0 << 0x4
  7693: 82 18 18                 a1 = u64 [sp + 0x18]
  7696: c8 87 07                 a0 = a0 + a1
  7699: 82 78 08                 a1 = u64 [a0 + 0x8]
  7702: 82 19 10                 a2 = u64 [sp + 0x10]
  7705: aa 98 07                 jump @482 if a1 == a2
      :                          @481
  7708: 33 08                    a1 = 0
  7710: 28 0f                    jump @484
      :                          @482
  7712: 82 77                    a0 = u64 [a0]
  7714: 82 77                    a0 = u64 [a0]
  7716: 33 08 01                 a1 = 0x1
  7719: 28 06                    jump @484
      :                          @483
  7721: 33 08 01                 a1 = 0x1
  7724: 01                       fallthrough
      :                          @484
  7725: 7b 18 40                 u64 [sp + 0x40] = a1
  7728: 7b 17 48                 u64 [sp + 0x48] = a0
  7731: 82 67 08                 a0 = u64 [s1 + 0x8]
  7734: 97 77 04                 a0 = a0 << 0x4
  7737: 82 18 18                 a1 = u64 [sp + 0x18]
  7740: c8 78 08                 a1 = a1 + a0
  7743: 82 87                    a0 = u64 [a1]
  7745: 82 89 08                 a2 = u64 [a1 + 0x8]
  7748: 95 18 30                 a1 = sp + 0x30
  7751: b4 90 02 b6 00           ra = 182, jump [a2]
      :                          @485 [@dyn 91]
  7756: 52 07 bb 00              jump @501 if a0 != 0
      :                          @486
  7760: 95 55 10                 s0 = s0 + 0x10
  7763: 82 18 20                 a1 = u64 [sp + 0x20]
  7766: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  7769: 95 66 38                 s1 = s1 + 0x38
  7772: 82 17 28                 a0 = u64 [sp + 0x28]
  7775: 95 77 01                 a0 = a0 + 0x1
  7778: 7b 17 28                 u64 [sp + 0x28] = a0
  7781: 52 08 34 ff              jump @469 if a1 != 0
      :                          @487
  7785: 28 6b                    jump @496
      :                          @488
  7787: 82 97 18                 a0 = u64 [a2 + 0x18]
  7790: 51 07 73                 jump @498 if a0 == 0
      :                          @489
  7793: 82 95 10                 s0 = u64 [a2 + 0x10]
  7796: 33 0a                    a3 = 0
  7798: 97 78 04                 a1 = a0 << 0x4
  7801: c8 58 08                 a1 = a1 + s0
  7804: 7b 18 20                 u64 [sp + 0x20] = a1
  7807: 7b 19 08                 u64 [sp + 0x8] = a2
  7810: 82 96                    s1 = u64 [a2]
  7812: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7815: 97 77 04                 a0 = a0 << 0x4
  7818: 98 77 04                 a0 = a0 >> 0x4
  7821: 95 77 01                 a0 = a0 + 0x1
  7824: 7b 17                    u64 [sp] = a0
  7826: 95 66 08                 s1 = s1 + 0x8
  7829: 01                       fallthrough
      :                          @490
  7830: 7b 1a 28                 u64 [sp + 0x28] = a3
  7833: 82 69                    a2 = u64 [s1]
  7835: 51 09 17                 jump @493 if a2 == 0
      :                          @491
  7838: 82 1a 58                 a3 = u64 [sp + 0x58]
  7841: 82 17 50                 a0 = u64 [sp + 0x50]
  7844: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7847: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7850: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @492 [@dyn 92]
  7855: 52 07 58                 jump @501 if a0 != 0
      :                          @493
  7858: 82 57                    a0 = u64 [s0]
  7860: 82 59 08                 a2 = u64 [s0 + 0x8]
  7863: 95 18 30                 a1 = sp + 0x30
  7866: b4 90 02 ba 00           ra = 186, jump [a2]
      :                          @494 [@dyn 93]
  7871: 52 07 48                 jump @501 if a0 != 0
      :                          @495
  7874: 95 66 10                 s1 = s1 + 0x10
  7877: 95 55 10                 s0 = s0 + 0x10
  7880: 82 1a 28                 a3 = u64 [sp + 0x28]
  7883: 95 aa 01                 a3 = a3 + 0x1
  7886: 82 17 20                 a0 = u64 [sp + 0x20]
  7889: ab 75 c5                 jump @490 if s0 != a0
      :                          @496
  7892: 82 19 08                 a2 = u64 [sp + 0x8]
  7895: 82 1a                    a3 = u64 [sp]
  7897: 82 97 08                 a0 = u64 [a2 + 0x8]
  7900: ac 7a 0d                 jump @499 if a3 <u a0
      :                          @497
  7903: 28 2d                    jump @502
      :                          @498
  7905: 33 0a                    a3 = 0
  7907: 82 97 08                 a0 = u64 [a2 + 0x8]
  7910: 54 07 26                 jump @502 if a0 <=u 0
      :                          @499
  7913: 82 97                    a0 = u64 [a2]
  7915: 97 a8 04                 a1 = a3 << 0x4
  7918: c8 87 09                 a2 = a0 + a1
  7921: 82 1a 58                 a3 = u64 [sp + 0x58]
  7924: 82 17 50                 a0 = u64 [sp + 0x50]
  7927: 82 98                    a1 = u64 [a2]
  7929: 82 99 08                 a2 = u64 [a2 + 0x8]
  7932: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7935: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @500 [@dyn 94]
  7940: 51 07 08                 jump @502 if a0 == 0
      :                          @501
  7943: 33 07 01                 a0 = 0x1
  7946: 28 05                    jump @503
      :                          @502
  7948: 33 07                    a0 = 0
  7950: 01                       fallthrough
      :                          @503
  7951: 82 10 80 00              ra = u64 [sp + 0x80]
  7955: 82 15 78                 s0 = u64 [sp + 0x78]
  7958: 82 16 70                 s1 = u64 [sp + 0x70]
  7961: 95 11 88 00              sp = sp + 0x88
  7965: 32 00                    ret
      :                          @504 [@dyn 95]
  7967: 32 00                    ret
      :                          @505 [@dyn 96]
  7969: 95 11 88                 sp = sp + 0xffffffffffffff88
  7972: 7b 10 70                 u64 [sp + 0x70] = ra
  7975: 7b 15 68                 u64 [sp + 0x68] = s0
  7978: 7b 16 60                 u64 [sp + 0x60] = s1
  7981: 64 93                    t1 = a2
  7983: 33 0c                    a5 = 0
  7985: 33 02                    t0 = 0
  7987: 33 0b                    a4 = 0
  7989: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
  7999: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  8005: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
  8015: 82 79 10                 a2 = u64 [a0 + 0x10]
  8018: 7b 19 48                 u64 [sp + 0x48] = a2
  8021: 82 79                    a2 = u64 [a0]
  8023: 7b 19 30                 u64 [sp + 0x30] = a2
  8026: 82 77 08                 a0 = u64 [a0 + 0x8]
  8029: 7b 17 28                 u64 [sp + 0x28] = a0
  8032: 7b 18 50                 u64 [sp + 0x50] = a1
  8035: 95 88 08                 a1 = a1 + 0x8
  8038: 7b 18                    u64 [sp] = a1
  8040: 33 07 71 03 01           a0 = 0x10371
  8045: 7b 17 08                 u64 [sp + 0x8] = a0
  8048: 33 05 0a                 s0 = 0xa
  8051: 7b 13 20                 u64 [sp + 0x20] = t1
  8054: 7b 14 18                 u64 [sp + 0x18] = t2
  8057: 7b 10 10                 u64 [sp + 0x10] = ra
  8060: 28 3a                    jump @509
      :                          @506
  8062: c8 89 07                 a0 = a2 + a1
  8065: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8068: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8071: 88 77 01                 a0 = a0 <u 0x1
  8074: 01                       fallthrough
      :                          @507
  8075: 82 1a 48                 a3 = u64 [sp + 0x48]
  8078: 78 a7                    u8 [a3] = a0
  8080: 82 17 28                 a0 = u64 [sp + 0x28]
  8083: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8086: 82 17 30                 a0 = u64 [sp + 0x30]
  8089: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @508 [@dyn 97]
  8094: 64 52                    t0 = s0
  8096: 82 13 20                 t1 = u64 [sp + 0x20]
  8099: 82 14 18                 t2 = u64 [sp + 0x18]
  8102: 82 10 10                 ra = u64 [sp + 0x10]
  8105: 82 1c 58                 a5 = u64 [sp + 0x58]
  8108: 33 05 0a                 s0 = 0xa
  8111: 82 1b 38                 a4 = u64 [sp + 0x38]
  8114: 52 07 67 01              jump @550 if a0 != 0
      :                          @509
  8118: 84 b7 ff 00              a0 = a4 & 0xff
  8122: 52 07 5b 01              jump @549 if a0 != 0
      :                          @510
  8126: 7b 12 40                 u64 [sp + 0x40] = t0
  8129: ae c3 0a                 jump @513 if t1 >=u a5
      :                          @511
  8132: 28 f4 00                 jump @540
      :                          @512
  8135: ac c3 f1 00              jump @540 if t1 <u a5
      :                          @513
  8139: c9 c3 08                 a1 = t1 - a5
  8142: 82 16 50                 s1 = u64 [sp + 0x50]
  8145: c8 c6 06                 s1 = s1 + a5
  8148: 55 18 10 1d              jump @519 if a1 >=u 16
      :                          @514
  8152: aa c3 dd 00              jump @539 if t1 == a5
      :                          @515
  8156: 33 0a                    a3 = 0
  8158: 01                       fallthrough
      :                          @516
  8159: c8 a6 07                 a0 = s1 + a3
  8162: 7c 77                    a0 = u8 [a0]
  8164: aa 57 aa 00              jump @534 if a0 == s0
      :                          @517
  8168: 95 aa 01                 a3 = a3 + 0x1
  8171: ab a8 f4                 jump @516 if a1 != a3
      :                          @518
  8174: 28 c7 00                 jump @539
      :                          @519
  8177: 95 69 07                 a2 = s1 + 0x7
  8180: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  8183: c9 6a 07                 a0 = a3 - s1
  8186: d3 6a 0a                 a3 = a3 ^ s1
  8189: 88 aa 01                 a3 = a3 <u 0x1
  8192: 88 7b 01                 a4 = a0 <u 0x1
  8195: d4 ba 0a                 a3 = a3 | a4
  8198: 7b 1c 58                 u64 [sp + 0x58] = a5
  8201: 51 0a 44                 jump @525 if a3 == 0
      :                          @520
  8204: 33 07                    a0 = 0
  8206: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
  8209: 01                       fallthrough
      :                          @521
  8210: 82 1b 58                 a4 = u64 [sp + 0x58]
  8213: 82 19                    a2 = u64 [sp]
  8215: c8 9b 0b                 a4 = a4 + a2
  8218: 01                       fallthrough
      :                          @522
  8219: c8 76 0c                 a5 = s1 + a0
  8222: 82 cc                    a5 = u64 [a5]
  8224: c8 7b 09                 a2 = a4 + a0
  8227: 82 99                    a2 = u64 [a2]
  8229: d3 0c 05                 s0 = a5 ^ ra
  8232: c8 45 05                 s0 = s0 + t2
  8235: e0 c5 0c                 a5 = s0 & ~a5
  8238: d3 09 05                 s0 = a2 ^ ra
  8241: 3a 0a 10 00 03           a3 = u64 [0x30010]
  8246: c8 45 05                 s0 = s0 + t2
  8249: e0 95 09                 a2 = s0 & ~a2
  8252: d4 c9 09                 a2 = a2 | a5
  8255: d2 a9 09                 a2 = a2 & a3
  8258: 52 09 1f                 jump @528 if a2 != 0
      :                          @523
  8261: 95 77 10                 a0 = a0 + 0x10
  8264: ae 72 d3                 jump @522 if t0 >=u a0
      :                          @524
  8267: 28 16                    jump @528
      :                          @525
  8269: c8 a6 0b                 a4 = s1 + a3
  8272: 7c bb                    a4 = u8 [a4]
  8274: aa 5b 54                 jump @537 if a4 == s0
      :                          @526
  8277: 95 aa 01                 a3 = a3 + 0x1
  8280: ab a7 f5                 jump @525 if a0 != a3
      :                          @527
  8283: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
  8286: ae 72 b4                 jump @521 if t0 >=u a0
      :                          @528
  8289: aa 87 99 00              jump @546 if a0 == a1
      :                          @529
  8293: 33 0a                    a3 = 0
  8295: c8 76 06                 s1 = s1 + a0
  8298: c9 73 08                 a1 = t1 - a0
  8301: 82 1c 58                 a5 = u64 [sp + 0x58]
  8304: c9 c8 08                 a1 = a1 - a5
  8307: 33 05 0a                 s0 = 0xa
  8310: 82 12 40                 t0 = u64 [sp + 0x40]
  8313: 01                       fallthrough
      :                          @530
  8314: c8 a6 09                 a2 = s1 + a3
  8317: 7c 99                    a2 = u8 [a2]
  8319: aa 59 0b                 jump @533 if a2 == s0
      :                          @531
  8322: 95 aa 01                 a3 = a3 + 0x1
  8325: ab a8 f5                 jump @530 if a1 != a3
      :                          @532
  8328: 28 2d                    jump @539
      :                          @533
  8330: c8 7a 0a                 a3 = a3 + a0
  8333: 01                       fallthrough
      :                          @534
  8334: c8 ca 0a                 a3 = a3 + a5
  8337: 95 ac 01                 a5 = a3 + 0x1
  8340: ae 3a 33 ff              jump @512 if a3 >=u t1
      :                          @535
  8344: 82 17 50                 a0 = u64 [sp + 0x50]
  8347: c8 7a 0a                 a3 = a3 + a0
  8350: 7c a7                    a0 = u8 [a3]
  8352: ab 57 27 ff              jump @512 if a0 != s0
      :                          @536
  8356: 28 5d                    jump @547
      :                          @537
  8358: 82 1c 58                 a5 = u64 [sp + 0x58]
  8361: c8 ca 0a                 a3 = a3 + a5
  8364: 95 ac 01                 a5 = a3 + 0x1
  8367: ac 3a e9                 jump @535 if a3 <u t1
      :                          @538
  8370: 28 15 ff                 jump @512
      :                          @539
  8373: 64 3c                    a5 = t1
  8375: 01                       fallthrough
      :                          @540
  8376: 7b 1c 58                 u64 [sp + 0x58] = a5
  8379: 49 11 38 01              u64 [sp + 56] = 0x1
  8383: 64 25                    s0 = t0
  8385: 64 36                    s1 = t1
  8387: aa 32 52                 jump @549 if t0 == t1
      :                          @541
  8390: 82 17 48                 a0 = u64 [sp + 0x48]
  8393: 7c 77                    a0 = u8 [a0]
  8395: 51 07 1d                 jump @544 if a0 == 0
      :                          @542
  8398: 82 17 28                 a0 = u64 [sp + 0x28]
  8401: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8404: 33 09 04                 a2 = 0x4
  8407: 82 17 30                 a0 = u64 [sp + 0x30]
  8410: 82 18 08                 a1 = u64 [sp + 0x8]
  8413: b4 a0 02 c4 00           ra = 196, jump [a3]
      :                          @543 [@dyn 98]
  8418: 82 12 40                 t0 = u64 [sp + 0x40]
  8421: 52 07 34                 jump @550 if a0 != 0
      :                          @544
  8424: c9 26 09                 a2 = s1 - t0
  8427: 82 18 50                 a1 = u64 [sp + 0x50]
  8430: c8 28 08                 a1 = a1 + t0
  8433: ab 26 8d fe              jump @506 if s1 != t0
      :                          @545
  8437: 33 07                    a0 = 0
  8439: 28 94 fe                 jump @507
      :                          @546
  8442: 64 3c                    a5 = t1
  8444: 82 12 40                 t0 = u64 [sp + 0x40]
  8447: 28 b9                    jump @540
      :                          @547
  8449: 49 11 38                 u64 [sp + 56] = 0
  8452: 64 c6                    s1 = a5
  8454: 64 c5                    s0 = a5
  8456: 7b 1c 58                 u64 [sp + 0x58] = a5
  8459: 82 17 48                 a0 = u64 [sp + 0x48]
  8462: 7c 77                    a0 = u8 [a0]
  8464: 52 07 be                 jump @542 if a0 != 0
      :                          @548
  8467: 28 d5                    jump @544
      :                          @549
  8469: 33 07                    a0 = 0
  8471: 28 06                    jump @551
      :                          @550
  8473: 33 07 01                 a0 = 0x1
  8476: 01                       fallthrough
      :                          @551
  8477: 82 10 70                 ra = u64 [sp + 0x70]
  8480: 82 15 68                 s0 = u64 [sp + 0x68]
  8483: 82 16 60                 s1 = u64 [sp + 0x60]
  8486: 95 11 78                 sp = sp + 0x78
  8489: 32 00                    ret
      :                          @552 [@dyn 99]
  8491: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8494: 7b 10 20                 u64 [sp + 0x20] = ra
  8497: 7b 15 18                 u64 [sp + 0x18] = s0
  8500: 7b 16 10                 u64 [sp + 0x10] = s1
  8503: 82 75 10                 s0 = u64 [a0 + 0x10]
  8506: 7c 59                    a2 = u8 [s0]
  8508: 82 7b                    a4 = u64 [a0]
  8510: 82 76 08                 s1 = u64 [a0 + 0x8]
  8513: 51 09 33                 jump @556 if a2 == 0
      :                          @553
  8516: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8519: 7b 18 08                 u64 [sp + 0x8] = a1
  8522: 33 08 71 03 01           a1 = 0x10371
  8527: 33 09 04                 a2 = 0x4
  8530: 64 b7                    a0 = a4
  8532: 7b 1b                    u64 [sp] = a4
  8534: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @554 [@dyn 100]
  8539: 82 18 08                 a1 = u64 [sp + 0x8]
  8542: 82 1b                    a4 = u64 [sp]
  8544: 51 07 14                 jump @556 if a0 == 0
      :                          @555
  8547: 33 07 01                 a0 = 0x1
  8550: 82 10 20                 ra = u64 [sp + 0x20]
  8553: 82 15 18                 s0 = u64 [sp + 0x18]
  8556: 82 16 10                 s1 = u64 [sp + 0x10]
  8559: 95 11 28                 sp = sp + 0x28
  8562: 32 00                    ret
      :                          @556
  8564: 83 87                    i32 a0 = a1 + 0
  8566: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8569: 88 77 01                 a0 = a0 <u 0x1
  8572: 78 57                    u8 [s0] = a0
  8574: 82 6c 20                 a5 = u64 [s1 + 0x20]
  8577: 64 b7                    a0 = a4
  8579: 82 10 20                 ra = u64 [sp + 0x20]
  8582: 82 15 18                 s0 = u64 [sp + 0x18]
  8585: 82 16 10                 s1 = u64 [sp + 0x10]
  8588: 95 11 28                 sp = sp + 0x28
  8591: 32 0c                    jump [a5]
      :                          @557 [@dyn 101]
  8593: 64 8a                    a3 = a1
  8595: 33 08 d8 04 01           a1 = 0x104d8
  8600: 64 a9                    a2 = a3
  8602: 28 a0 fb                 jump @466
      :                          @558
  8605: 00                       trap
      :                          @559
  8606: 51 08 9b 00              jump @580 if a1 == 0
      :                          @560
  8610: 64 79                    a2 = a0
  8612: 7c 77                    a0 = u8 [a0]
  8614: 51 07 91 00              jump @579 if a0 == 0
      :                          @561
  8618: 51 27 ff 00 90 00        jump @581 if a0 == 255
      :                          @562
  8624: 6c 7a                    a3 = sext.b a0
  8626: 57 0a 09                 jump @564 if a3 <s 0
      :                          @563
  8629: 33 0a                    a3 = 0
  8631: 33 08                    a1 = 0
  8633: 28 73                    jump @578
      :                          @564
  8635: 55 27 c0 00 0d           jump @566 if a0 >=u 192
      :                          @565
  8640: 33 0a 01                 a3 = 0x1
  8643: 33 0b 80                 a4 = 0xffffffffffffff80
  8646: 28 4a                    jump @575
      :                          @566
  8648: 55 27 e0 00 0e           jump @568 if a0 >=u 224
      :                          @567
  8653: 33 0a 02                 a3 = 0x2
  8656: 33 0b 40 ff              a4 = 0xffffffffffffff40
  8660: 28 3c                    jump @575
      :                          @568
  8662: 55 27 f0 00 0e           jump @570 if a0 >=u 240
      :                          @569
  8667: 33 0a 03                 a3 = 0x3
  8670: 33 0b 20 ff              a4 = 0xffffffffffffff20
  8674: 28 2e                    jump @575
      :                          @570
  8676: 55 27 f8 00 0e           jump @572 if a0 >=u 248
      :                          @571
  8681: 33 0a 04                 a3 = 0x4
  8684: 33 0b 10 ff              a4 = 0xffffffffffffff10
  8688: 28 20                    jump @575
      :                          @572
  8690: 55 27 fc 00 0e           jump @574 if a0 >=u 252
      :                          @573
  8695: 33 0a 05                 a3 = 0x5
  8698: 33 0b 08 ff              a4 = 0xffffffffffffff08
  8702: 28 12                    jump @575
      :                          @574
  8704: 88 7a fe 00              a3 = a0 <u 0xfe
  8708: 33 0b 04 ff              a4 = 0xffffffffffffff04
  8712: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  8716: 85 aa 07                 a3 = a3 ^ 0x7
  8719: 01                       fallthrough
      :                          @575
  8720: ae 8a 2b                 jump @582 if a3 >=u a1
      :                          @576
  8723: 33 08                    a1 = 0
  8725: c8 b7 07                 a0 = a0 + a4
  8728: 64 ab                    a4 = a3
  8730: 01                       fallthrough
      :                          @577
  8731: c8 b9 0c                 a5 = a2 + a4
  8734: 7c cc                    a5 = u8 [a5]
  8736: 97 88 08                 a1 = a1 << 0x8
  8739: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  8742: d4 c8 08                 a1 = a1 | a5
  8745: 52 0b f2                 jump @577 if a4 != 0
      :                          @578
  8748: 8a a9 03                 i32 a2 = a3 << 0x3
  8751: cf 97 07                 a0 = a0 << a2
  8754: c8 87 07                 a0 = a0 + a1
  8757: 32 00                    ret
      :                          @579
  8759: 32 00                    ret
      :                          @580
  8761: 00                       trap
      :                          @581
  8762: 00                       trap
      :                          @582
  8763: 00                       trap
      :                          @583
  8764: 95 11 e8 fe              sp = sp + 0xfffffffffffffee8
  8768: 7b 10 10 01              u64 [sp + 0x110] = ra
  8772: 7b 15 08 01              u64 [sp + 0x108] = s0
  8776: 7b 16 00 01              u64 [sp + 0x100] = s1
  8780: 7b 17 08                 u64 [sp + 0x8] = a0
  8783: 78 18 17                 u8 [sp + 0x17] = a1
  8786: 7b 17 18                 u64 [sp + 0x18] = a0
  8789: 95 16 17                 s1 = sp + 0x17
  8792: 33 05 01                 s0 = 0x1
  8795: 95 17 17                 a0 = sp + 0x17
  8798: 33 08 01                 a1 = 0x1
  8801: 95 19 18                 a2 = sp + 0x18
  8804: 33 0a 08                 a3 = 0x8
  8807: 33 00 cc 00              ra = 0xcc
  8811: 0a 03                    ecalli 3 // 'write'
  8813: 01                       fallthrough
      :                          @584 [@dyn 102]
  8814: 7b 16 50                 u64 [sp + 0x50] = s1
  8817: 33 07 d2 00              a0 = 0xd2
  8821: 7b 17 58                 u64 [sp + 0x58] = a0
  8824: 95 17 08                 a0 = sp + 0x8
  8827: 7b 17 60                 u64 [sp + 0x60] = a0
  8830: 33 07 e0 00              a0 = 0xe0
  8834: 7b 17 68                 u64 [sp + 0x68] = a0
  8837: 49 11 70 02              u64 [sp + 112] = 0x2
  8841: 49 21 80 00 02           u64 [sp + 128] = 0x2
  8846: 49 21 90 00              u64 [sp + 144] = 0
  8850: 97 58 24                 a1 = s0 << 0x24
  8853: 95 88 20                 a1 = a1 + 0x20
  8856: 7b 18 98 00              u64 [sp + 0x98] = a1
  8860: 46 21 a0 00 03           u8 [sp + 160] = 0x3
  8865: 49 21 a8 00 02           u64 [sp + 168] = 0x2
  8870: 49 21 b8 00 02           u64 [sp + 184] = 0x2
  8875: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  8879: 7b 18 d0 00              u64 [sp + 0xd0] = a1
  8883: 46 21 d8 00 03           u8 [sp + 216] = 0x3
  8888: 33 08 08 05 01           a1 = 0x10508
  8893: 7b 18 20                 u64 [sp + 0x20] = a1
  8896: 49 11 28 02              u64 [sp + 40] = 0x2
  8900: 95 18 70                 a1 = sp + 0x70
  8903: 7b 18 40                 u64 [sp + 0x40] = a1
  8906: 49 11 48 02              u64 [sp + 72] = 0x2
  8910: 95 18 50                 a1 = sp + 0x50
  8913: 7b 18 30                 u64 [sp + 0x30] = a1
  8916: 49 11 38 02              u64 [sp + 56] = 0x2
  8920: 33 07 00 10              a0 = 0x1000
  8924: 33 06 20 00 03           s1 = 0x30020
  8929: c8 76 08                 a1 = s1 + a0
  8932: 01                       fallthrough
      :                          @585
  8933: 82 8a                    a3 = u64 [a1]
  8935: 95 a9 34                 a2 = a3 + 0x34
  8938: ac a9 b3 fe              jump @558 if a2 <u a3
      :                          @586
  8942: 95 9b 01                 a4 = a2 + 0x1
  8945: 88 bc 01                 a5 = a4 <u 0x1
  8948: d8 b7 0b                 a4 = a0 <u a4
  8951: d4 cb 0b                 a4 = a4 | a5
  8954: 52 0b a3 fe              jump @558 if a4 != 0
      :                          @587
  8958: 82 8b                    a4 = u64 [a1]
  8960: ab ab e5                 jump @585 if a4 != a3
      :                          @588
  8963: 7b 89                    u64 [a1] = a2
  8965: 33 0c                    a5 = 0
  8967: 7b 16                    u64 [sp] = s1
  8969: c9 96 07                 a0 = s1 - a2
  8972: 95 77 00 10              a0 = a0 + 0x1000
  8976: 49 21 e0 00 34           u64 [sp + 224] = 0x34
  8981: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  8985: 49 21 f0 00              u64 [sp + 240] = 0
  8989: 33 08 a8 04 01           a1 = 0x104a8
  8994: 95 17 e0 00              a0 = sp + 0xe0
  8998: 95 19 20                 a2 = sp + 0x20
  9001: 50 20 ce 00 11 fa        ra = 206, jump @466
      :                          @589 [@dyn 103]
  9007: 52 07 59                 jump @598 if a0 != 0
      :                          @590
  9010: 82 15 e8 00              s0 = u64 [sp + 0xe8]
  9014: 82 1b f0 00              a4 = u64 [sp + 0xf0]
  9018: 82 16 e0 00              s1 = u64 [sp + 0xe0]
  9022: 33 07 02                 a0 = 0x2
  9025: 33 08                    a1 = 0
  9027: 33 09                    a2 = 0
  9029: 64 5a                    a3 = s0
  9031: 33 00 d0 00              ra = 0xd0
  9035: 0a 64                    ecalli 100 // 'log'
  9037: 01                       fallthrough
      :                          @591 [@dyn 104]
  9038: 33 07 00 f0              a0 = 0xfffffffffffff000
  9042: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
  9046: ac 78 20                 jump @597 if a1 <u a0
      :                          @592
  9049: 82 18                    a1 = u64 [sp]
  9051: 95 87 00 10              a0 = a1 + 0x1000
  9055: 01                       fallthrough
      :                          @593
  9056: 82 78                    a1 = u64 [a0]
  9058: c9 87 09                 a2 = a0 - a1
  9061: ab 59 11                 jump @597 if a2 != s0
      :                          @594
  9064: c9 68 09                 a2 = a1 - s1
  9067: 01                       fallthrough
      :                          @595
  9068: 82 7a                    a3 = u64 [a0]
  9070: ab 8a f2                 jump @593 if a3 != a1
      :                          @596
  9073: 7b 79                    u64 [a0] = a2
  9075: 33 0b                    a4 = 0
  9077: 01                       fallthrough
      :                          @597
  9078: 82 10 10 01              ra = u64 [sp + 0x110]
  9082: 82 15 08 01              s0 = u64 [sp + 0x108]
  9086: 82 16 00 01              s1 = u64 [sp + 0x100]
  9090: 95 11 18 01              sp = sp + 0x118
  9094: 32 00                    ret
      :                          @598
  9096: 00                       trap
      :                          @599 [@dyn 105]
  9097: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  9101: 7b 10 90 00              u64 [sp + 0x90] = ra
  9105: 7b 15 88 00              u64 [sp + 0x88] = s0
  9109: 7b 16 80 00              u64 [sp + 0x80] = s1
  9113: 64 85                    s0 = a1
  9115: 82 86 28                 s1 = u64 [a1 + 0x28]
  9118: 82 8a 20                 a3 = u64 [a1 + 0x20]
  9121: 82 6b 18                 a4 = u64 [s1 + 0x18]
  9124: 7b 17 10                 u64 [sp + 0x10] = a0
  9127: 33 08 60 03 01           a1 = 0x10360
  9132: 33 09 01                 a2 = 0x1
  9135: 7b 1a 18                 u64 [sp + 0x18] = a3
  9138: 64 a7                    a0 = a3
  9140: 7b 1b 08                 u64 [sp + 0x8] = a4
  9143: b4 b0 02 d4 00           ra = 212, jump [a4]
      :                          @600 [@dyn 106]
  9148: 51 07 09                 jump @602 if a0 == 0
      :                          @601
  9151: 33 09 01                 a2 = 0x1
  9154: 28 d3 00                 jump @614
      :                          @602
  9157: 80 58 34                 a1 = u32 [s0 + 0x34]
  9160: 84 87 04                 a0 = a1 & 0x4
  9163: 52 07 21                 jump @606 if a0 != 0
      :                          @603
  9166: 82 17 10                 a0 = u64 [sp + 0x10]
  9169: 64 58                    a1 = s0
  9171: 50 20 d6 00 96 01        ra = 214, jump @629
      :                          @604 [@dyn 107]
  9177: 33 09 01                 a2 = 0x1
  9180: 52 07 b9 00              jump @614 if a0 != 0
      :                          @605
  9184: 82 57 28                 a0 = u64 [s0 + 0x28]
  9187: 82 5a 20                 a3 = u64 [s0 + 0x20]
  9190: 82 7b 18                 a4 = u64 [a0 + 0x18]
  9193: 28 9a 00                 jump @612
      :                          @606
  9196: 7b 18                    u64 [sp] = a1
  9198: 33 08 7b 03 01           a1 = 0x1037b
  9203: 33 09 01                 a2 = 0x1
  9206: 82 17 18                 a0 = u64 [sp + 0x18]
  9209: 82 1a 08                 a3 = u64 [sp + 0x8]
  9212: b4 a0 02 d8 00           ra = 216, jump [a3]
      :                          @607 [@dyn 108]
  9217: 33 09 01                 a2 = 0x1
  9220: 82 18 18                 a1 = u64 [sp + 0x18]
  9223: 52 07 8e 00              jump @614 if a0 != 0
      :                          @608
  9227: 46 11 3f 01              u8 [sp + 63] = 0x1
  9231: 7b 18 20                 u64 [sp + 0x20] = a1
  9234: 7b 16 28                 u64 [sp + 0x28] = s1
  9237: 95 17 3f                 a0 = sp + 0x3f
  9240: 7b 17 30                 u64 [sp + 0x30] = a0
  9243: 81 57 30                 a0 = i32 [s0 + 0x30]
  9246: 7c 58 38                 a1 = u8 [s0 + 0x38]
  9249: 82 59                    a2 = u64 [s0]
  9251: 82 5a 08                 a3 = u64 [s0 + 0x8]
  9254: 82 5b 10                 a4 = u64 [s0 + 0x10]
  9257: 82 5c 18                 a5 = u64 [s0 + 0x18]
  9260: 82 16                    s1 = u64 [sp]
  9262: 7a 16 74                 u32 [sp + 0x74] = s1
  9265: 7a 17 70                 u32 [sp + 0x70] = a0
  9268: 78 18 78                 u8 [sp + 0x78] = a1
  9271: 7b 19 40                 u64 [sp + 0x40] = a2
  9274: 7b 1a 48                 u64 [sp + 0x48] = a3
  9277: 7b 1b 50                 u64 [sp + 0x50] = a4
  9280: 7b 1c 58                 u64 [sp + 0x58] = a5
  9283: 95 17 20                 a0 = sp + 0x20
  9286: 7b 17 60                 u64 [sp + 0x60] = a0
  9289: 33 07 d8 04 01           a0 = 0x104d8
  9294: 7b 17 68                 u64 [sp + 0x68] = a0
  9297: 95 18 40                 a1 = sp + 0x40
  9300: 82 17 10                 a0 = u64 [sp + 0x10]
  9303: 50 20 da 00 12 01        ra = 218, jump @629
      :                          @609 [@dyn 109]
  9309: 52 07 62 ff              jump @601 if a0 != 0
      :                          @610
  9313: 82 18 68                 a1 = u64 [sp + 0x68]
  9316: 82 17 60                 a0 = u64 [sp + 0x60]
  9319: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9322: 33 08 79 03 01           a1 = 0x10379
  9327: 33 09 02                 a2 = 0x2
  9330: b4 a0 02 dc 00           ra = 220, jump [a3]
      :                          @611 [@dyn 110]
  9335: 82 1a 18                 a3 = u64 [sp + 0x18]
  9338: 82 1b 08                 a4 = u64 [sp + 0x8]
  9341: 33 09 01                 a2 = 0x1
  9344: 52 07 15                 jump @614 if a0 != 0
      :                          @612
  9347: 33 08 7c 03 01           a1 = 0x1037c
  9352: 33 09 01                 a2 = 0x1
  9355: 64 a7                    a0 = a3
  9357: b4 b0 02 de 00           ra = 222, jump [a4]
      :                          @613 [@dyn 111]
  9362: 64 79                    a2 = a0
  9364: 01                       fallthrough
      :                          @614
  9365: 64 97                    a0 = a2
  9367: 82 10 90 00              ra = u64 [sp + 0x90]
  9371: 82 15 88 00              s0 = u64 [sp + 0x88]
  9375: 82 16 80 00              s1 = u64 [sp + 0x80]
  9379: 95 11 98 00              sp = sp + 0x98
  9383: 32 00                    ret
      :                          @615 [@dyn 112]
  9385: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  9389: 7b 10 80 00              u64 [sp + 0x80] = ra
  9393: 80 89 34                 a2 = u32 [a1 + 0x34]
  9396: 84 9a 10                 a3 = a2 & 0x10
  9399: 52 0a 16                 jump @618 if a3 != 0
      :                          @616
  9402: 84 99 20                 a2 = a2 & 0x20
  9405: 52 09 51                 jump @622 if a2 != 0
      :                          @617
  9408: 82 77                    a0 = u64 [a0]
  9410: 82 10 80 00              ra = u64 [sp + 0x80]
  9414: 95 11 88 00              sp = sp + 0x88
  9418: 28 da f4                 jump @404
      :                          @618
  9421: 82 7b                    a4 = u64 [a0]
  9423: 33 09 81 00              a2 = 0x81
  9427: 95 17 7f                 a0 = sp + 0x7f
  9430: 33 02 57                 t0 = 0x57
  9433: 01                       fallthrough
      :                          @619
  9434: 64 9c                    a5 = a2
  9436: 98 ba 04                 a3 = a4 >> 0x4
  9439: 84 bb 0f                 a4 = a4 & 0xf
  9442: 88 b3 0a                 t1 = a4 <u 0xa
  9445: 33 09 30                 a2 = 0x30
  9448: da 32 09                 a2 = t0 if t1 == 0
  9451: be b9 09                 i32 a2 = a2 + a4
  9454: 78 79                    u8 [a0] = a2
  9456: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9459: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
  9462: 64 ab                    a4 = a3
  9464: 52 0a e2                 jump @619 if a3 != 0
      :                          @620
  9467: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  9470: 56 27 80 00 6a           jump @628 if a0 >u 128
      :                          @621
  9475: 9a 9b 81 00              a4 = 0x81 - a2
  9479: 64 1a                    a3 = sp
  9481: c8 7a 0a                 a3 = a3 + a0
  9484: 28 42                    jump @626
      :                          @622
  9486: 82 7b                    a4 = u64 [a0]
  9488: 33 09 81 00              a2 = 0x81
  9492: 95 17 7f                 a0 = sp + 0x7f
  9495: 33 02 37                 t0 = 0x37
  9498: 01                       fallthrough
      :                          @623
  9499: 64 9c                    a5 = a2
  9501: 98 ba 04                 a3 = a4 >> 0x4
  9504: 84 bb 0f                 a4 = a4 & 0xf
  9507: 88 b3 0a                 t1 = a4 <u 0xa
  9510: 33 09 30                 a2 = 0x30
  9513: da 32 09                 a2 = t0 if t1 == 0
  9516: be b9 09                 i32 a2 = a2 + a4
  9519: 78 79                    u8 [a0] = a2
  9521: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9524: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
  9527: 64 ab                    a4 = a3
  9529: 52 0a e2                 jump @623 if a3 != 0
      :                          @624
  9532: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  9535: 56 27 80 00 29           jump @628 if a0 >u 128
      :                          @625
  9540: 9a 9b 81 00              a4 = 0x81 - a2
  9544: 64 1a                    a3 = sp
  9546: c8 7a 0a                 a3 = a3 + a0
  9549: 01                       fallthrough
      :                          @626
  9550: 33 09 02                 a2 = 0x2
  9553: 64 87                    a0 = a1
  9555: 33 08 7d 03 01           a1 = 0x1037d
  9560: 50 20 e2 00 69 f5        ra = 226, jump @414
      :                          @627 [@dyn 113]
  9566: 82 10 80 00              ra = u64 [sp + 0x80]
  9570: 95 11 88 00              sp = sp + 0x88
  9574: 32 00                    ret
      :                          @628
  9576: 00                       trap
      :                          @629
  9577: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  9581: 7b 10 80 00              u64 [sp + 0x80] = ra
  9585: 80 89 34                 a2 = u32 [a1 + 0x34]
  9588: 84 9a 10                 a3 = a2 & 0x10
  9591: 52 0a 16                 jump @632 if a3 != 0
      :                          @630
  9594: 84 99 20                 a2 = a2 & 0x20
  9597: 52 09 52                 jump @636 if a2 != 0
      :                          @631
  9600: 7c 77                    a0 = u8 [a0]
  9602: 82 10 80 00              ra = u64 [sp + 0x80]
  9606: 95 11 88 00              sp = sp + 0x88
  9610: 28 1a f4                 jump @404
      :                          @632
  9613: 7c 77                    a0 = u8 [a0]
  9615: 33 0b 81 00              a4 = 0x81
  9619: 95 19 7f                 a2 = sp + 0x7f
  9622: 33 02 57                 t0 = 0x57
  9625: 01                       fallthrough
      :                          @633
  9626: 64 bc                    a5 = a4
  9628: 84 7b 0f                 a4 = a0 & 0xf
  9631: 97 77 38                 a0 = a0 << 0x38
  9634: 98 77 3c                 a0 = a0 >> 0x3c
  9637: 88 b3 0a                 t1 = a4 <u 0xa
  9640: 33 0a 30                 a3 = 0x30
  9643: da 32 0a                 a3 = t0 if t1 == 0
  9646: be ba 0a                 i32 a3 = a3 + a4
  9649: 78 9a                    u8 [a2] = a3
  9651: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  9654: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  9657: 52 07 e1                 jump @633 if a0 != 0
      :                          @634
  9660: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  9663: 56 27 80 00 6b           jump @642 if a0 >u 128
      :                          @635
  9668: 9a bb 81 00              a4 = 0x81 - a4
  9672: 64 1a                    a3 = sp
  9674: c8 7a 0a                 a3 = a3 + a0
  9677: 28 43                    jump @640
      :                          @636
  9679: 7c 77                    a0 = u8 [a0]
  9681: 33 0b 81 00              a4 = 0x81
  9685: 95 19 7f                 a2 = sp + 0x7f
  9688: 33 02 37                 t0 = 0x37
  9691: 01                       fallthrough
      :                          @637
  9692: 64 bc                    a5 = a4
  9694: 84 7b 0f                 a4 = a0 & 0xf
  9697: 97 77 38                 a0 = a0 << 0x38
  9700: 98 77 3c                 a0 = a0 >> 0x3c
  9703: 88 b3 0a                 t1 = a4 <u 0xa
  9706: 33 0a 30                 a3 = 0x30
  9709: da 32 0a                 a3 = t0 if t1 == 0
  9712: be ba 0a                 i32 a3 = a3 + a4
  9715: 78 9a                    u8 [a2] = a3
  9717: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  9720: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  9723: 52 07 e1                 jump @637 if a0 != 0
      :                          @638
  9726: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  9729: 56 27 80 00 29           jump @642 if a0 >u 128
      :                          @639
  9734: 9a bb 81 00              a4 = 0x81 - a4
  9738: 64 1a                    a3 = sp
  9740: c8 7a 0a                 a3 = a3 + a0
  9743: 01                       fallthrough
      :                          @640
  9744: 33 09 02                 a2 = 0x2
  9747: 64 87                    a0 = a1
  9749: 33 08 7d 03 01           a1 = 0x1037d
  9754: 50 20 e4 00 a7 f4        ra = 228, jump @414
      :                          @641 [@dyn 114]
  9760: 82 10 80 00              ra = u64 [sp + 0x80]
  9764: 95 11 88 00              sp = sp + 0x88
  9768: 32 00                    ret
      :                          @642
  9770: 00                       trap
